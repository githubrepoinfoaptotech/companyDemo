[{"D:\\Checking\\job-portal\\src\\index.js":"1","D:\\Checking\\job-portal\\src\\context\\LayoutContext.js":"2","D:\\Checking\\job-portal\\src\\context\\UserContext.js":"3","D:\\Checking\\job-portal\\src\\components\\App.js":"4","D:\\Checking\\job-portal\\src\\themes\\index.js":"5","D:\\Checking\\job-portal\\src\\pages\\register\\Register.js":"6","D:\\Checking\\job-portal\\src\\pages\\register\\companyRegister.js":"7","D:\\Checking\\job-portal\\src\\pages\\register\\candidateCPV.js":"8","D:\\Checking\\job-portal\\src\\pages\\share\\Shortlist.js":"9","D:\\Checking\\job-portal\\src\\pages\\login\\author269.js":"10","D:\\Checking\\job-portal\\src\\pages\\login\\Login.js":"11","D:\\Checking\\job-portal\\src\\pages\\forget\\Forget.js":"12","D:\\Checking\\job-portal\\src\\components\\Layout\\Layout.js":"13","D:\\Checking\\job-portal\\src\\themes\\default.js":"14","D:\\Checking\\job-portal\\src\\pages\\login\\styles.js":"15","D:\\Checking\\job-portal\\src\\components\\Notification\\Notification.js":"16","D:\\Checking\\job-portal\\src\\components\\Notification\\styles.js":"17","D:\\Checking\\job-portal\\src\\components\\Wrappers\\Wrappers.js":"18","D:\\Checking\\job-portal\\src\\pages\\others\\dashboard\\Offered.js":"19","D:\\Checking\\job-portal\\src\\pages\\others\\dashboard\\SalaryBreakup.js":"20","D:\\Checking\\job-portal\\src\\pages\\others\\dashboard\\OfferedDeclined.js":"21","D:\\Checking\\job-portal\\src\\pages\\others\\dashboard\\ScheduleInterview.js":"22","D:\\Checking\\job-portal\\src\\pages\\others\\dashboard\\YetToJoin.js":"23","D:\\Checking\\job-portal\\src\\pages\\others\\dashboard\\InterviewScheduled.js":"24","D:\\Checking\\job-portal\\src\\pages\\others\\dashboard\\Joined.js":"25","D:\\Checking\\job-portal\\src\\pages\\others\\dashboard\\FinalInterviewCompleted.js":"26","D:\\Checking\\job-portal\\src\\pages\\others\\dashboard\\FinalInterviewScheduled.js":"27","D:\\Checking\\job-portal\\src\\pages\\others\\dashboard\\DocumentColleted.js":"28","D:\\Checking\\job-portal\\src\\pages\\others\\dashboard\\Stc.js":"29","D:\\Checking\\job-portal\\src\\pages\\others\\dashboard\\New.js":"30","D:\\Checking\\job-portal\\src\\pages\\others\\Requirements.js":"31","D:\\Checking\\job-portal\\src\\pages\\others\\Candidates.js":"32","D:\\Checking\\job-portal\\src\\pages\\admin\\reports\\Drop.js":"33","D:\\Checking\\job-portal\\src\\pages\\admin\\reports\\CreditNotes.js":"34","D:\\Checking\\job-portal\\src\\pages\\admin\\reports\\Invoiced.js":"35","D:\\Checking\\job-portal\\src\\pages\\admin\\reports\\Ditched.js":"36","D:\\Checking\\job-portal\\src\\pages\\admin\\reports\\OfferedDeclined.js":"37","D:\\Checking\\job-portal\\src\\pages\\admin\\reports\\SalaryBreakup.js":"38","D:\\Checking\\job-portal\\src\\pages\\admin\\reports\\Joined.js":"39","D:\\Checking\\job-portal\\src\\pages\\admin\\reports\\Offered.js":"40","D:\\Checking\\job-portal\\src\\pages\\admin\\reports\\FinalInterviewCompleted.js":"41","D:\\Checking\\job-portal\\src\\pages\\admin\\reports\\DocumentColleted.js":"42","D:\\Checking\\job-portal\\src\\pages\\admin\\reports\\ScheduleInterview.js":"43","D:\\Checking\\job-portal\\src\\pages\\admin\\reports\\Stc.js":"44","D:\\Checking\\job-portal\\src\\pages\\recruiter\\dashboard\\YetToJoin.js":"45","D:\\Checking\\job-portal\\src\\pages\\recruiter\\dashboard\\OfferedDeclined.js":"46","D:\\Checking\\job-portal\\src\\pages\\recruiter\\dashboard\\Offered.js":"47","D:\\Checking\\job-portal\\src\\pages\\recruiter\\dashboard\\Joined.js":"48","D:\\Checking\\job-portal\\src\\pages\\recruiter\\dashboard\\InterviewScheduled.js":"49","D:\\Checking\\job-portal\\src\\pages\\recruiter\\dashboard\\FinalInterviewScheduled.js":"50","D:\\Checking\\job-portal\\src\\pages\\recruiter\\dashboard\\ScheduleInterview.js":"51","D:\\Checking\\job-portal\\src\\pages\\recruiter\\dashboard\\SalaryBreakup.js":"52","D:\\Checking\\job-portal\\src\\pages\\recruiter\\dashboard\\FinalInterviewCompleted.js":"53","D:\\Checking\\job-portal\\src\\pages\\recruiter\\dashboard\\Stc.js":"54","D:\\Checking\\job-portal\\src\\pages\\recruiter\\dashboard\\DocumentColleted.js":"55","D:\\Checking\\job-portal\\src\\pages\\recruiter\\dashboard\\New.js":"56","D:\\Checking\\job-portal\\src\\themes\\style.js":"57","D:\\Checking\\job-portal\\src\\pages\\cc\\dashboard\\Offered.js":"58","D:\\Checking\\job-portal\\src\\pages\\cc\\dashboard\\SalaryBreakup.js":"59","D:\\Checking\\job-portal\\src\\pages\\cc\\dashboard\\Joined.js":"60","D:\\Checking\\job-portal\\src\\pages\\cc\\dashboard\\ScheduleInterview.js":"61","D:\\Checking\\job-portal\\src\\pages\\cc\\dashboard\\OfferedDeclined.js":"62","D:\\Checking\\job-portal\\src\\pages\\cc\\dashboard\\YetToJoin.js":"63","D:\\Checking\\job-portal\\src\\components\\Others\\Layout.js":"64","D:\\Checking\\job-portal\\src\\components\\Candidates\\ExpandButton.js":"65","D:\\Checking\\job-portal\\src\\components\\Candidates\\Dialogs.js":"66","D:\\Checking\\job-portal\\src\\components\\Candidates\\Bar.js":"67","D:\\Checking\\job-portal\\src\\components\\Candidates\\View.js":"68","D:\\Checking\\job-portal\\src\\components\\Candidates\\Edit.js":"69","D:\\Checking\\job-portal\\src\\components\\Candidates\\Add.js":"70","D:\\Checking\\job-portal\\src\\components\\Admin\\ReportLayout.js":"71","D:\\Checking\\job-portal\\src\\components\\Recruiter\\SearchStatus.js":"72","D:\\Checking\\job-portal\\src\\components\\Recruiter\\Layout.js":"73","D:\\Checking\\job-portal\\src\\components\\PageTitle\\PageTitle.js":"74","D:\\Checking\\job-portal\\src\\components\\Recruiter\\Reverse.js":"75","D:\\Checking\\job-portal\\src\\components\\Candidates\\Message.js":"76","D:\\Checking\\job-portal\\src\\components\\Recruiter\\Status.js":"77","D:\\Checking\\job-portal\\src\\components\\Candidates\\Drop.js":"78","D:\\Checking\\job-portal\\src\\components\\Recruiter\\Dialogs.js":"79","D:\\Checking\\job-portal\\src\\components\\Candidates\\Note.js":"80","D:\\Checking\\job-portal\\src\\components\\Candidates\\Actions.js":"81","D:\\Checking\\job-portal\\src\\components\\PageTitle\\styles.js":"82","D:\\Checking\\job-portal\\src\\components\\Layout\\styles.js":"83","D:\\Checking\\job-portal\\src\\pages\\cc\\dashboard\\DocumentColleted.js":"84","D:\\Checking\\job-portal\\src\\pages\\cc\\dashboard\\New.js":"85","D:\\Checking\\job-portal\\src\\pages\\chat\\Singlechat.js":"86","D:\\Checking\\job-portal\\src\\pages\\cc\\dashboard\\FinalInterviewScheduled.js":"87","D:\\Checking\\job-portal\\src\\pages\\cc\\Candidates.js":"88","D:\\Checking\\job-portal\\src\\pages\\cc\\dashboard\\InterviewScheduled.js":"89","D:\\Checking\\job-portal\\src\\pages\\cc\\dashboard\\FinalInterviewCompleted.js":"90","D:\\Checking\\job-portal\\src\\pages\\recruiter\\Candidates.js":"91","D:\\Checking\\job-portal\\src\\pages\\cc\\dashboard\\Stc.js":"92","D:\\Checking\\job-portal\\src\\pages\\admin\\AssignedCandidates.js":"93","D:\\Checking\\job-portal\\src\\pages\\admin\\Candidates.js":"94","D:\\Checking\\job-portal\\src\\pages\\admin\\Share.js":"95","D:\\Checking\\job-portal\\src\\pages\\recruiter\\Search.js":"96","D:\\Checking\\job-portal\\src\\pages\\requirements\\Requirements.js":"97","D:\\Checking\\job-portal\\src\\pages\\admin\\dashboard\\YetToJoin.js":"98","D:\\Checking\\job-portal\\src\\pages\\admin\\dashboard\\SalaryBreakup.js":"99","D:\\Checking\\job-portal\\src\\pages\\admin\\dashboard\\FinalInterviewCompleted.js":"100","D:\\Checking\\job-portal\\src\\pages\\admin\\dashboard\\Offered.js":"101","D:\\Checking\\job-portal\\src\\pages\\admin\\dashboard\\DocumentColleted.js":"102","D:\\Checking\\job-portal\\src\\pages\\requirements\\AssignRequirements.js":"103","D:\\Checking\\job-portal\\src\\pages\\admin\\dashboard\\FinalInterviewScheduled.js":"104","D:\\Checking\\job-portal\\src\\pages\\admin\\dashboard\\New.js":"105","D:\\Checking\\job-portal\\src\\pages\\admin\\dashboard\\Joined.js":"106","D:\\Checking\\job-portal\\src\\pages\\admin\\dashboard\\InterviewScheduled.js":"107","D:\\Checking\\job-portal\\src\\pages\\admin\\dashboard\\Stc.js":"108","D:\\Checking\\job-portal\\src\\pages\\admin\\dashboard\\ScheduleInterview.js":"109","D:\\Checking\\job-portal\\src\\pages\\activity\\FreeMsgActivity.js":"110","D:\\Checking\\job-portal\\src\\pages\\activity\\CandidateActivity.js":"111","D:\\Checking\\job-portal\\src\\pages\\activity\\Activity.js":"112","D:\\Checking\\job-portal\\src\\pages\\transaction\\components\\Pdf.js":"113","D:\\Checking\\job-portal\\src\\pages\\forget\\styles.js":"114","D:\\Checking\\job-portal\\src\\pages\\transaction\\Transaction.js":"115","D:\\Checking\\job-portal\\src\\pages\\chat\\Chat.js":"116","D:\\Checking\\job-portal\\src\\pages\\contact\\Contact.js":"117","D:\\Checking\\job-portal\\src\\pages\\price\\Price.js":"118","D:\\Checking\\job-portal\\src\\pages\\company\\Company.js":"119","D:\\Checking\\job-portal\\src\\pages\\plans\\Plans.js":"120","D:\\Checking\\job-portal\\src\\pages\\invoice\\Invoice.js":"121","D:\\Checking\\job-portal\\src\\pages\\ticket\\Ticket.js":"122","D:\\Checking\\job-portal\\src\\pages\\adminUser\\Admin.js":"123","D:\\Checking\\job-portal\\src\\pages\\source\\Source.js":"124","D:\\Checking\\job-portal\\src\\pages\\users\\Users.js":"125","D:\\Checking\\job-portal\\src\\pages\\clients\\Clients.js":"126","D:\\Checking\\job-portal\\src\\pages\\dashboard\\Dashboard.js":"127","D:\\Checking\\job-portal\\src\\components\\Sidebar\\Sidebar.js":"128","D:\\Checking\\job-portal\\src\\components\\Header\\Header.js":"129","D:\\Checking\\job-portal\\src\\pages\\share\\Sidebar\\styles.js":"130","D:\\Checking\\job-portal\\src\\components\\Admin\\AssignAdd.js":"131","D:\\Checking\\job-portal\\src\\components\\Candidates\\Search.js":"132","D:\\Checking\\job-portal\\src\\components\\Sidebar\\styles.js":"133","D:\\Checking\\job-portal\\src\\components\\Candidates\\AddRequirements.js":"134","D:\\Checking\\job-portal\\src\\components\\Admin\\AddClient.js":"135","D:\\Checking\\job-portal\\src\\components\\Admin\\AddUser.js":"136","D:\\Checking\\job-portal\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js":"137","D:\\Checking\\job-portal\\src\\pages\\dashboard\\styles.js":"138","D:\\Checking\\job-portal\\src\\pages\\chat\\styles.js":"139","D:\\Checking\\job-portal\\src\\components\\Admin\\Layout.js":"140","D:\\Checking\\job-portal\\src\\components\\Candidates\\SearchLayout.js":"141","D:\\Checking\\job-portal\\src\\components\\Admin\\Reverse.js":"142","D:\\Checking\\job-portal\\src\\components\\Admin\\Dialogs.js":"143","D:\\Checking\\job-portal\\src\\components\\Admin\\Status.js":"144","D:\\Checking\\job-portal\\src\\components\\Sidebar\\components\\Dot.js":"145","D:\\Checking\\job-portal\\src\\pages\\share\\Share.js":"146","D:\\Checking\\job-portal\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js":"147","D:\\Checking\\job-portal\\src\\pages\\share\\Header.js":"148","D:\\Checking\\job-portal\\src\\pages\\register\\DrawerComp.js":"149","D:\\Checking\\job-portal\\src\\pages\\share\\Sidebar\\Sidebar.js":"150","D:\\Checking\\job-portal\\src\\components\\Admin\\SearchStatus.js":"151","D:\\Checking\\job-portal\\src\\pages\\share\\Sidebar\\components\\SidebarLink\\SidebarLink.js":"152","D:\\Checking\\job-portal\\src\\pages\\share\\Sidebar\\components\\Dot.js":"153","D:\\Checking\\job-portal\\src\\pages\\share\\Sidebar\\components\\SidebarLink\\styles.js":"154","D:\\RecruiterCommunity\\refo-Front\\src\\index.js":"155","D:\\RecruiterCommunity\\refo-Front\\src\\context\\UserContext.js":"156","D:\\RecruiterCommunity\\refo-Front\\src\\context\\LayoutContext.js":"157","D:\\RecruiterCommunity\\refo-Front\\src\\components\\App.js":"158","D:\\RecruiterCommunity\\refo-Front\\src\\themes\\index.js":"159","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\register\\Register.js":"160","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\register\\companyRegister.js":"161","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\share\\Shortlist.js":"162","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\register\\candidateCPV.js":"163","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\login\\author269.js":"164","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\login\\Login.js":"165","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\forget\\Forget.js":"166","D:\\RecruiterCommunity\\refo-Front\\src\\components\\Layout\\Layout.js":"167","D:\\RecruiterCommunity\\refo-Front\\src\\themes\\default.js":"168","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\login\\styles.js":"169","D:\\RecruiterCommunity\\refo-Front\\src\\components\\Notification\\Notification.js":"170","D:\\RecruiterCommunity\\refo-Front\\src\\components\\Notification\\styles.js":"171","D:\\RecruiterCommunity\\refo-Front\\src\\components\\Wrappers\\Wrappers.js":"172","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\others\\Requirements.js":"173","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\others\\Candidates.js":"174","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\others\\dashboard\\Offered.js":"175","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\others\\dashboard\\OfferedDeclined.js":"176","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\others\\dashboard\\SalaryBreakup.js":"177","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\others\\dashboard\\Joined.js":"178","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\others\\dashboard\\YetToJoin.js":"179","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\others\\dashboard\\FinalInterviewScheduled.js":"180","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\others\\dashboard\\ScheduleInterview.js":"181","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\others\\dashboard\\DocumentColleted.js":"182","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\others\\dashboard\\New.js":"183","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\others\\dashboard\\FinalInterviewCompleted.js":"184","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\others\\dashboard\\Stc.js":"185","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\others\\dashboard\\InterviewScheduled.js":"186","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\recruiter\\dashboard\\Joined.js":"187","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\recruiter\\dashboard\\YetToJoin.js":"188","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\recruiter\\dashboard\\OfferedDeclined.js":"189","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\recruiter\\dashboard\\SalaryBreakup.js":"190","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\recruiter\\dashboard\\InterviewScheduled.js":"191","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\admin\\reports\\Invoiced.js":"192","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\recruiter\\dashboard\\Offered.js":"193","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\admin\\reports\\Drop.js":"194","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\admin\\reports\\CreditNotes.js":"195","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\admin\\reports\\DocumentColleted.js":"196","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\admin\\reports\\FinalInterviewCompleted.js":"197","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\admin\\reports\\SalaryBreakup.js":"198","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\admin\\reports\\Stc.js":"199","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\admin\\reports\\Joined.js":"200","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\admin\\reports\\OfferedDeclined.js":"201","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\admin\\reports\\ScheduleInterview.js":"202","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\admin\\reports\\Ditched.js":"203","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\admin\\reports\\Offered.js":"204","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\recruiter\\dashboard\\FinalInterviewCompleted.js":"205","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\recruiter\\dashboard\\ScheduleInterview.js":"206","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\recruiter\\dashboard\\Stc.js":"207","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\recruiter\\dashboard\\New.js":"208","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\recruiter\\dashboard\\FinalInterviewScheduled.js":"209","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\recruiter\\dashboard\\DocumentColleted.js":"210","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\recruiter\\Search.js":"211","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\admin\\Share.js":"212","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\admin\\AssignedCandidates.js":"213","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\recruiter\\Candidates.js":"214","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\activity\\Activity.js":"215","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\activity\\CandidateActivity.js":"216","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\admin\\Candidates.js":"217","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\requirements\\AssignRequirements.js":"218","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\activity\\FreeMsgActivity.js":"219","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\cc\\Candidates.js":"220","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\requirements\\Requirements.js":"221","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\cc\\dashboard\\YetToJoin.js":"222","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\cc\\dashboard\\OfferedDeclined.js":"223","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\cc\\dashboard\\SalaryBreakup.js":"224","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\cc\\dashboard\\ScheduleInterview.js":"225","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\cc\\dashboard\\Offered.js":"226","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\cc\\dashboard\\FinalInterviewCompleted.js":"227","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\cc\\dashboard\\Stc.js":"228","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\cc\\dashboard\\DocumentColleted.js":"229","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\cc\\dashboard\\New.js":"230","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\admin\\dashboard\\YetToJoin.js":"231","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\cc\\dashboard\\InterviewScheduled.js":"232","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\cc\\dashboard\\Joined.js":"233","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\admin\\dashboard\\SalaryBreakup.js":"234","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\admin\\dashboard\\Joined.js":"235","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\admin\\dashboard\\FinalInterviewScheduled.js":"236","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\admin\\dashboard\\FinalInterviewCompleted.js":"237","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\cc\\dashboard\\FinalInterviewScheduled.js":"238","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\admin\\dashboard\\ScheduleInterview.js":"239","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\admin\\dashboard\\Stc.js":"240","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\admin\\dashboard\\DocumentColleted.js":"241","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\admin\\dashboard\\New.js":"242","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\transaction\\components\\Pdf.js":"243","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\chat\\Singlechat.js":"244","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\admin\\dashboard\\InterviewScheduled.js":"245","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\admin\\dashboard\\Offered.js":"246","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\transaction\\Transaction.js":"247","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\chat\\Chat.js":"248","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\contact\\Contact.js":"249","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\plans\\Plans.js":"250","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\company\\Company.js":"251","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\ticket\\Ticket.js":"252","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\invoice\\Invoice.js":"253","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\price\\Price.js":"254","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\source\\Source.js":"255","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\users\\Users.js":"256","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\adminUser\\Admin.js":"257","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\clients\\Clients.js":"258","D:\\RecruiterCommunity\\refo-Front\\src\\components\\Sidebar\\Sidebar.js":"259","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\dashboard\\Dashboard.js":"260","D:\\RecruiterCommunity\\refo-Front\\src\\components\\Admin\\ReportLayout.js":"261","D:\\RecruiterCommunity\\refo-Front\\src\\components\\Recruiter\\Layout.js":"262","D:\\RecruiterCommunity\\refo-Front\\src\\themes\\style.js":"263","D:\\RecruiterCommunity\\refo-Front\\src\\components\\Admin\\Layout.js":"264","D:\\RecruiterCommunity\\refo-Front\\src\\components\\Candidates\\AddRequirements.js":"265","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\chat\\styles.js":"266","D:\\RecruiterCommunity\\refo-Front\\src\\components\\Candidates\\Dialogs.js":"267","D:\\RecruiterCommunity\\refo-Front\\src\\components\\Recruiter\\Reverse.js":"268","D:\\RecruiterCommunity\\refo-Front\\src\\components\\Candidates\\ExpandButton.js":"269","D:\\RecruiterCommunity\\refo-Front\\src\\components\\Candidates\\Drop.js":"270","D:\\RecruiterCommunity\\refo-Front\\src\\components\\Candidates\\Actions.js":"271","D:\\RecruiterCommunity\\refo-Front\\src\\components\\Admin\\AddClient.js":"272","D:\\RecruiterCommunity\\refo-Front\\src\\components\\Candidates\\Message.js":"273","D:\\RecruiterCommunity\\refo-Front\\src\\components\\Recruiter\\Status.js":"274","D:\\RecruiterCommunity\\refo-Front\\src\\components\\Recruiter\\Dialogs.js":"275","D:\\RecruiterCommunity\\refo-Front\\src\\components\\Candidates\\Note.js":"276","D:\\RecruiterCommunity\\refo-Front\\src\\components\\Candidates\\Bar.js":"277","D:\\RecruiterCommunity\\refo-Front\\src\\components\\PageTitle\\PageTitle.js":"278","D:\\RecruiterCommunity\\refo-Front\\src\\components\\Admin\\Dialogs.js":"279","D:\\RecruiterCommunity\\refo-Front\\src\\components\\Admin\\AssignAdd.js":"280","D:\\RecruiterCommunity\\refo-Front\\src\\components\\Admin\\Status.js":"281","D:\\RecruiterCommunity\\refo-Front\\src\\components\\Admin\\Reverse.js":"282","D:\\RecruiterCommunity\\refo-Front\\src\\components\\Candidates\\Edit.js":"283","D:\\RecruiterCommunity\\refo-Front\\src\\components\\Candidates\\View.js":"284","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\dashboard\\styles.js":"285","D:\\RecruiterCommunity\\refo-Front\\src\\components\\Sidebar\\styles.js":"286","D:\\RecruiterCommunity\\refo-Front\\src\\components\\Admin\\AddUser.js":"287","D:\\RecruiterCommunity\\refo-Front\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js":"288","D:\\RecruiterCommunity\\refo-Front\\src\\components\\Sidebar\\components\\Dot.js":"289","D:\\RecruiterCommunity\\refo-Front\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js":"290","D:\\RecruiterCommunity\\refo-Front\\src\\components\\PageTitle\\styles.js":"291","D:\\RecruiterCommunity\\refo-Front\\src\\components\\Candidates\\Add.js":"292","D:\\RecruiterCommunity\\refo-Front\\src\\components\\Candidates\\SearchLayout.js":"293","D:\\RecruiterCommunity\\refo-Front\\src\\components\\Others\\Layout.js":"294","D:\\RecruiterCommunity\\refo-Front\\src\\components\\Recruiter\\SearchStatus.js":"295","D:\\RecruiterCommunity\\refo-Front\\src\\components\\Layout\\styles.js":"296","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\forget\\styles.js":"297","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\share\\Share.js":"298","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\register\\DrawerComp.js":"299","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\share\\Header.js":"300","D:\\RecruiterCommunity\\refo-Front\\src\\components\\Header\\Header.js":"301","D:\\RecruiterCommunity\\refo-Front\\src\\components\\Admin\\SearchStatus.js":"302","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\share\\Sidebar\\styles.js":"303","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\share\\Sidebar\\Sidebar.js":"304","D:\\RecruiterCommunity\\refo-Front\\src\\components\\Candidates\\Search.js":"305","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\share\\Sidebar\\components\\SidebarLink\\SidebarLink.js":"306","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\share\\Sidebar\\components\\Dot.js":"307","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\share\\Sidebar\\components\\SidebarLink\\styles.js":"308","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\resumeSearch\\ResumeSearch.js":"309","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\resumeSearch\\Resume.js":"310","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\resumeSearch\\mock.js":"311","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\matchedResume\\MatchedResumes.js":"312","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\matchedResume\\mock.js":"313","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\matchedResume\\ResumeLinearProgress.js":"314","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\resumeSearch\\mock_data.js":"315","D:\\RecruiterCommunity\\refo-Front\\src\\components\\Candidates\\MatchJDDialog.js":"316","D:\\RecruiterCommunity\\refo-Front\\src\\components\\Candidates\\TabView.js":"317","D:\\RecruiterCommunity\\refo-Front\\src\\context\\CandidateDataContext.js":"318","D:\\RecruiterCommunity\\refo-Front\\src\\components\\Candidates\\ParsedResume.js":"319","D:\\RecruiterCommunity\\refo-Front\\src\\components\\Candidates\\Resume.js":"320"},{"size":645,"mtime":1687346432000,"results":"321","hashOfConfig":"322"},{"size":1393,"mtime":1685520438000,"results":"323","hashOfConfig":"322"},{"size":2026,"mtime":1689743770000,"results":"324","hashOfConfig":"322"},{"size":2416,"mtime":1689769194000,"results":"325","hashOfConfig":"322"},{"size":1481,"mtime":1686046156000,"results":"326","hashOfConfig":"322"},{"size":52221,"mtime":1688972656000,"results":"327","hashOfConfig":"322"},{"size":33943,"mtime":1688973656000,"results":"328","hashOfConfig":"322"},{"size":63376,"mtime":1691666792000,"results":"329","hashOfConfig":"322"},{"size":21187,"mtime":1689748268000,"results":"330","hashOfConfig":"322"},{"size":10406,"mtime":1687346792000,"results":"331","hashOfConfig":"322"},{"size":16620,"mtime":1692772226000,"results":"332","hashOfConfig":"322"},{"size":11915,"mtime":1688113646000,"results":"333","hashOfConfig":"322"},{"size":31073,"mtime":1689769536000,"results":"334","hashOfConfig":"322"},{"size":3711,"mtime":1685776416000,"results":"335","hashOfConfig":"322"},{"size":5392,"mtime":1686112982000,"results":"336","hashOfConfig":"322"},{"size":3726,"mtime":1686040144000,"results":"337","hashOfConfig":"322"},{"size":1015,"mtime":1686034742000,"results":"338","hashOfConfig":"322"},{"size":3790,"mtime":1684825338000,"results":"339","hashOfConfig":"322"},{"size":3178,"mtime":1686227036000,"results":"340","hashOfConfig":"322"},{"size":3193,"mtime":1686227042000,"results":"341","hashOfConfig":"322"},{"size":3196,"mtime":1686227040000,"results":"342","hashOfConfig":"322"},{"size":3222,"mtime":1686227046000,"results":"343","hashOfConfig":"322"},{"size":3182,"mtime":1686227050000,"results":"344","hashOfConfig":"322"},{"size":3222,"mtime":1686227028000,"results":"345","hashOfConfig":"322"},{"size":3174,"mtime":1686227030000,"results":"346","hashOfConfig":"322"},{"size":3194,"mtime":1686227062000,"results":"347","hashOfConfig":"322"},{"size":3226,"mtime":1686227058000,"results":"348","hashOfConfig":"322"},{"size":3200,"mtime":1686227018000,"results":"349","hashOfConfig":"322"},{"size":3187,"mtime":1688112124000,"results":"350","hashOfConfig":"322"},{"size":3165,"mtime":1686227034000,"results":"351","hashOfConfig":"322"},{"size":23013,"mtime":1688648712000,"results":"352","hashOfConfig":"322"},{"size":57245,"mtime":1688712150000,"results":"353","hashOfConfig":"322"},{"size":927,"mtime":1686891582000,"results":"354","hashOfConfig":"322"},{"size":932,"mtime":1688113926000,"results":"355","hashOfConfig":"322"},{"size":931,"mtime":1688113900000,"results":"356","hashOfConfig":"322"},{"size":930,"mtime":1687871052000,"results":"357","hashOfConfig":"322"},{"size":945,"mtime":1686890950000,"results":"358","hashOfConfig":"322"},{"size":949,"mtime":1686890952000,"results":"359","hashOfConfig":"322"},{"size":923,"mtime":1686890944000,"results":"360","hashOfConfig":"322"},{"size":927,"mtime":1686890948000,"results":"361","hashOfConfig":"322"},{"size":933,"mtime":1686890940000,"results":"362","hashOfConfig":"322"},{"size":951,"mtime":1686890932000,"results":"363","hashOfConfig":"322"},{"size":971,"mtime":1686890956000,"results":"364","hashOfConfig":"322"},{"size":929,"mtime":1688112124000,"results":"365","hashOfConfig":"322"},{"size":3096,"mtime":1686893346000,"results":"366","hashOfConfig":"322"},{"size":3110,"mtime":1686893346000,"results":"367","hashOfConfig":"322"},{"size":3092,"mtime":1686893346000,"results":"368","hashOfConfig":"322"},{"size":3088,"mtime":1686893346000,"results":"369","hashOfConfig":"322"},{"size":3136,"mtime":1686893346000,"results":"370","hashOfConfig":"322"},{"size":3140,"mtime":1686893346000,"results":"371","hashOfConfig":"322"},{"size":3134,"mtime":1686893346000,"results":"372","hashOfConfig":"322"},{"size":3107,"mtime":1686893346000,"results":"373","hashOfConfig":"322"},{"size":3108,"mtime":1686893346000,"results":"374","hashOfConfig":"322"},{"size":3101,"mtime":1688112124000,"results":"375","hashOfConfig":"322"},{"size":3114,"mtime":1686893346000,"results":"376","hashOfConfig":"322"},{"size":3077,"mtime":1686893346000,"results":"377","hashOfConfig":"322"},{"size":50238,"mtime":1689760348000,"results":"378","hashOfConfig":"322"},{"size":3198,"mtime":1686893246000,"results":"379","hashOfConfig":"322"},{"size":3213,"mtime":1686893252000,"results":"380","hashOfConfig":"322"},{"size":3194,"mtime":1686893242000,"results":"381","hashOfConfig":"322"},{"size":3240,"mtime":1686893254000,"results":"382","hashOfConfig":"322"},{"size":3216,"mtime":1686893248000,"results":"383","hashOfConfig":"322"},{"size":3202,"mtime":1686893260000,"results":"384","hashOfConfig":"322"},{"size":34274,"mtime":1688712086000,"results":"385","hashOfConfig":"322"},{"size":1355,"mtime":1685009242000,"results":"386","hashOfConfig":"322"},{"size":1547,"mtime":1688474908000,"results":"387","hashOfConfig":"322"},{"size":32391,"mtime":1688150592000,"results":"388","hashOfConfig":"322"},{"size":33332,"mtime":1688978260000,"results":"389","hashOfConfig":"322"},{"size":60965,"mtime":1688988552000,"results":"390","hashOfConfig":"322"},{"size":79527,"mtime":1688978876000,"results":"391","hashOfConfig":"322"},{"size":30632,"mtime":1689759190000,"results":"392","hashOfConfig":"322"},{"size":2812,"mtime":1688113700000,"results":"393","hashOfConfig":"322"},{"size":61550,"mtime":1688712094000,"results":"394","hashOfConfig":"322"},{"size":439,"mtime":1684825336000,"results":"395","hashOfConfig":"322"},{"size":1988,"mtime":1688975052000,"results":"396","hashOfConfig":"322"},{"size":2008,"mtime":1688978460000,"results":"397","hashOfConfig":"322"},{"size":6553,"mtime":1688113700000,"results":"398","hashOfConfig":"322"},{"size":1890,"mtime":1688978806000,"results":"399","hashOfConfig":"322"},{"size":57025,"mtime":1688977988000,"results":"400","hashOfConfig":"322"},{"size":3508,"mtime":1686912244000,"results":"401","hashOfConfig":"322"},{"size":5518,"mtime":1688979210000,"results":"402","hashOfConfig":"322"},{"size":462,"mtime":1684825336000,"results":"403","hashOfConfig":"322"},{"size":1358,"mtime":1688540466000,"results":"404","hashOfConfig":"322"},{"size":3215,"mtime":1686893228000,"results":"405","hashOfConfig":"322"},{"size":3183,"mtime":1686893244000,"results":"406","hashOfConfig":"322"},{"size":43682,"mtime":1688974714000,"results":"407","hashOfConfig":"322"},{"size":3246,"mtime":1686893236000,"results":"408","hashOfConfig":"322"},{"size":84527,"mtime":1689323710000,"results":"409","hashOfConfig":"322"},{"size":3242,"mtime":1686893238000,"results":"410","hashOfConfig":"322"},{"size":3203,"mtime":1686893234000,"results":"411","hashOfConfig":"322"},{"size":82349,"mtime":1688712158000,"results":"412","hashOfConfig":"322"},{"size":3207,"mtime":1688112124000,"results":"413","hashOfConfig":"322"},{"size":81663,"mtime":1688712102000,"results":"414","hashOfConfig":"322"},{"size":93510,"mtime":1688712114000,"results":"415","hashOfConfig":"322"},{"size":37713,"mtime":1688726880000,"results":"416","hashOfConfig":"322"},{"size":2690,"mtime":1689747424000,"results":"417","hashOfConfig":"322"},{"size":87549,"mtime":1688648782000,"results":"418","hashOfConfig":"322"},{"size":2952,"mtime":1686652670000,"results":"419","hashOfConfig":"322"},{"size":2970,"mtime":1686652654000,"results":"420","hashOfConfig":"322"},{"size":2992,"mtime":1686652622000,"results":"421","hashOfConfig":"322"},{"size":2948,"mtime":1686652650000,"results":"422","hashOfConfig":"322"},{"size":2972,"mtime":1686652616000,"results":"423","hashOfConfig":"322"},{"size":52337,"mtime":1688648774000,"results":"424","hashOfConfig":"322"},{"size":2994,"mtime":1686652630000,"results":"425","hashOfConfig":"322"},{"size":2935,"mtime":1686652646000,"results":"426","hashOfConfig":"322"},{"size":2944,"mtime":1686652640000,"results":"427","hashOfConfig":"322"},{"size":2999,"mtime":1686652634000,"results":"428","hashOfConfig":"322"},{"size":2948,"mtime":1688112124000,"results":"429","hashOfConfig":"322"},{"size":2989,"mtime":1686652660000,"results":"430","hashOfConfig":"322"},{"size":19031,"mtime":1688974866000,"results":"431","hashOfConfig":"322"},{"size":9554,"mtime":1687755986000,"results":"432","hashOfConfig":"322"},{"size":7980,"mtime":1687755986000,"results":"433","hashOfConfig":"322"},{"size":12949,"mtime":1687346846000,"results":"434","hashOfConfig":"322"},{"size":10389,"mtime":1685623802000,"results":"435","hashOfConfig":"322"},{"size":41732,"mtime":1688971004000,"results":"436","hashOfConfig":"322"},{"size":46696,"mtime":1688974782000,"results":"437","hashOfConfig":"322"},{"size":10142,"mtime":1688974464000,"results":"438","hashOfConfig":"322"},{"size":32801,"mtime":1688638022000,"results":"439","hashOfConfig":"322"},{"size":19699,"mtime":1688974568000,"results":"440","hashOfConfig":"322"},{"size":6476,"mtime":1688974222000,"results":"441","hashOfConfig":"322"},{"size":29738,"mtime":1688715772000,"results":"442","hashOfConfig":"322"},{"size":32018,"mtime":1688971926000,"results":"443","hashOfConfig":"322"},{"size":73053,"mtime":1688637848000,"results":"444","hashOfConfig":"322"},{"size":24244,"mtime":1688733850000,"results":"445","hashOfConfig":"322"},{"size":62353,"mtime":1688648692000,"results":"446","hashOfConfig":"322"},{"size":57447,"mtime":1688648658000,"results":"447","hashOfConfig":"322"},{"size":55191,"mtime":1688977770000,"results":"448","hashOfConfig":"322"},{"size":16639,"mtime":1688114118000,"results":"449","hashOfConfig":"322"},{"size":134390,"mtime":1691222598000,"results":"450","hashOfConfig":"322"},{"size":1367,"mtime":1688540502000,"results":"451","hashOfConfig":"322"},{"size":9054,"mtime":1688628246000,"results":"452","hashOfConfig":"322"},{"size":5038,"mtime":1687766940000,"results":"453","hashOfConfig":"322"},{"size":1970,"mtime":1688978726000,"results":"454","hashOfConfig":"322"},{"size":18199,"mtime":1688451452000,"results":"455","hashOfConfig":"322"},{"size":9682,"mtime":1688113636000,"results":"456","hashOfConfig":"322"},{"size":12849,"mtime":1688113542000,"results":"457","hashOfConfig":"322"},{"size":7076,"mtime":1691408806000,"results":"458","hashOfConfig":"322"},{"size":7830,"mtime":1691669218000,"results":"459","hashOfConfig":"322"},{"size":15072,"mtime":1688974710000,"results":"460","hashOfConfig":"322"},{"size":57768,"mtime":1688712048000,"results":"461","hashOfConfig":"322"},{"size":46766,"mtime":1688978390000,"results":"462","hashOfConfig":"322"},{"size":1988,"mtime":1688979004000,"results":"463","hashOfConfig":"322"},{"size":60115,"mtime":1688979492000,"results":"464","hashOfConfig":"322"},{"size":8756,"mtime":1688113700000,"results":"465","hashOfConfig":"322"},{"size":862,"mtime":1684825338000,"results":"466","hashOfConfig":"322"},{"size":37779,"mtime":1688712170000,"results":"467","hashOfConfig":"322"},{"size":3342,"mtime":1688535834000,"results":"468","hashOfConfig":"322"},{"size":3839,"mtime":1689760270000,"results":"469","hashOfConfig":"322"},{"size":12164,"mtime":1688973420000,"results":"470","hashOfConfig":"322"},{"size":3981,"mtime":1689752502000,"results":"471","hashOfConfig":"322"},{"size":3383,"mtime":1688113700000,"results":"472","hashOfConfig":"322"},{"size":6833,"mtime":1688532594000,"results":"473","hashOfConfig":"322"},{"size":862,"mtime":1684825338000,"results":"474","hashOfConfig":"322"},{"size":2947,"mtime":1688532594000,"results":"475","hashOfConfig":"322"},{"size":777,"mtime":1705994499267,"results":"476","hashOfConfig":"477"},{"size":2026,"mtime":1689743770000,"results":"478","hashOfConfig":"477"},{"size":1393,"mtime":1685520438000,"results":"479","hashOfConfig":"477"},{"size":2416,"mtime":1706011276831,"results":"480","hashOfConfig":"477"},{"size":1481,"mtime":1686046156000,"results":"481","hashOfConfig":"477"},{"size":52221,"mtime":1688972656000,"results":"482","hashOfConfig":"477"},{"size":33943,"mtime":1688973656000,"results":"483","hashOfConfig":"477"},{"size":21187,"mtime":1689748268000,"results":"484","hashOfConfig":"477"},{"size":63376,"mtime":1691666792000,"results":"485","hashOfConfig":"477"},{"size":10406,"mtime":1687346792000,"results":"486","hashOfConfig":"477"},{"size":16620,"mtime":1692772226000,"results":"487","hashOfConfig":"477"},{"size":11915,"mtime":1688113646000,"results":"488","hashOfConfig":"477"},{"size":31478,"mtime":1706084088697,"results":"489","hashOfConfig":"477"},{"size":3711,"mtime":1685776416000,"results":"490","hashOfConfig":"477"},{"size":5392,"mtime":1686112982000,"results":"491","hashOfConfig":"477"},{"size":3726,"mtime":1686040144000,"results":"492","hashOfConfig":"477"},{"size":1015,"mtime":1686034742000,"results":"493","hashOfConfig":"477"},{"size":3790,"mtime":1684825338000,"results":"494","hashOfConfig":"477"},{"size":23018,"mtime":1704883466521,"results":"495","hashOfConfig":"477"},{"size":62444,"mtime":1706157584328,"results":"496","hashOfConfig":"477"},{"size":3178,"mtime":1686227036000,"results":"497","hashOfConfig":"477"},{"size":3196,"mtime":1686227040000,"results":"498","hashOfConfig":"477"},{"size":3193,"mtime":1686227042000,"results":"499","hashOfConfig":"477"},{"size":3174,"mtime":1686227030000,"results":"500","hashOfConfig":"477"},{"size":3182,"mtime":1686227050000,"results":"501","hashOfConfig":"477"},{"size":3226,"mtime":1686227058000,"results":"502","hashOfConfig":"477"},{"size":3222,"mtime":1686227046000,"results":"503","hashOfConfig":"477"},{"size":3200,"mtime":1686227018000,"results":"504","hashOfConfig":"477"},{"size":3165,"mtime":1686227034000,"results":"505","hashOfConfig":"477"},{"size":3194,"mtime":1686227062000,"results":"506","hashOfConfig":"477"},{"size":3187,"mtime":1688112124000,"results":"507","hashOfConfig":"477"},{"size":3222,"mtime":1686227028000,"results":"508","hashOfConfig":"477"},{"size":3088,"mtime":1686893346000,"results":"509","hashOfConfig":"477"},{"size":3096,"mtime":1686893346000,"results":"510","hashOfConfig":"477"},{"size":3110,"mtime":1686893346000,"results":"511","hashOfConfig":"477"},{"size":3107,"mtime":1686893346000,"results":"512","hashOfConfig":"477"},{"size":3136,"mtime":1686893346000,"results":"513","hashOfConfig":"477"},{"size":931,"mtime":1688113900000,"results":"514","hashOfConfig":"477"},{"size":3092,"mtime":1686893346000,"results":"515","hashOfConfig":"477"},{"size":927,"mtime":1686891582000,"results":"516","hashOfConfig":"477"},{"size":932,"mtime":1688113926000,"results":"517","hashOfConfig":"477"},{"size":951,"mtime":1686890932000,"results":"518","hashOfConfig":"477"},{"size":933,"mtime":1686890940000,"results":"519","hashOfConfig":"477"},{"size":949,"mtime":1686890952000,"results":"520","hashOfConfig":"477"},{"size":929,"mtime":1688112124000,"results":"521","hashOfConfig":"477"},{"size":923,"mtime":1686890944000,"results":"522","hashOfConfig":"477"},{"size":945,"mtime":1686890950000,"results":"523","hashOfConfig":"477"},{"size":971,"mtime":1686890956000,"results":"524","hashOfConfig":"477"},{"size":930,"mtime":1687871052000,"results":"525","hashOfConfig":"477"},{"size":927,"mtime":1686890948000,"results":"526","hashOfConfig":"477"},{"size":3108,"mtime":1686893346000,"results":"527","hashOfConfig":"477"},{"size":3134,"mtime":1686893346000,"results":"528","hashOfConfig":"477"},{"size":3101,"mtime":1688112124000,"results":"529","hashOfConfig":"477"},{"size":3077,"mtime":1686893346000,"results":"530","hashOfConfig":"477"},{"size":3140,"mtime":1686893346000,"results":"531","hashOfConfig":"477"},{"size":3114,"mtime":1686893346000,"results":"532","hashOfConfig":"477"},{"size":2690,"mtime":1689747424000,"results":"533","hashOfConfig":"477"},{"size":37713,"mtime":1688726880000,"results":"534","hashOfConfig":"477"},{"size":82142,"mtime":1704804914335,"results":"535","hashOfConfig":"477"},{"size":87623,"mtime":1706157620818,"results":"536","hashOfConfig":"477"},{"size":7980,"mtime":1687755986000,"results":"537","hashOfConfig":"477"},{"size":9554,"mtime":1687755986000,"results":"538","hashOfConfig":"477"},{"size":102247,"mtime":1706158539250,"results":"539","hashOfConfig":"477"},{"size":52818,"mtime":1704805010472,"results":"540","hashOfConfig":"477"},{"size":19031,"mtime":1688974866000,"results":"541","hashOfConfig":"477"},{"size":89664,"mtime":1706157553210,"results":"542","hashOfConfig":"477"},{"size":87549,"mtime":1688648782000,"results":"543","hashOfConfig":"477"},{"size":3202,"mtime":1686893260000,"results":"544","hashOfConfig":"477"},{"size":3216,"mtime":1686893248000,"results":"545","hashOfConfig":"477"},{"size":3213,"mtime":1686893252000,"results":"546","hashOfConfig":"477"},{"size":3240,"mtime":1686893254000,"results":"547","hashOfConfig":"477"},{"size":3198,"mtime":1686893246000,"results":"548","hashOfConfig":"477"},{"size":3203,"mtime":1686893234000,"results":"549","hashOfConfig":"477"},{"size":3207,"mtime":1688112124000,"results":"550","hashOfConfig":"477"},{"size":3215,"mtime":1686893228000,"results":"551","hashOfConfig":"477"},{"size":3183,"mtime":1686893244000,"results":"552","hashOfConfig":"477"},{"size":2952,"mtime":1686652670000,"results":"553","hashOfConfig":"477"},{"size":3242,"mtime":1686893238000,"results":"554","hashOfConfig":"477"},{"size":3194,"mtime":1686893242000,"results":"555","hashOfConfig":"477"},{"size":2970,"mtime":1686652654000,"results":"556","hashOfConfig":"477"},{"size":2944,"mtime":1686652640000,"results":"557","hashOfConfig":"477"},{"size":2994,"mtime":1686652630000,"results":"558","hashOfConfig":"477"},{"size":2992,"mtime":1686652622000,"results":"559","hashOfConfig":"477"},{"size":3246,"mtime":1686893236000,"results":"560","hashOfConfig":"477"},{"size":2989,"mtime":1686652660000,"results":"561","hashOfConfig":"477"},{"size":2948,"mtime":1688112124000,"results":"562","hashOfConfig":"477"},{"size":2972,"mtime":1686652616000,"results":"563","hashOfConfig":"477"},{"size":2935,"mtime":1686652646000,"results":"564","hashOfConfig":"477"},{"size":12949,"mtime":1687346846000,"results":"565","hashOfConfig":"477"},{"size":43682,"mtime":1688974714000,"results":"566","hashOfConfig":"477"},{"size":2999,"mtime":1686652634000,"results":"567","hashOfConfig":"477"},{"size":2948,"mtime":1686652650000,"results":"568","hashOfConfig":"477"},{"size":41732,"mtime":1688971004000,"results":"569","hashOfConfig":"477"},{"size":46696,"mtime":1688974782000,"results":"570","hashOfConfig":"477"},{"size":10142,"mtime":1688974464000,"results":"571","hashOfConfig":"477"},{"size":6476,"mtime":1688974222000,"results":"572","hashOfConfig":"477"},{"size":19699,"mtime":1688974568000,"results":"573","hashOfConfig":"477"},{"size":32018,"mtime":1688971926000,"results":"574","hashOfConfig":"477"},{"size":29738,"mtime":1688715772000,"results":"575","hashOfConfig":"477"},{"size":32801,"mtime":1688638022000,"results":"576","hashOfConfig":"477"},{"size":24244,"mtime":1688733850000,"results":"577","hashOfConfig":"477"},{"size":62353,"mtime":1688648692000,"results":"578","hashOfConfig":"477"},{"size":73053,"mtime":1688637848000,"results":"579","hashOfConfig":"477"},{"size":57447,"mtime":1688648658000,"results":"580","hashOfConfig":"477"},{"size":21906,"mtime":1704895379052,"results":"581","hashOfConfig":"477"},{"size":55191,"mtime":1688977770000,"results":"582","hashOfConfig":"477"},{"size":30632,"mtime":1689759190000,"results":"583","hashOfConfig":"477"},{"size":62042,"mtime":1704804890904,"results":"584","hashOfConfig":"477"},{"size":50798,"mtime":1705642793676,"results":"585","hashOfConfig":"477"},{"size":58208,"mtime":1704804775223,"results":"586","hashOfConfig":"477"},{"size":18199,"mtime":1688451452000,"results":"587","hashOfConfig":"477"},{"size":15072,"mtime":1688974710000,"results":"588","hashOfConfig":"477"},{"size":1547,"mtime":1688474908000,"results":"589","hashOfConfig":"477"},{"size":1988,"mtime":1688975052000,"results":"590","hashOfConfig":"477"},{"size":1355,"mtime":1685009242000,"results":"591","hashOfConfig":"477"},{"size":1890,"mtime":1688978806000,"results":"592","hashOfConfig":"477"},{"size":5518,"mtime":1688979210000,"results":"593","hashOfConfig":"477"},{"size":9682,"mtime":1688113636000,"results":"594","hashOfConfig":"477"},{"size":2008,"mtime":1688978460000,"results":"595","hashOfConfig":"477"},{"size":6553,"mtime":1688113700000,"results":"596","hashOfConfig":"477"},{"size":57025,"mtime":1688977988000,"results":"597","hashOfConfig":"477"},{"size":3508,"mtime":1686912244000,"results":"598","hashOfConfig":"477"},{"size":32391,"mtime":1688150592000,"results":"599","hashOfConfig":"477"},{"size":439,"mtime":1684825336000,"results":"600","hashOfConfig":"477"},{"size":60115,"mtime":1688979492000,"results":"601","hashOfConfig":"477"},{"size":9054,"mtime":1688628246000,"results":"602","hashOfConfig":"477"},{"size":8756,"mtime":1688113700000,"results":"603","hashOfConfig":"477"},{"size":1988,"mtime":1688979004000,"results":"604","hashOfConfig":"477"},{"size":60965,"mtime":1688988552000,"results":"605","hashOfConfig":"477"},{"size":33332,"mtime":1688978260000,"results":"606","hashOfConfig":"477"},{"size":7830,"mtime":1691669218000,"results":"607","hashOfConfig":"477"},{"size":1970,"mtime":1688978726000,"results":"608","hashOfConfig":"477"},{"size":12849,"mtime":1688113542000,"results":"609","hashOfConfig":"477"},{"size":7076,"mtime":1691408806000,"results":"610","hashOfConfig":"477"},{"size":862,"mtime":1684825338000,"results":"611","hashOfConfig":"477"},{"size":3342,"mtime":1688535834000,"results":"612","hashOfConfig":"477"},{"size":462,"mtime":1684825336000,"results":"613","hashOfConfig":"477"},{"size":79527,"mtime":1688978876000,"results":"614","hashOfConfig":"477"},{"size":47211,"mtime":1704804821001,"results":"615","hashOfConfig":"477"},{"size":34766,"mtime":1704804870966,"results":"616","hashOfConfig":"477"},{"size":2812,"mtime":1688113700000,"results":"617","hashOfConfig":"477"},{"size":1358,"mtime":1688540466000,"results":"618","hashOfConfig":"477"},{"size":10389,"mtime":1685623802000,"results":"619","hashOfConfig":"477"},{"size":37779,"mtime":1688712170000,"results":"620","hashOfConfig":"477"},{"size":12164,"mtime":1688973420000,"results":"621","hashOfConfig":"477"},{"size":3839,"mtime":1689760270000,"results":"622","hashOfConfig":"477"},{"size":145265,"mtime":1704804851898,"results":"623","hashOfConfig":"477"},{"size":3383,"mtime":1688113700000,"results":"624","hashOfConfig":"477"},{"size":1367,"mtime":1688540502000,"results":"625","hashOfConfig":"477"},{"size":3981,"mtime":1689752502000,"results":"626","hashOfConfig":"477"},{"size":5038,"mtime":1687766940000,"results":"627","hashOfConfig":"477"},{"size":6833,"mtime":1688532594000,"results":"628","hashOfConfig":"477"},{"size":862,"mtime":1684825338000,"results":"629","hashOfConfig":"477"},{"size":2947,"mtime":1688532594000,"results":"630","hashOfConfig":"477"},{"size":5869,"mtime":1705929041306,"results":"631","hashOfConfig":"477"},{"size":12726,"mtime":1704950630833,"results":"632","hashOfConfig":"477"},{"size":3516,"mtime":1704176601347,"results":"633","hashOfConfig":"477"},{"size":8623,"mtime":1704449245099,"results":"634","hashOfConfig":"477"},{"size":753,"mtime":1704265958085,"results":"635","hashOfConfig":"477"},{"size":1871,"mtime":1704880213349,"results":"636","hashOfConfig":"477"},{"size":6183,"mtime":1704523956580,"results":"637","hashOfConfig":"477"},{"size":3515,"mtime":1706158575394,"results":"638","hashOfConfig":"477"},{"size":2615,"mtime":1705928736566,"results":"639","hashOfConfig":"477"},{"size":483,"mtime":1706072023115,"results":"640","hashOfConfig":"477"},{"size":1114,"mtime":1706157682238,"results":"641","hashOfConfig":"477"},{"size":12693,"mtime":1706011752966,"results":"642","hashOfConfig":"477"},{"filePath":"643","messages":"644","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"mewsgf",{"filePath":"645","messages":"646","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"647","messages":"648","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"649","messages":"650","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"651","messages":"652","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"653","messages":"654","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"655","messages":"656","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"657","messages":"658","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"659","messages":"660","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"661","messages":"662","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"663","messages":"664","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"665","messages":"666","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"667","messages":"668","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"669","messages":"670","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"671","messages":"672","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"673","messages":"674","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"675","messages":"676","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"677","messages":"678","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"679","messages":"680","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"681","messages":"682","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"683","messages":"684","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"685","messages":"686","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"687","messages":"688","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"689","messages":"690","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"691","messages":"692","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"693","messages":"694","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"695","messages":"696","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"697","messages":"698","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"699","messages":"700","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"701","messages":"702","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"703","messages":"704","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"705","messages":"706","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"707","messages":"708","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"709","messages":"710","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"711","messages":"712","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"713","messages":"714","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"715","messages":"716","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"717","messages":"718","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"719","messages":"720","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"721","messages":"722","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"723","messages":"724","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"725","messages":"726","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"727","messages":"728","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"729","messages":"730","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"731","messages":"732","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"733","messages":"734","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"735","messages":"736","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"737","messages":"738","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"739","messages":"740","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"741","messages":"742","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"743","messages":"744","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"745","messages":"746","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"747","messages":"748","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"749","messages":"750","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"751","messages":"752","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"753","messages":"754","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"755","messages":"756","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"757","messages":"758","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"759","messages":"760","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"761","messages":"762","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"763","messages":"764","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"765","messages":"766","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"767","messages":"768","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"769","messages":"770","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"771","messages":"772","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"773","messages":"774","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"775","messages":"776","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"777","messages":"778","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"779","messages":"780","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"781","messages":"782","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"783","messages":"784","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"785","messages":"786","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"787","messages":"788","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"789","messages":"790","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"791","messages":"792","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"793","messages":"794","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"795","messages":"796","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"797","messages":"798","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"799","messages":"800","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"801","messages":"802","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"803","messages":"804","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"805","messages":"806","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"807","messages":"808","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"809","messages":"810","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"811","messages":"812","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"813","messages":"814","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"815","messages":"816","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"817","messages":"818","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"819","messages":"820","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"821","messages":"822","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"823","messages":"824","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"825","messages":"826","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"827","messages":"828","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"829","messages":"830","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"831","messages":"832","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"833","messages":"834","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"835","messages":"836","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"837","messages":"838","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"839","messages":"840","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"841","messages":"842","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"843","messages":"844","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"845","messages":"846","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"847","messages":"848","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"849","messages":"850","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"851","messages":"852","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"853","messages":"854","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"855","messages":"856","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"857","messages":"858","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"859","messages":"860","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"861","messages":"862","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"863","messages":"864","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"865","messages":"866","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"867","messages":"868","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"869","messages":"870","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"871","messages":"872","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"873","messages":"874","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"875","messages":"876","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"877","messages":"878","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"879","messages":"880","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"881","messages":"882","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"883","messages":"884","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"885","messages":"886","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"887","messages":"888","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"889","messages":"890","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"891","messages":"892","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"893","messages":"894","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"895","messages":"896","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"897","messages":"898","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"899","messages":"900","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"901","messages":"902","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"903","messages":"904","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"905","messages":"906","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"907","messages":"908","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"909","messages":"910","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"911","messages":"912","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"913","messages":"914","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"915","messages":"916","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"917","messages":"918","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"919","messages":"920","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"921","messages":"922","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"923","messages":"924","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"925","messages":"926","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"927","messages":"928","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"929","messages":"930","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"931","messages":"932","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"933","messages":"934","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"935","messages":"936","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"937","messages":"938","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"939","messages":"940","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"941","messages":"942","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"943","messages":"944","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"945","messages":"946","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"947","messages":"948","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"949","messages":"950","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"951","messages":"952","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},"ua0xaf",{"filePath":"954","messages":"955","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"956","messages":"957","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"958","messages":"959","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"960","messages":"961","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"962","messages":"963","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"964","messages":"965","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"966","messages":"967","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"968","messages":"969","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"970","messages":"971","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"972","messages":"973","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"974","messages":"975","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"976","messages":"977","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"978","usedDeprecatedRules":"953"},{"filePath":"979","messages":"980","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"981","messages":"982","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"983","messages":"984","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"985","messages":"986","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"987","messages":"988","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"989","messages":"990","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"991","messages":"992","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"993","messages":"994","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"995","messages":"996","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"997","messages":"998","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"999","messages":"1000","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1001","messages":"1002","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1003","messages":"1004","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1005","messages":"1006","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1007","messages":"1008","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1009","messages":"1010","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1011","messages":"1012","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1013","messages":"1014","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1015","messages":"1016","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1017","messages":"1018","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1019","messages":"1020","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1021","messages":"1022","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1023","messages":"1024","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1025","messages":"1026","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1027","messages":"1028","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1029","messages":"1030","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1031","messages":"1032","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1033","messages":"1034","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1035","messages":"1036","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1037","messages":"1038","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1039","messages":"1040","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1041","messages":"1042","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1043","messages":"1044","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1045","messages":"1046","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1047","messages":"1048","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1049","messages":"1050","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1051","messages":"1052","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1053","messages":"1054","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1055","messages":"1056","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1057","messages":"1058","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1059","messages":"1060","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1061","messages":"1062","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1063","messages":"1064","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1065","messages":"1066","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1067","messages":"1068","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1069","messages":"1070","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1071","messages":"1072","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1073","messages":"1074","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1075","messages":"1076","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1077","messages":"1078","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1079"},{"filePath":"1080","messages":"1081","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1082","messages":"1083","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1084","messages":"1085","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1086","messages":"1087","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1088","messages":"1089","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1090","messages":"1091","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1092","messages":"1093","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1094","messages":"1095","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1096","messages":"1097","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1098","messages":"1099","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1100","messages":"1101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1102","messages":"1103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1104","messages":"1105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1106","messages":"1107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1108","messages":"1109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1110","messages":"1111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1112","messages":"1113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1114","messages":"1115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1116","messages":"1117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1118","messages":"1119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1120","messages":"1121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1122","messages":"1123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1124","messages":"1125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1126","messages":"1127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1128","messages":"1129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1130","messages":"1131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1132","messages":"1133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1134","messages":"1135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1136","messages":"1137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1138","messages":"1139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1140","messages":"1141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1142","messages":"1143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1144","messages":"1145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1146","messages":"1147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1148","messages":"1149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1150","messages":"1151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1152","messages":"1153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1154","messages":"1155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1156","messages":"1157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1158","messages":"1159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1160","messages":"1161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1162","messages":"1163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1164","messages":"1165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1166","messages":"1167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1168","messages":"1169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1170","messages":"1171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1172","messages":"1173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1174","messages":"1175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1176","messages":"1177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1178","messages":"1179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1180","messages":"1181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1182","messages":"1183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1184","messages":"1185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1186","messages":"1187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1188","messages":"1189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1190","messages":"1191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1192","messages":"1193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1194","messages":"1195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1196","messages":"1197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1198","messages":"1199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1200","messages":"1201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1202","messages":"1203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1204","messages":"1205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1206","messages":"1207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1208","messages":"1209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1210","messages":"1211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1212","messages":"1213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1214","messages":"1215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1216","messages":"1217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1218","messages":"1219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1220","messages":"1221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1222","messages":"1223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1224","messages":"1225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1226","messages":"1227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1228","messages":"1229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1230","messages":"1231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1232","messages":"1233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1234","messages":"1235","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1236","messages":"1237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1238","messages":"1239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1240","messages":"1241","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1242","messages":"1243","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1244","messages":"1245","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1246","messages":"1247","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1248","usedDeprecatedRules":"953"},{"filePath":"1249","messages":"1250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1251","messages":"1252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1253","messages":"1254","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1255","messages":"1256","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1257","messages":"1258","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1259","messages":"1260","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1261","messages":"1262","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1263","messages":"1264","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1265","messages":"1266","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1267","messages":"1268","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1269"},{"filePath":"1270","messages":"1271","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1272","usedDeprecatedRules":"1273"},{"filePath":"1274","messages":"1275","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1276"},{"filePath":"1277","messages":"1278","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1279"},{"filePath":"1280","messages":"1281","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1279"},{"filePath":"1282","messages":"1283","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1284","messages":"1285","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1286","messages":"1287","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1288","messages":"1289","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},{"filePath":"1290","messages":"1291","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"953"},"D:\\Checking\\job-portal\\src\\index.js",[],"D:\\Checking\\job-portal\\src\\context\\LayoutContext.js",[],"D:\\Checking\\job-portal\\src\\context\\UserContext.js",[],"D:\\Checking\\job-portal\\src\\components\\App.js",[],"D:\\Checking\\job-portal\\src\\themes\\index.js",[],"D:\\Checking\\job-portal\\src\\pages\\register\\Register.js",[],"D:\\Checking\\job-portal\\src\\pages\\register\\companyRegister.js",[],"D:\\Checking\\job-portal\\src\\pages\\register\\candidateCPV.js",[],"D:\\Checking\\job-portal\\src\\pages\\share\\Shortlist.js",[],"D:\\Checking\\job-portal\\src\\pages\\login\\author269.js",[],"D:\\Checking\\job-portal\\src\\pages\\login\\Login.js",[],"D:\\Checking\\job-portal\\src\\pages\\forget\\Forget.js",[],"D:\\Checking\\job-portal\\src\\components\\Layout\\Layout.js",[],"D:\\Checking\\job-portal\\src\\themes\\default.js",[],"D:\\Checking\\job-portal\\src\\pages\\login\\styles.js",[],"D:\\Checking\\job-portal\\src\\components\\Notification\\Notification.js",[],"D:\\Checking\\job-portal\\src\\components\\Notification\\styles.js",[],"D:\\Checking\\job-portal\\src\\components\\Wrappers\\Wrappers.js",[],"D:\\Checking\\job-portal\\src\\pages\\others\\dashboard\\Offered.js",[],"D:\\Checking\\job-portal\\src\\pages\\others\\dashboard\\SalaryBreakup.js",[],"D:\\Checking\\job-portal\\src\\pages\\others\\dashboard\\OfferedDeclined.js",[],"D:\\Checking\\job-portal\\src\\pages\\others\\dashboard\\ScheduleInterview.js",[],"D:\\Checking\\job-portal\\src\\pages\\others\\dashboard\\YetToJoin.js",[],"D:\\Checking\\job-portal\\src\\pages\\others\\dashboard\\InterviewScheduled.js",[],"D:\\Checking\\job-portal\\src\\pages\\others\\dashboard\\Joined.js",[],"D:\\Checking\\job-portal\\src\\pages\\others\\dashboard\\FinalInterviewCompleted.js",[],"D:\\Checking\\job-portal\\src\\pages\\others\\dashboard\\FinalInterviewScheduled.js",[],"D:\\Checking\\job-portal\\src\\pages\\others\\dashboard\\DocumentColleted.js",[],"D:\\Checking\\job-portal\\src\\pages\\others\\dashboard\\Stc.js",[],"D:\\Checking\\job-portal\\src\\pages\\others\\dashboard\\New.js",[],"D:\\Checking\\job-portal\\src\\pages\\others\\Requirements.js",[],"D:\\Checking\\job-portal\\src\\pages\\others\\Candidates.js",[],"D:\\Checking\\job-portal\\src\\pages\\admin\\reports\\Drop.js",[],"D:\\Checking\\job-portal\\src\\pages\\admin\\reports\\CreditNotes.js",[],"D:\\Checking\\job-portal\\src\\pages\\admin\\reports\\Invoiced.js",[],"D:\\Checking\\job-portal\\src\\pages\\admin\\reports\\Ditched.js",[],"D:\\Checking\\job-portal\\src\\pages\\admin\\reports\\OfferedDeclined.js",[],"D:\\Checking\\job-portal\\src\\pages\\admin\\reports\\SalaryBreakup.js",[],"D:\\Checking\\job-portal\\src\\pages\\admin\\reports\\Joined.js",[],"D:\\Checking\\job-portal\\src\\pages\\admin\\reports\\Offered.js",[],"D:\\Checking\\job-portal\\src\\pages\\admin\\reports\\FinalInterviewCompleted.js",[],"D:\\Checking\\job-portal\\src\\pages\\admin\\reports\\DocumentColleted.js",[],"D:\\Checking\\job-portal\\src\\pages\\admin\\reports\\ScheduleInterview.js",[],"D:\\Checking\\job-portal\\src\\pages\\admin\\reports\\Stc.js",[],"D:\\Checking\\job-portal\\src\\pages\\recruiter\\dashboard\\YetToJoin.js",[],"D:\\Checking\\job-portal\\src\\pages\\recruiter\\dashboard\\OfferedDeclined.js",[],"D:\\Checking\\job-portal\\src\\pages\\recruiter\\dashboard\\Offered.js",[],"D:\\Checking\\job-portal\\src\\pages\\recruiter\\dashboard\\Joined.js",[],"D:\\Checking\\job-portal\\src\\pages\\recruiter\\dashboard\\InterviewScheduled.js",[],"D:\\Checking\\job-portal\\src\\pages\\recruiter\\dashboard\\FinalInterviewScheduled.js",[],"D:\\Checking\\job-portal\\src\\pages\\recruiter\\dashboard\\ScheduleInterview.js",[],"D:\\Checking\\job-portal\\src\\pages\\recruiter\\dashboard\\SalaryBreakup.js",[],"D:\\Checking\\job-portal\\src\\pages\\recruiter\\dashboard\\FinalInterviewCompleted.js",[],"D:\\Checking\\job-portal\\src\\pages\\recruiter\\dashboard\\Stc.js",[],"D:\\Checking\\job-portal\\src\\pages\\recruiter\\dashboard\\DocumentColleted.js",[],"D:\\Checking\\job-portal\\src\\pages\\recruiter\\dashboard\\New.js",[],"D:\\Checking\\job-portal\\src\\themes\\style.js",[],"D:\\Checking\\job-portal\\src\\pages\\cc\\dashboard\\Offered.js",[],"D:\\Checking\\job-portal\\src\\pages\\cc\\dashboard\\SalaryBreakup.js",[],"D:\\Checking\\job-portal\\src\\pages\\cc\\dashboard\\Joined.js",[],"D:\\Checking\\job-portal\\src\\pages\\cc\\dashboard\\ScheduleInterview.js",[],"D:\\Checking\\job-portal\\src\\pages\\cc\\dashboard\\OfferedDeclined.js",[],"D:\\Checking\\job-portal\\src\\pages\\cc\\dashboard\\YetToJoin.js",[],"D:\\Checking\\job-portal\\src\\components\\Others\\Layout.js",[],"D:\\Checking\\job-portal\\src\\components\\Candidates\\ExpandButton.js",[],"D:\\Checking\\job-portal\\src\\components\\Candidates\\Dialogs.js",[],"D:\\Checking\\job-portal\\src\\components\\Candidates\\Bar.js",[],"D:\\Checking\\job-portal\\src\\components\\Candidates\\View.js",[],"D:\\Checking\\job-portal\\src\\components\\Candidates\\Edit.js",[],"D:\\Checking\\job-portal\\src\\components\\Candidates\\Add.js",[],"D:\\Checking\\job-portal\\src\\components\\Admin\\ReportLayout.js",[],"D:\\Checking\\job-portal\\src\\components\\Recruiter\\SearchStatus.js",[],"D:\\Checking\\job-portal\\src\\components\\Recruiter\\Layout.js",[],"D:\\Checking\\job-portal\\src\\components\\PageTitle\\PageTitle.js",[],"D:\\Checking\\job-portal\\src\\components\\Recruiter\\Reverse.js",[],"D:\\Checking\\job-portal\\src\\components\\Candidates\\Message.js",[],"D:\\Checking\\job-portal\\src\\components\\Recruiter\\Status.js",[],"D:\\Checking\\job-portal\\src\\components\\Candidates\\Drop.js",[],"D:\\Checking\\job-portal\\src\\components\\Recruiter\\Dialogs.js",[],"D:\\Checking\\job-portal\\src\\components\\Candidates\\Note.js",[],"D:\\Checking\\job-portal\\src\\components\\Candidates\\Actions.js",[],"D:\\Checking\\job-portal\\src\\components\\PageTitle\\styles.js",[],"D:\\Checking\\job-portal\\src\\components\\Layout\\styles.js",[],"D:\\Checking\\job-portal\\src\\pages\\cc\\dashboard\\DocumentColleted.js",[],"D:\\Checking\\job-portal\\src\\pages\\cc\\dashboard\\New.js",[],"D:\\Checking\\job-portal\\src\\pages\\chat\\Singlechat.js",[],"D:\\Checking\\job-portal\\src\\pages\\cc\\dashboard\\FinalInterviewScheduled.js",[],"D:\\Checking\\job-portal\\src\\pages\\cc\\Candidates.js",[],"D:\\Checking\\job-portal\\src\\pages\\cc\\dashboard\\InterviewScheduled.js",[],"D:\\Checking\\job-portal\\src\\pages\\cc\\dashboard\\FinalInterviewCompleted.js",[],"D:\\Checking\\job-portal\\src\\pages\\recruiter\\Candidates.js",[],"D:\\Checking\\job-portal\\src\\pages\\cc\\dashboard\\Stc.js",[],"D:\\Checking\\job-portal\\src\\pages\\admin\\AssignedCandidates.js",[],"D:\\Checking\\job-portal\\src\\pages\\admin\\Candidates.js",[],"D:\\Checking\\job-portal\\src\\pages\\admin\\Share.js",[],"D:\\Checking\\job-portal\\src\\pages\\recruiter\\Search.js",[],"D:\\Checking\\job-portal\\src\\pages\\requirements\\Requirements.js",[],"D:\\Checking\\job-portal\\src\\pages\\admin\\dashboard\\YetToJoin.js",[],"D:\\Checking\\job-portal\\src\\pages\\admin\\dashboard\\SalaryBreakup.js",[],"D:\\Checking\\job-portal\\src\\pages\\admin\\dashboard\\FinalInterviewCompleted.js",[],"D:\\Checking\\job-portal\\src\\pages\\admin\\dashboard\\Offered.js",[],"D:\\Checking\\job-portal\\src\\pages\\admin\\dashboard\\DocumentColleted.js",[],"D:\\Checking\\job-portal\\src\\pages\\requirements\\AssignRequirements.js",[],"D:\\Checking\\job-portal\\src\\pages\\admin\\dashboard\\FinalInterviewScheduled.js",[],"D:\\Checking\\job-portal\\src\\pages\\admin\\dashboard\\New.js",[],"D:\\Checking\\job-portal\\src\\pages\\admin\\dashboard\\Joined.js",[],"D:\\Checking\\job-portal\\src\\pages\\admin\\dashboard\\InterviewScheduled.js",[],"D:\\Checking\\job-portal\\src\\pages\\admin\\dashboard\\Stc.js",[],"D:\\Checking\\job-portal\\src\\pages\\admin\\dashboard\\ScheduleInterview.js",[],"D:\\Checking\\job-portal\\src\\pages\\activity\\FreeMsgActivity.js",[],"D:\\Checking\\job-portal\\src\\pages\\activity\\CandidateActivity.js",[],"D:\\Checking\\job-portal\\src\\pages\\activity\\Activity.js",[],"D:\\Checking\\job-portal\\src\\pages\\transaction\\components\\Pdf.js",[],"D:\\Checking\\job-portal\\src\\pages\\forget\\styles.js",[],"D:\\Checking\\job-portal\\src\\pages\\transaction\\Transaction.js",[],"D:\\Checking\\job-portal\\src\\pages\\chat\\Chat.js",[],"D:\\Checking\\job-portal\\src\\pages\\contact\\Contact.js",[],"D:\\Checking\\job-portal\\src\\pages\\price\\Price.js",[],"D:\\Checking\\job-portal\\src\\pages\\company\\Company.js",[],"D:\\Checking\\job-portal\\src\\pages\\plans\\Plans.js",[],"D:\\Checking\\job-portal\\src\\pages\\invoice\\Invoice.js",[],"D:\\Checking\\job-portal\\src\\pages\\ticket\\Ticket.js",[],"D:\\Checking\\job-portal\\src\\pages\\adminUser\\Admin.js",[],"D:\\Checking\\job-portal\\src\\pages\\source\\Source.js",[],"D:\\Checking\\job-portal\\src\\pages\\users\\Users.js",[],"D:\\Checking\\job-portal\\src\\pages\\clients\\Clients.js",[],"D:\\Checking\\job-portal\\src\\pages\\dashboard\\Dashboard.js",[],"D:\\Checking\\job-portal\\src\\components\\Sidebar\\Sidebar.js",[],"D:\\Checking\\job-portal\\src\\components\\Header\\Header.js",[],"D:\\Checking\\job-portal\\src\\pages\\share\\Sidebar\\styles.js",[],"D:\\Checking\\job-portal\\src\\components\\Admin\\AssignAdd.js",[],"D:\\Checking\\job-portal\\src\\components\\Candidates\\Search.js",[],"D:\\Checking\\job-portal\\src\\components\\Sidebar\\styles.js",[],"D:\\Checking\\job-portal\\src\\components\\Candidates\\AddRequirements.js",[],"D:\\Checking\\job-portal\\src\\components\\Admin\\AddClient.js",[],"D:\\Checking\\job-portal\\src\\components\\Admin\\AddUser.js",[],"D:\\Checking\\job-portal\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js",[],"D:\\Checking\\job-portal\\src\\pages\\dashboard\\styles.js",[],"D:\\Checking\\job-portal\\src\\pages\\chat\\styles.js",[],"D:\\Checking\\job-portal\\src\\components\\Admin\\Layout.js",[],"D:\\Checking\\job-portal\\src\\components\\Candidates\\SearchLayout.js",[],"D:\\Checking\\job-portal\\src\\components\\Admin\\Reverse.js",[],"D:\\Checking\\job-portal\\src\\components\\Admin\\Dialogs.js",[],"D:\\Checking\\job-portal\\src\\components\\Admin\\Status.js",[],"D:\\Checking\\job-portal\\src\\components\\Sidebar\\components\\Dot.js",[],"D:\\Checking\\job-portal\\src\\pages\\share\\Share.js",[],"D:\\Checking\\job-portal\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js",[],"D:\\Checking\\job-portal\\src\\pages\\share\\Header.js",[],"D:\\Checking\\job-portal\\src\\pages\\register\\DrawerComp.js",[],"D:\\Checking\\job-portal\\src\\pages\\share\\Sidebar\\Sidebar.js",[],"D:\\Checking\\job-portal\\src\\components\\Admin\\SearchStatus.js",[],"D:\\Checking\\job-portal\\src\\pages\\share\\Sidebar\\components\\SidebarLink\\SidebarLink.js",[],"D:\\Checking\\job-portal\\src\\pages\\share\\Sidebar\\components\\Dot.js",[],"D:\\Checking\\job-portal\\src\\pages\\share\\Sidebar\\components\\SidebarLink\\styles.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\index.js",[],["1292","1293"],"D:\\RecruiterCommunity\\refo-Front\\src\\context\\UserContext.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\context\\LayoutContext.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\components\\App.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\themes\\index.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\register\\Register.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\register\\companyRegister.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\share\\Shortlist.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\register\\candidateCPV.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\login\\author269.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\login\\Login.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\forget\\Forget.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\components\\Layout\\Layout.js",["1294"],"import React, { useEffect, useState } from \"react\";\nimport { Route, Switch, Redirect, withRouter } from \"react-router-dom\";\nimport classnames from \"classnames\";\n// styles\nimport useStyles from \"./styles\";\nimport { useTheme } from \"@material-ui/styles\";\n\n// component\nimport Header from \"../Header\";\nimport Sidebar from \"../Sidebar\";\nimport ParsedResume from \"../Candidates/ParsedResume\";\n // pages\nimport Dashboard from \"../../pages/dashboard\";\nimport Clients from \"../../pages/clients\";\nimport AdminCandidates from \"../../pages/admin/Candidates\";\nimport AssignedCandidates from \"../../pages/admin/AssignedCandidates\";\nimport Share from \"../../pages/admin/Share\";\n\nimport CCCandidates from \"../../pages/cc/Candidates\";\nimport RecruiterCandidates from \"../../pages/recruiter/Candidates\";\nimport Search from \"../../pages/recruiter/Search\";\nimport Admin from \"../../pages/adminUser\";\nimport Users from \"../../pages/users\";\nimport Source from \"../../pages/source\";\nimport Ticket from \"../../pages/ticket\";\n\nimport Activity from \"../../pages/activity/Activity\"; \nimport FreeMessageActivity from \"../../pages/activity/FreeMsgActivity\";\nimport CandidateActivity from \"../../pages/activity/CandidateActivity\";\n\nimport AssignRequirements from \"../../pages/requirements/AssignRequirements\";\n\nimport PDF from \"../../pages/transaction/components/Pdf\"\nimport Requirements from \"../../pages/requirements/Requirements\";\nimport Chat from \"../../pages/chat\";\nimport Singlechat from \"../../pages/chat/Singlechat\";\nimport Invoice from \"../../pages/invoice\";\nimport ResumeSearch from \"../../pages/resumeSearch/ResumeSearch\"\nimport Price from \"../../pages/price\";\nimport Transaction from \"../../pages/transaction\";\nimport Plans from \"../../pages/plans\";\n import Company from \"../../pages/company\";  \nimport Contact from \"../../pages/contact\";  \n\nimport New from \"../../pages/admin/dashboard/New\";\nimport STC from \"../../pages/admin/dashboard/Stc\";\nimport DocumentColleted from \"../../pages/admin/dashboard/DocumentColleted\";\nimport FinalInterviewCompleted from \"../../pages/admin/dashboard/FinalInterviewCompleted\";\nimport FinalInterviewScheduled from \"../../pages/admin/dashboard/FinalInterviewScheduled\";\nimport InterviewScheduled from \"../../pages/admin/dashboard/InterviewScheduled\";\nimport ScheduleInterview from \"../../pages/admin/dashboard/ScheduleInterview\"; \nimport Joined from \"../../pages/admin/dashboard/Joined\";\nimport Offered from \"../../pages/admin/dashboard/Offered\";\nimport SalaryBreakup from \"../../pages/admin/dashboard/SalaryBreakup\";\nimport YetToJoin from \"../../pages/admin/dashboard/YetToJoin\";\n\nimport CCNew from \"../../pages/cc/dashboard/New\";\nimport CCSTC from \"../../pages/cc/dashboard/Stc\";\nimport CCDocumentColleted from \"../../pages/cc/dashboard/DocumentColleted\";\nimport CCFinalInterviewCompleted from \"../../pages/cc/dashboard/FinalInterviewCompleted\";\nimport CCFinalInterviewScheduled from \"../../pages/cc/dashboard/FinalInterviewScheduled\";\nimport CCInterviewScheduled from \"../../pages/cc/dashboard/InterviewScheduled\";\nimport CCScheduleInterview from \"../../pages/cc/dashboard/ScheduleInterview\";\nimport CCJoined from \"../../pages/cc/dashboard/Joined\";\nimport CCOffered from \"../../pages/cc/dashboard/Offered\";\nimport CCOfferedDeclined from \"../../pages/cc/dashboard/OfferedDeclined\";\nimport CCSalaryBreakup from \"../../pages/cc/dashboard/SalaryBreakup\";\nimport CCYetToJoin from \"../../pages/cc/dashboard/YetToJoin\";\n\nimport RECNew from \"../../pages/recruiter/dashboard/New\";\nimport RECSTC from \"../../pages/recruiter/dashboard/Stc\";\nimport RECDocumentColleted from \"../../pages/recruiter/dashboard/DocumentColleted\";\nimport RECFinalInterviewScheduled from \"../../pages/recruiter/dashboard/FinalInterviewScheduled\"\nimport RECFinalInterviewCompleted from \"../../pages/recruiter/dashboard/FinalInterviewCompleted\";\nimport RECScheduleInterview from \"../../pages/recruiter/dashboard/ScheduleInterview\";\nimport RECInterviewScheduled from \"../../pages/recruiter/dashboard/InterviewScheduled\";\nimport RECJoined from \"../../pages/recruiter/dashboard/Joined\";\nimport RECOffered from \"../../pages/recruiter/dashboard/Offered\";\nimport RECOfferedDeclined from \"../../pages/recruiter/dashboard/OfferedDeclined\";\nimport RECSalaryBreakup from \"../../pages/recruiter/dashboard/SalaryBreakup\";\nimport RECYetToJoin from \"../../pages/recruiter/dashboard/YetToJoin\";\n\nimport AllSTC from \"../../pages/admin/reports/Stc\";\nimport AllScheduleInterview from \"../../pages/admin/reports/ScheduleInterview\"; \nimport AllDocumentColleted from \"../../pages/admin/reports/DocumentColleted\";\nimport AllFinalInterviewCompleted from \"../../pages/admin/reports/FinalInterviewCompleted\";\nimport AllJoined from \"../../pages/admin/reports/Joined\";\nimport AllOffered from \"../../pages/admin/reports/Offered\";\nimport AllOfferedDeclined from \"../../pages/admin/reports/OfferedDeclined\";\nimport AllSalaryBreakup from \"../../pages/admin/reports/SalaryBreakup\";\nimport AllInvoiced from \"../../pages/admin/reports/Invoiced\";\nimport AllDitched from \"../../pages/admin/reports/Ditched\";\nimport AllCreditNotes from \"../../pages/admin/reports/CreditNotes\";\nimport AllDrop from \"../../pages/admin/reports/Drop\";\n\n \nimport othersCandidates from \"../../pages/others/Candidates\";\nimport othersRequirements from \"../../pages/others/Requirements\"; \nimport othersNew from \"../../pages/others/dashboard/New\";\nimport othersSTC from \"../../pages/others/dashboard/Stc\";\nimport othersDocumentColleted from \"../../pages/others/dashboard/DocumentColleted\";\nimport othersFinalInterviewScheduled from \"../../pages/others/dashboard/FinalInterviewScheduled\" ;\nimport othersFinalInterviewCompleted from \"../../pages/others/dashboard/FinalInterviewCompleted\";\nimport othersInterviewScheduled from \"../../pages/others/dashboard/InterviewScheduled\";\nimport othersScheduleInterview from \"../../pages/others/dashboard/ScheduleInterview\";\nimport othersJoined from \"../../pages/others/dashboard/Joined\";\nimport othersOffered from \"../../pages/others/dashboard/Offered\";\nimport othersOfferedDeclined from \"../../pages/others/dashboard/OfferedDeclined\";\nimport othersSalaryBreakup from \"../../pages/others/dashboard/SalaryBreakup\";\nimport othersYetToJoin from \"../../pages/others/dashboard/YetToJoin\";\nimport { useLayoutState } from \"../../context/LayoutContext\";\n\nimport jwt_decode from \"jwt-decode\";\nimport red from '@material-ui/core/colors/red';\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { ToastContainer } from \"react-toastify\"; \nimport { createTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\n// context\n\nfunction Layout(props) {\n  var classes = useStyles();\n  var theme = useTheme();\n\n  var layoutState = useLayoutState();\n\n  const token = localStorage.getItem(\"token\");\n  const decoded = jwt_decode(token);\n  const role = decoded.role;\n  const getMuiTheme = () =>\n    createTheme({\n      overrides: {\n        MuiAvatar:{\n          root:{\n            fontFamily: '\"Satoshi\"'\n          }\n        },\n        MuiMenuItem:{\n          root:{\n            fontFamily: '\"Satoshi\"'\n          }\n        },\n        MUIDataTableToolbar: {\n          actions: {\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"flex-end\",\n          },\n          icon:{\n            color: \"#064be2\",\n           \"& svg\":{\n            color: \"white\",\n            width: \"25px\",\n            cursor: \"pointer\",\n            height: \"25px\",\n            padding: \"5px\",\n            boxShadow: \"0 3px 9px 0 rgba(0,0,0,0.3)\",\n            borderRadius: \"100%\",\n            backgroundColor: \"#064be2\"\n           }\n          },\n\n          iconActive:{\n            color: \"#064be2\",\n            \"& svg\":{\n             color: \"white\",\n             width: \"25px\",\n             cursor: \"pointer\",\n             height: \"25px\",\n             padding: \"5px\",\n             boxShadow: \"0 3px 9px 0 rgba(0,0,0,0.3)\",\n             borderRadius: \"100%\",\n             backgroundColor: \"#064be2\"\n            }\n          }\n        },\n            MUIDataTableBody:{\n            \n            emptyTitle:{  \"@media (max-width: 425px)\": { display: \"flex\", justifyContent: \"flex-end\", alignItems:\"center\" \n            },\n            \"@media (max-width: 959.95px)\": {\n               marginLeft: \"-100px\",    \n            }\n          }\n            },\n        \n        MUIDataTableBodyCell: {  \n         \n          stackedCommon: {\n           \n            \"@media (max-width:959.95px)\": { fontSize: \"13px !important\",\n              \"&:nth-last-child(2)\":{ fontWeight: 700 }, \"&:last-child\":{ lineBreak:\"anywhere\" }\n            },\n\n             \n          },\n          responsiveStackedSmallParent:{\n            \"@media (max-width:425px)\": { width:\"93%\"\n            },\n          }\n        },\n        MuiTable:{\n          root:{\n            \"& caption\":{ fontFamily: '\"Satoshi\" !important',\n            }\n          }\n        },\n        MuiTab:{\n          root:{\n            minWidth: \"20% !important\",\n          },\n          wrapper:{\n            textTransform: \"initial !important\",\n          }\n        },\n        MuiTabs:{\n          scroller:{\n            overflowX: \"auto !important\",\n          }\n        },\n        MuiBadge:{\n          badge:{\n            height:\"30px!important\",\n            fontFamily: '\"Satoshi\" !important',\n          },\n          colorSecondary:{\n            backgroundColor: red[500] +\"!important\",\n          },\n          anchorOriginTopLeftCircular:{\n            top: \"14%\",\n            left: \"-21px\",\n            inlineSize: \"max-content\"\n          }\n\n        },\n        MuiTableCell: {\n          head: {\n            color: \"#121224\",\n            backgroundColor: \"#f0f5f9 !important\",\n            fontSize: \"15px !important\",\n            fontWeight: \"bold\",\n            letterSpacing: \"0.02em\"\n          },\n          body: {\n            color: \"#121224\",\n            fontFamily: '\"Satoshi\" !important',\n            fontSize: \"13.5px !important\",\n            \"&:last-child\": { whiteSpace: \"nowrap\",\n            },\n            \n          },\n          \n          root: {\n            padding: \"14px\",\n            fontFamily: '\"Satoshi\" !important',\n           \n          },\n          paddingCheckbox:{\n            \"@media (max-width:959.95px)\": { width:\"10px\",\n            },\n          }\n        },\n        MuiList:{\n          padding:{\n            paddingBottom: \"0px !important\"\n          }\n         \n        },\n        MuiListItem:{\n          secondaryAction:{\n            paddingRight:\"45px !important\"\n          }\n        },\n        MuiSelect:{\n          select:{\n            \"&:focus\":{ backgroundColor:\"none !important\" \n            }\n          }\n        },\n        \n        MuiTableRow: {\n         \n          root:{\n            '&:nth-of-type(odd)': { backgroundColor: \"white\",\n            },\n            '&:nth-of-type(even)': { backgroundColor: \"#f0f5f9\",\n            },\n          }\n         \n        },\n\n        MuiIconButton:{\n          root:{\n            padding:\"9px\"\n          }\n        },\n\n        MuiTypography: {\n          subtitle1: {\n            fontSize: \"1rem\",\n            fontWeight: \"500\",\n           fontFamily: '\"Satoshi\" !important',\n            \"@media (max-width:959.95px)\": { fontSize: \"0.9rem !important\",\n            },\n          },\n          subtitle2: {\n            fontWeight: \"500\",\n           fontFamily: '\"Satoshi\" !important',\n            textAlign: \"center\",\n            padding: \"10px\",\n            fontSize: \"21px\",\n            \"@media (max-width:959.95px)\": { fontSize: \"calc(1.1rem) !important\",\n            },\n          },\n          body1: {\n           fontFamily: '\"Satoshi\" !important',\n            fontSize: \"14px\",\n            \"@media (max-width:959.95px)\": { fontSize: \"13px !important\",\n            },\n          },\n          body2: {\n            color: \"#121224\",\n           fontFamily: '\"Satoshi\" !important',\n            fontSize: \"14px\",\n            \"@media (max-width:959.95px)\": { fontSize: \"13px !important\",\n            },\n          },\n          h5: {\n            color: \"#121224\",\n           fontFamily: '\"Satoshi\" !important',\n            fontSize: \"14px\",\n            \"@media (max-width:959.95px)\": { fontSize: \"calc(1.1rem) !important\",\n            },\n          },\n          h6: {\n            color: \"#121224\",\n           fontFamily: '\"Satoshi\" !important',\n            fontSize: \"14px\",\n            \"@media (max-width:959.95px)\": { fontSize: \"calc(1.1rem) !important\",\n            },\n          },\n        },\n        MuiPaper: {\n          elevation4: {\n            boxShadow: \"none\", \n          },\n        },\n        \n        MuiDialog:{ \n          paper: {\n            margin: \"15px !important\",\n            border: \"1px solid #000 !important\",\n          },\n        },\n\n        \n        MuiFab:{\n        root:{\n          \"&:hover\":{\n          \n            backgroundColor: \"064be2 !important\"\n          }\n        }\n        },\n        MuiButton: { \n\n          root:{  \n            fontFamily: '\"Satoshi !important\"', fontSize: \"14px\", fontWeight: 500, boxShadow: \"0 3px 9px 0 rgba(0,0,0,0.3) !important\", \"@media (max-width:959.95px)\": { fontSize: \"10px !important\", }, \n            \"& $Mui-disabled\":{\n               color:\"rgba(0, 0, 0, 0.26) !important\",\n               backgroundColor: \"rgba(0, 0, 0, 0.26) !important\",\n            }\n          \n          },\n          label: {\n           fontFamily: '\"Satoshi\" !important',\n            fontSize: \"14px\",\n            \"@media (max-width:959.95px)\": { fontSize: \"10px !important\",\n            },\n          },\n          containedPrimary:{ \n            backgroundColor: \"#064be2\",   \n            textTransform:  \"initial !important\", \n            '&:active':{ backgroundColor: \"#064be2 !important\", color:\"#fff !important\",\n            },\n            '&:hover':{ backgroundColor: \"#064be2 !important\", color:\"#fff !important\",\n            },\n            '&:disabled':{ backgroundColor: \"#064be2c7 !important\", color:\"#fff !important\",\n            }\n        },\n        containedSizeSmall:{\n          textTransform:  \"initial !important\", \n          padding:  \"4px 10px !important\",\n          fontWeight: \"300 !important\",\n          height: \"fit-content !important\",\n        },\n        containedSecondary:{ \n          backgroundColor: red[500] +\"!important\",\n          '&:active':{\n            backgroundColor: red[500] +\"!important\",\n            color:\"#fff !important\",\n          },\n          '&:hover':{\n            backgroundColor: red[500] +\"!important\",\n            color:\"#fff !important\",\n          }\n        },\n        },\n        MuiFormLabel: {\n          root: {\n           fontFamily: '\"Satoshi\" !important',\n            fontSize: \"20px\",\n            \"@media (max-width:959.95px)\": { fontSize: \"15px !important\",\n            },\n            color: \"rgba(0, 0, 0, 0.87)\",\n          },\n        },\n        MuiCheckbox: {\n          root: {\n            color: \"#bcbdbf\",\n          },\n        },\n        MuiFormControl: {\n          root: {\n            width: \"100%\",\n          },\n        },\n        MuiTooltip:{\n          tooltip:{\n            fontFamily: '\"Satoshi\" !important',\n          },\n          // popper:{\n          //   top: \"-34px !important\",\n          //   left: '-45px !important'\n          // }\n        },\n        MuiInputBase: {\n          root: {\n           \n            width: \"100%\",\n          },\n          input: {\n            width: \"100%\",\n            border: \"none\",\n            fontSize: \"13px\",\n            display: \"block\",\n            padding: \"10px 12px !important\",\n            \n            borderRadius: \"4px\",\n          },\n        },\n       \n        MuiAutocomplete: {\n          input: {\n            width: \"100% !important\",\n          },\n        },\n         \n        MuiFilledInput: {\n          root: {\n            width: \"100%\",\n            display: \"block\",\n            padding: \"0px 25px 0px 0px !important\",\n            position: \"relative\",\n            fontSize: \"13px\",\n            marginTop: \"24px\",\n           \n            backgroundColor: \"white\",\n            \"&:hover\": { backgroundColor: \"unset !important\",\n            },\n            \"&.Mui-focused\": { backgroundColor: \"unset !important\",\n            },\n          },\n\n          underline: {\n            \"&&&:before\": { borderBottom: \"none\",\n            },\n            \"&&:after\": { borderBottom: \"none\",\n            },\n          },\n          inputAdornedEnd: {\n            border: \"1px solid #ced4da\",\n          },\n        },\n       \n        MuiOutlined: {\n          MuiChip: {\n            avatar: { margin: \"0px\",\n            },\n          },\n        },\n\n        MuiCardContent:{\n          root:{\n            \"&:last-child\":{ \n              paddingBottom: \"10px !important\",\n             }\n           \n          }\n        },\n        MuiCardActions:{\n          root:{\n            marginBottom: \"1px !important\"\n            // padding: \"0px\",\n            // marginBottom: \"20px\", \n            // \"@media (max-width:959.95px)\": { \n            //   marginBottom: \"1px !important\",\n            // },\n          }\n        },\n\n      \n      \n        MuiDrawer: {\n          paperAnchorBottom: {\n            width: \"50%\",\n            left: \"30%\",\n            bottom: \"10%\",\n          },\n          paper:{\n            overflowY:\"auto\",\n            overflowX:\"hidden\",\n          }\n        },\n        MuiDialogTitle:{\n          root:{\n            padding:\"0px 10px !important\"\n          }\n        },\n\n        MuiChip: {\n          avatar: {\n            width: \"50px !important\",\n            height: \"50px !important\",\n            fontSize: \"1.5rem !important\",\n            margin: \"0px\",\n          },\n        },\n        MuiInputLabel: {\n          shrink: {\n            width: \"max-content\",\n          },\n        },\n      },\n\n      MuiFormGroup: {\n        row: {\n          marginTop: \"10px !important\",\n        },\n      },\n     \n      \n    });\n\n    var [isPermanent, setPermanent] = useState(true);\n\n    useEffect(function () {\n      window.addEventListener(\"resize\", handleWindowWidthChange);\n    handleWindowWidthChange();\n    return function cleanup() {\n      window.removeEventListener(\"resize\", handleWindowWidthChange);\n};\n});\n\n    function handleWindowWidthChange() {\n      var windowWidth = window.innerWidth;\n      // var breakpointWidth = theme.breakpoints.values.md\n      var breakpointWidth = theme.breakpoints.values.sm \n      var isSmallScreen = windowWidth < breakpointWidth\n       if (isSmallScreen && isPermanent) {\n      setPermanent(false);\n      } else if (!isSmallScreen && !isPermanent) {\n      setPermanent(true);\n      }\n      }\n\n  return (\n    <div className={classes.root}>\n      <>\n        <MuiThemeProvider theme={getMuiTheme()}>\n          <Sidebar />\n          <div\n            className={classnames(classes.content, {\n               [classes.contentShift]: isPermanent&&!layoutState.isSidebarOpened,\n               [classes.contentShift1]: layoutState.isSidebarOpened,\n             })}\n          >\n            <div className={classes.fakeToolbar}> <Header history={props.history} />\n            </div>\n\n            <Switch>\n            \n\n              <AuthRoute  path=\"/app/dashboard\" role={role} roles={[ \"SUPERADMIN\", \"ADMIN\", \"RECRUITER\", \"CLIENTCOORDINATOR\", \"FREELANCER\", \"SUBVENDOR\"]} component={Dashboard} /> <AuthRoute  path=\"/app/admin\"  role={role}   roles={[\"SUPERADMIN\"]} component={Admin}   /> <AuthRoute  path=\"/app/transaction\" role={role} roles={[\"SUPERADMIN\", \"ADMIN\"]} component={Transaction} /> <AuthRoute path=\"/app/price\" role={role} roles={[\"SUPERADMIN\"]} component={Price} />\n              <AuthRoute path=\"/app/search\" role={role} roles={[\"ADMIN\", \"RECRUITER\", \"CLIENTCOORDINATOR\", \"FREELANCER\", \"SUBVENDOR\"]} component={Search} /> \n              <AuthRoute path=\"/app/pdf_view\" role={role} roles={[\"SUPERADMIN\"]} component={PDF} /> \n               <AuthRoute path=\"/app/company\" role={role} roles={[\"SUPERADMIN\"]} component={Company} />  \n              <AuthRoute path=\"/app/contact\" role={role} roles={[\"SUPERADMIN\"]} component={Contact} /> \n\n              \n\n\n              <AuthRoute path=\"/app/ticket\" role={role} roles={[\"SUPERADMIN\",\"ADMIN\"]} component={Ticket} />\n              <AuthRoute path=\"/app/singlechat\" role={role} roles={[   \"SUPERADMIN\",   \"ADMIN\",   \"RECRUITER\",   \"CLIENTCOORDINATOR\", ]} component={Singlechat} />\n              <AuthRoute path=\"/app/assign_requirements\" role={role} roles={[\"ADMIN\"]} component={AssignRequirements} />\n              <AuthRoute path=\"/app/assigned_candidates\" role={role} roles={[\"ADMIN\"]} component={AssignedCandidates} />\n              <AuthRoute path=\"/app/requirements_Candidate\" role={role} roles={[\"ADMIN\"]} component={Share} />\n\n              <AuthRoute path=\"/app/reports/all_candidates_stc\" role={role} roles={[\"ADMIN\"]} component={AllSTC} />\n              <AuthRoute path=\"/app/reports/all_candidates_schedule_interview\" role={role} roles={[\"ADMIN\"]} component={AllScheduleInterview} /> \n              <AuthRoute path=\"/app/reports/all_candidates_fic\" role={role} roles={[\"ADMIN\"]} component={AllFinalInterviewCompleted} /> \n              <AuthRoute path=\"/app/reports/all_candidates_document_collected\" role={role} roles={[\"ADMIN\"]} component={AllDocumentColleted} /> \n              <AuthRoute path=\"/app/reports/all_candidates_salary_breakup_shared\" role={role} roles={[\"ADMIN\"]} component={AllSalaryBreakup} /> \n              <AuthRoute path=\"/app/reports/all_candidates_offered\" role={role} roles={[\"ADMIN\"]} component={AllOffered} /> \n              <AuthRoute path=\"/app/reports/all_candidates_joined\" role={role} roles={[\"ADMIN\"]} component={AllJoined} /> \n              <AuthRoute path=\"/app/reports/all_candidates_ditched\" role={role} roles={[\"ADMIN\"]} component={AllDitched} /> \n              <AuthRoute path=\"/app/reports/all_candidates_invoiced\" role={role} roles={[\"ADMIN\"]} component={AllInvoiced} />\n              <AuthRoute path=\"/app/reports/all_candidates_credit_note\" role={role} roles={[\"ADMIN\"]} component={AllCreditNotes} /> \n              <AuthRoute path=\"/app/reports/all_candidates_Offered_declined\" role={role} roles={[\"ADMIN\"]} component={AllOfferedDeclined} />\n              <AuthRoute path=\"/app/reports/all_candidates_drop\" role={role} roles={[\"ADMIN\"]} component={AllDrop} />\n             \n              <AuthRoute path=\"/app/users\" role={role} roles={[\"ADMIN\"]} component={Users} /> \n              <AuthRoute path=\"/app/clients\" role={role} roles={[\"ADMIN\"]} component={Clients} /> \n              {/* <AuthRoute path=\"/app/invoice\" role={role} roles={[\"ADMIN\"]} component={Invoice} />  */}\n              <AuthRoute path=\"/app/resume_search\" role={role} roles={[\"ADMIN\"]} component={ResumeSearch} /> \n              <AuthRoute path=\"/app/chat\" role={role} roles={[\"ADMIN\"]} component={Chat} /> \n              <AuthRoute path=\"/app/settings/source\" role={role} roles={[\"ADMIN\", \"CLIENTCOORDINATOR\"]} component={Source} /> \n              <AuthRoute path=\"/app/activity\" role={role} roles={[\"ADMIN\"]} component={Activity} /> \n              <AuthRoute path=\"/app/settings/free_message_activity\" role={role} roles={[\"ADMIN\"]} component={FreeMessageActivity} /> \n              <AuthRoute path=\"/app/candidate_activity\" role={role} roles={[\"ADMIN\"]} component={CandidateActivity} /> \n              <AuthRoute path=\"/app/requirements\" role={role} roles={[\"ADMIN\", \"CLIENTCOORDINATOR\"]} component={Requirements} /> \n              <AuthRoute path=\"/app/admin_candidates\" role={role} roles={[\"ADMIN\"]} component={AdminCandidates} />\n              <AuthRoute path=\"/app/parsed_resume\" role={role} roles={[\"ADMIN\",\"RECRUITER\",\"CLIENTCOORDINATOR\",\"FREELANCER\", \"SUBVENDOR\"]} component={ParsedResume} />\n              <AuthRoute path=\"/app/plans\" role={role} roles={[\"ADMIN\"]} component={Plans} />  \n              <AuthRoute path=\"/app/cc_candidates\" role={role} roles={[\"CLIENTCOORDINATOR\"]} component={CCCandidates} /> \n              <AuthRoute path=\"/app/recruiter_candidates\" role={role} roles={[\"RECRUITER\"]} component={RecruiterCandidates} /> \n \n              <AuthRoute path=\"/app/admin_candidates_new\" role={role} roles={[\"ADMIN\"]} component={New} /> \n              <AuthRoute path=\"/app/admin_candidates_stc\" role={role} roles={[\"ADMIN\"]} component={STC} /> \n              <AuthRoute path=\"/app/admin_candidates_schedule_interview\" role={role} roles={[\"ADMIN\"]} component={ScheduleInterview} />\n              <AuthRoute path=\"/app/admin_candidates_interview_scheduled\" role={role} roles={[\"ADMIN\"]} component={InterviewScheduled} /> \n              <AuthRoute path=\"/app/admin_candidates_final_interview_scheduled\" role={role} roles={[\"ADMIN\"]} component={FinalInterviewScheduled} />\n              <AuthRoute path=\"/app/admin_candidates_fic\" role={role} roles={[\"ADMIN\"]} component={FinalInterviewCompleted} /> \n              <AuthRoute path=\"/app/admin_candidates_document_collected\" role={role} roles={[\"ADMIN\"]} component={DocumentColleted} /> \n              <AuthRoute path=\"/app/admin_candidates_salary_breakup_shared\" role={role} roles={[\"ADMIN\"]} component={SalaryBreakup} /> \n              <AuthRoute path=\"/app/admin_candidates_offered\" role={role} roles={[\"ADMIN\"]} component={Offered} /> \n              <AuthRoute path=\"/app/admin_candidates_joined\" role={role} roles={[\"ADMIN\"]} component={Joined} /> \n              <AuthRoute path=\"/app/admin_candidates_yet_to_join\" role={role} roles={[\"ADMIN\"]} component={YetToJoin} />\n\n              <AuthRoute path=\"/app/cc_candidates_new\" role={role} roles={[\"CLIENTCOORDINATOR\"]} component={CCNew} /> \n              <AuthRoute path=\"/app/cc_candidates_stc\" role={role} roles={[\"CLIENTCOORDINATOR\"]} component={CCSTC} /> \n              <AuthRoute path=\"/app/cc_candidates_interview_scheduled\" role={role} roles={[\"CLIENTCOORDINATOR\"]} component={CCInterviewScheduled} /> \n              <AuthRoute path=\"/app/cc_candidates_schedule_interview\" role={role} roles={[\"CLIENTCOORDINATOR\"]} component={CCScheduleInterview} />\n              <AuthRoute path=\"/app/cc_candidates_fis\" role={role} roles={[\"CLIENTCOORDINATOR\"]} component={CCFinalInterviewScheduled} />\n              <AuthRoute path=\"/app/cc_candidates_fic\" role={role} roles={[\"CLIENTCOORDINATOR\"]} component={CCFinalInterviewCompleted} /> \n              <AuthRoute path=\"/app/cc_candidates_document_collected\" role={role} roles={[\"CLIENTCOORDINATOR\"]} component={CCDocumentColleted} />\n              <AuthRoute path=\"/app/cc_candidates_salary_breakup_shared\" role={role} roles={[\"CLIENTCOORDINATOR\"]} component={CCSalaryBreakup} /> \n              <AuthRoute path=\"/app/cc_candidates_offered\" role={role} roles={[\"CLIENTCOORDINATOR\"]} component={CCOffered} /> \n              <AuthRoute path=\"/app/cc_candidates_joined\" role={role} roles={[\"CLIENTCOORDINATOR\"]} component={CCJoined} /> \n              <AuthRoute path=\"/app/cc_candidates_offer_declined\" role={role} roles={[\"CLIENTCOORDINATOR\"]} component={CCOfferedDeclined} /> \n              <AuthRoute path=\"/app/cc_candidates_yet_to_join\" role={role} roles={[\"CLIENTCOORDINATOR\"]} component={CCYetToJoin} />\n\n              <AuthRoute path=\"/app/recruiter_candidates_new\" role={role} roles={[\"RECRUITER\"]} component={RECNew} /> \n              <AuthRoute path=\"/app/recruiter_candidates_stc\" role={role} roles={[\"RECRUITER\"]} component={RECSTC} /> \n              <AuthRoute path=\"/app/recruiter_candidates_schedule_interview\" role={role} roles={[\"RECRUITER\"]} component={RECScheduleInterview} /> \n              <AuthRoute path=\"/app/recruiter_candidates_interview_scheduled\" role={role} roles={[\"RECRUITER\"]} component={RECInterviewScheduled} />\n              <AuthRoute path=\"/app/recruiter_candidates_fis\" role={role} roles={[\"RECRUITER\"]} component={RECFinalInterviewScheduled} /> \n              <AuthRoute path=\"/app/recruiter_candidates_fic\" role={role} roles={[\"RECRUITER\"]} component={RECFinalInterviewCompleted} /> \n              <AuthRoute path=\"/app/recruiter_candidates_document_collected\" role={role} roles={[\"RECRUITER\"]} component={RECDocumentColleted} /> \n              <AuthRoute path=\"/app/recruiter_candidates_salary_breakup_shared\" role={role} roles={[\"RECRUITER\"]} component={RECSalaryBreakup} /> \n              <AuthRoute path=\"/app/recruiter_candidates_offered\" role={role} roles={[\"RECRUITER\"]} component={RECOffered} /> \n              <AuthRoute path=\"/app/recruiter_candidates_joined\" role={role} roles={[\"RECRUITER\"]} component={RECJoined} /> \n              <AuthRoute path=\"/app/recruiter_candidates_offer_declined\" role={role} roles={[\"RECRUITER\"]} component={RECOfferedDeclined} /> \n              <AuthRoute path=\"/app/recruiter_candidates_yet_to_join\" role={role} roles={[\"RECRUITER\"]} component={RECYetToJoin} />\n\n              <AuthRoute path=\"/app/others_candidates\" role={role} roles={[\"FREELANCER\", \"SUBVENDOR\"]} component={othersCandidates} /> \n              <AuthRoute path=\"/app/others_requirements\" role={role} roles={[\"FREELANCER\", \"SUBVENDOR\"]} component={othersRequirements} /> \n              <AuthRoute path=\"/app/others_candidates_new\" role={role} roles={[\"FREELANCER\", \"SUBVENDOR\"]} component={othersNew} /> \n              <AuthRoute path=\"/app/others_candidates_stc\" role={role} roles={[\"FREELANCER\", \"SUBVENDOR\"]} component={othersSTC} /> \n              <AuthRoute path=\"/app/others_candidates_schedule_interview\" role={role} roles={[\"FREELANCER\", \"SUBVENDOR\"]} component={othersScheduleInterview} /> \n              <AuthRoute path=\"/app/others_candidates_interview_scheduled\" role={role} roles={[\"FREELANCER\", \"SUBVENDOR\"]} component={othersInterviewScheduled} />\n              <AuthRoute path=\"/app/others_candidates_fis\" role={role} roles={[\"FREELANCER\", \"SUBVENDOR\"]} component={othersFinalInterviewScheduled} /> \n              <AuthRoute path=\"/app/others_candidates_fic\" role={role} roles={[\"FREELANCER\", \"SUBVENDOR\"]} component={othersFinalInterviewCompleted} /> \n              <AuthRoute path=\"/app/others_candidates_document_collected\" role={role} roles={[\"FREELANCER\", \"SUBVENDOR\"]} component={othersDocumentColleted} /> \n              <AuthRoute path=\"/app/others_candidates_salary_breakup_shared\" role={role} roles={[\"others\"]} component={othersSalaryBreakup} /> \n              <AuthRoute path=\"/app/others_candidates_offered\" role={role} roles={[\"FREELANCER\", \"SUBVENDOR\"]} component={othersOffered} /> \n              <AuthRoute path=\"/app/others_candidates_joined\" role={role} roles={[\"FREELANCER\", \"SUBVENDOR\"]} component={othersJoined} /> \n              <AuthRoute path=\"/app/others_candidates_offer_declined\" role={role} roles={[\"FREELANCER\", \"SUBVENDOR\"]} component={othersOfferedDeclined} /> \n               <AuthRoute path=\"/app/others_candidates_yet_to_join\" role={role} roles={[\"FREELANCER\", \"SUBVENDOR\"]} component={othersYetToJoin} />\n      </Switch>\n          </div>\n          <ToastContainer\n        closeButton={\n          <CloseButton className={classes.notificationCloseButton} />\n        }\n        closeOnClick={false}\n        hideProgressBar={true}\n      />\n        </MuiThemeProvider>\n      </>\n    </div>\n  );\n}\n\nexport default withRouter(Layout);\n\nfunction CloseButton({ closeToast, className }) {\n  return <CloseIcon className={className} onClick={closeToast} />;\n}\nfunction AuthRoute({ component, role, roles = [], ...rest }) {\n\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        roles.includes(role) ? (\n          React.createElement(component, props)\n        ) : (\n          <Redirect\n            to={{ pathname: \"/login\", state: { from: props.location, },\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n","D:\\RecruiterCommunity\\refo-Front\\src\\themes\\default.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\login\\styles.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\components\\Notification\\Notification.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\components\\Notification\\styles.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\components\\Wrappers\\Wrappers.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\others\\Requirements.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\others\\Candidates.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\others\\dashboard\\Offered.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\others\\dashboard\\OfferedDeclined.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\others\\dashboard\\SalaryBreakup.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\others\\dashboard\\Joined.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\others\\dashboard\\YetToJoin.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\others\\dashboard\\FinalInterviewScheduled.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\others\\dashboard\\ScheduleInterview.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\others\\dashboard\\DocumentColleted.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\others\\dashboard\\New.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\others\\dashboard\\FinalInterviewCompleted.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\others\\dashboard\\Stc.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\others\\dashboard\\InterviewScheduled.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\recruiter\\dashboard\\Joined.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\recruiter\\dashboard\\YetToJoin.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\recruiter\\dashboard\\OfferedDeclined.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\recruiter\\dashboard\\SalaryBreakup.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\recruiter\\dashboard\\InterviewScheduled.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\admin\\reports\\Invoiced.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\recruiter\\dashboard\\Offered.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\admin\\reports\\Drop.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\admin\\reports\\CreditNotes.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\admin\\reports\\DocumentColleted.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\admin\\reports\\FinalInterviewCompleted.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\admin\\reports\\SalaryBreakup.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\admin\\reports\\Stc.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\admin\\reports\\Joined.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\admin\\reports\\OfferedDeclined.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\admin\\reports\\ScheduleInterview.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\admin\\reports\\Ditched.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\admin\\reports\\Offered.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\recruiter\\dashboard\\FinalInterviewCompleted.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\recruiter\\dashboard\\ScheduleInterview.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\recruiter\\dashboard\\Stc.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\recruiter\\dashboard\\New.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\recruiter\\dashboard\\FinalInterviewScheduled.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\recruiter\\dashboard\\DocumentColleted.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\recruiter\\Search.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\admin\\Share.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\admin\\AssignedCandidates.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\recruiter\\Candidates.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\activity\\Activity.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\activity\\CandidateActivity.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\admin\\Candidates.js",["1295","1296"],"import React, { useState, useEffect, useReducer, useRef } from \"react\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport {\r\n  Grid,\r\n  Button,\r\n  TextField,\r\n  SwipeableDrawer,\r\n  TablePagination,\r\n  Backdrop,\r\n  CircularProgress,\r\n  Avatar,\r\n} from \"@material-ui/core\";\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport { toast } from \"react-toastify\";\r\n//import CloudDownloadIcon from \"@material-ui/icons/CloudDownload\";\r\nimport moment from \"moment\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n//import classNames from \"classnames\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport external from \"../../images/external.png\";\r\n// import { saveAs } from \"file-saver\";\r\n// import XlsxPopulate from \"xlsx-populate\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport ViewIcon from \"@material-ui/icons/Visibility\";\r\nimport DescriptionIcon from \"@material-ui/icons/Description\";\r\n//import GetAppIcon from \"@material-ui/icons/GetApp\";\r\n\r\nimport axios from \"axios\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as Yup from \"yup\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nimport { useForm } from \"react-hook-form\";\r\nimport Notification from \"../../components/Notification\";\r\n\r\nimport Status from \"../../components/Admin/Status\";\r\nimport Dialogs from \"../../components/Admin/Dialogs\";\r\nimport ResumeDialog from \"../../components/Candidates/Dialogs\";\r\nimport Drop from \"../../components/Candidates/Drop\";\r\nimport Reverse from \"../../components/Admin/Reverse\";\r\nimport Actions from \"../../components/Candidates/Actions\";\r\n\r\nimport Add from \"../../components/Candidates/Add\";\r\nimport Edit from \"../../components/Candidates/Edit\";\r\nimport View from \"../../components/Candidates/View\";\r\nimport Note from \"../../components/Candidates/Note\";\r\nimport Bar from \"../../components/Candidates/Bar\";\r\nimport Message from \"../../components/Candidates/Message\";\r\nimport ExpandButton from \"../../components/Candidates/ExpandButton\";\r\nimport useStyles from \"../../themes/style.js\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport MatchJDDialog from \"../../components/Candidates/MatchJDDialog.js\";\r\nimport {useResumeDataContext } from '../../context/CandidateDataContext.js'\r\n\r\nconst positions = [toast.POSITION.TOP_RIGHT];\r\n\r\nexport default function Candidates(props) {\r\n  var classes = useStyles();\r\n  const messageRef = useRef();\r\n  const candidate_search = props.location.search;\r\n  const history = useHistory();\r\n  const mobileQuery = useMediaQuery(\"(max-width:600px)\");\r\n  const token = localStorage.getItem(\"token\");\r\n  const decode = jwt_decode(token);\r\n  const filterRef = useRef(null);\r\n  const [count, setCount] = useState(0);\r\n  const [loader, setLoader] = useState(false);\r\n  const [userName, setUserName] = useState([]);\r\n  const [clientName, setClientName] = useState([]);\r\n  const [candidateList, setCandidateList] = useState({\r\n    id: \"\",\r\n    name: \"\",\r\n    mobile: \"\",\r\n    message: \"\",\r\n    rec_name: \"\",\r\n    rec_mobile_no: \"\",\r\n  });\r\n  const [state, setState] = useState({\r\n    bottom: false,\r\n    right: false,\r\n  });\r\n\r\n  const [candidatesData, setCandidatesData] = useState([]);\r\n  const [search, setSearch] = useState(\r\n    new URLSearchParams(candidate_search).get(\"search\"),\r\n  );\r\n  const { setResumeParsedData } = useResumeDataContext();\r\n  const [date, setDay] = useState(\"\");\r\n  const [month, setMonth] = useState(\"\");\r\n  const [year, setYear] = useState(\"\");\r\n\r\n  const months = [\r\n    \"01\",\r\n    \"02\",\r\n    \"03\",\r\n    \"04\",\r\n    \"05\",\r\n    \"06\",\r\n    \"07\",\r\n    \"08\",\r\n    \"09\",\r\n    \"10\",\r\n    \"11\",\r\n    \"12\",\r\n  ];\r\n  const days = Array.from({ length: 31 }, (_, i) => i + 1);\r\n  const years = Array.from(\r\n    { length: 60 },\r\n    (_, i) => moment(new Date()).format(\"YYYY\") - i,\r\n  );\r\n\r\n  const [ resumePercentage , setResumePercentage]= useState([])\r\n  const [ matchLoading, setMatchLoading] = useState(false)\r\n  const [candidMatchId, setCandidMatchId] = useState(\"\");\r\n\r\n\r\n  function handleUse(mobile) {\r\n    history.push(\"admin_candidates\");\r\n    sessionStorage.setItem(\"use\", mobile);\r\n\r\n    setState({ ...state, right: true });\r\n    setDataList(\"ADD\");\r\n\r\n    axios({\r\n      method: \"post\",\r\n      url: `${process.env.REACT_APP_SERVER}recruiter/checkCandidateDetailExist`,\r\n      data: {\r\n        mobile: mobile.substring(2),\r\n      },\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: token,\r\n      },\r\n    }).then(function (response) {\r\n      if (response.data.status === true) {\r\n        // reset({\r\n        //   requirementId:recruitmentId,\r\n        //   mobile: mobile.substring(2),\r\n        //   email: response.data.data?.email,\r\n        //   firstName: response.data.data?.firstName,\r\n        //   lastName: response.data.data?.lastName,\r\n        //   skills: response.data.data?.skills,\r\n        //   experience: response.data.data?.experience,\r\n        //   location: response.data.data?.currentLocation,\r\n        //    candidateProcessed:  response.data.data?.candidateProcessed,\r\n        //   native:  response.data.data?.nativeLocation,\r\n        //   preferredLocation:  response.data.data?.preferredLocation,\r\n        //   relevantExperience: response.data.data?.relevantExperience,\r\n        //   educationalQualification:  response.data.data?.educationalQualification,\r\n        //   gender: response.data.data?.gender,\r\n        //   differentlyAbled: response.data.data?.differentlyAbled,\r\n        //   currentCtc: response.data.data?.currentCtc,\r\n        //   expectedCtc:  response.data.data?.expectedCtc,\r\n        //   noticePeriod: response.data.data?.noticePeriod,\r\n        //   reasonForJobChange: response.data.data?.reasonForJobChange,\r\n        //   currentCompanyName: response.data.data?.currentCompanyName,\r\n        //   reason: response.data.data?.reason,\r\n        //   })\r\n\r\n        setCandidate({\r\n          ...candidate,\r\n          mobile: mobile.substring(2),\r\n          email: response.data.data?.email,\r\n          firstName: response.data.data?.firstName,\r\n          lastName: response.data.data?.lastName,\r\n          skills: response.data.data?.skills,\r\n          experience: response.data.data?.experience,\r\n          location: response.data.data?.currentLocation,\r\n          dob: response.data.data?.dob,\r\n          candidateProcessed: response.data.data?.candidateProcessed,\r\n          native: response.data.data?.nativeLocation,\r\n          preferredLocation: response.data.data?.preferredLocation,\r\n          relevantExperience: response.data.data?.relevantExperience,\r\n          educationalQualification:\r\n            response.data.data?.educationalQualification,\r\n          gender: response.data.data?.gender,\r\n          differentlyAbled: response.data.data?.differentlyAbled,\r\n          currentCtc: response.data.data?.currentCtc,\r\n          expectedCtc: response.data.data?.expectedCtc,\r\n          noticePeriod: response.data.data?.noticePeriod,\r\n          reasonForJobChange: response.data.data?.reasonForJobChange,\r\n          reason: response.data.data?.reason,\r\n          candidateRecruiterDiscussionRecording:\r\n            response.data.data?.candidateRecruiterDiscussionRecording,\r\n          candidateSkillExplanationRecording:\r\n            response.data.data?.candidateSkillExplanationRecording,\r\n          candidateMindsetAssessmentLink:\r\n            response.data.data?.candidateMindsetAssessmentLink,\r\n          candidateAndTechPannelDiscussionRecording:\r\n            response.data.data?.candidateAndTechPannelDiscussionRecording,\r\n          currentCompanyName: response.data.data?.currentCompanyName,\r\n          freeValue:\r\n            decode.isEnableFree === true\r\n              ? \"YES\"\r\n              : decode.isEnablePaid === true\r\n              ? \"NO\"\r\n              : \"YES\",\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  const [candidatesNote, setCandidatesNote] = useState([]);\r\n  const [candidatesEdit, setCandidatesEdit] = useState({\r\n    id: \"\",\r\n    email: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    mobile: \"\",\r\n    skills: \"\",\r\n    requirementName: \"\",\r\n    source: \"\",\r\n    invoicedDate: \"\",\r\n    joinedDate: \"\",\r\n    invoiceValue: \"\",\r\n    location: \"\",\r\n    experience: null,\r\n    resume: \"\",\r\n    gender: \"\",\r\n    differentlyAbled: \"\",\r\n    candidateProcessed: \"\",\r\n    currentLocation: \"\",\r\n    preferredLocation: \"\",\r\n    nativeLocation: \"\",\r\n    relevantExperience: null,\r\n    currentCtc: null,\r\n    expectedCtc: null,\r\n    dob: \"\",\r\n    noticePeriod: \"\",\r\n    reasonForJobChange: \"\",\r\n    reason: \"\",\r\n    educationalQualification: \"\",\r\n    alternateMobile: \"\",\r\n    candidateRecruiterDiscussionRecording: \"\",\r\n    candidateSkillExplanationRecording: \"\",\r\n    candidateMindsetAssessmentLink: \"\",\r\n    candidateAndTechPannelDiscussionRecording: \"\",\r\n    mainId: \"\",\r\n    recruiterId: \"\",\r\n    currentCompanyName: \"\",\r\n    hideContactDetails: false,\r\n  });\r\n\r\n  const [candidateView, setCandidateView] = useState({\r\n    id: \"\",\r\n    chatId: \"\",\r\n    email: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    cc: \"\",\r\n    mobile: \"\",\r\n    skills: \"\",\r\n    clientName: \"\",\r\n    requirementName: \"\",\r\n    statusCode: \"\",\r\n    source: \"\",\r\n    invoiceValue: \"\",\r\n    requiremenUniqueId: \"\",\r\n    candidateUniqueId: \"\",\r\n    location: \"\",\r\n    experience: null,\r\n    resume: \"\",\r\n\r\n    gender: \"\",\r\n    differentlyAbled: \"\",\r\n    candidateProcessed: \"\",\r\n    currentLocation: \"\",\r\n    preferredLocation: \"\",\r\n    nativeLocation: \"\",\r\n    relevantExperience: null,\r\n    currentCtc: null,\r\n    expectedCtc: null,\r\n    dob: \"\",\r\n    noticePeriod: \"\",\r\n    reasonForJobChange: \"\",\r\n    reason: \"\",\r\n    educationalQualification: \"\",\r\n    alternateMobile: \"\",\r\n    candidateRecruiterDiscussionRecording: \"\",\r\n    candidateSkillExplanationRecording: \"\",\r\n    candidateMindsetAssessmentLink: \"\",\r\n    candidateAndTechPannelDiscussionRecording: \"\",\r\n    mainId: \"\",\r\n    isCandidateCpv: \"\",\r\n    currentCompanyName: \"\",\r\n  });\r\n\r\n  const [page, setPage] = useState(0);\r\n  const [currerntPage, setCurrerntPage] = useState(1);\r\n  const [rowsPerPage] = useState(50);\r\n\r\n  const [reducerValue, forceUpdate] = useReducer((x) => x + 1, 0);\r\n  const joiningRef = useRef();\r\n  const invoiceRef = useRef();\r\n  const [file, setFile] = useState([]);\r\n  const [assessment, setAssessment] = useState([]);\r\n  const [hideContactDetails, setHideContactDetails] = useState(false);\r\n\r\n  const [dataList, setDataList] = useState(\"ADD\");\r\n  const [requirement, setRequirement] = useState([]);\r\n  const [requirementList, setRequirementList] = useState({\r\n    cand1_name: \"\",\r\n    job1_location: \"\",\r\n    client1_name: \"\",\r\n    job1_title: \"\",\r\n    cand1_skills: \"\",\r\n    job1_experience: \"\",\r\n    rec_name: \"\",\r\n    rec_mobile_no: \"\",\r\n    req_id: \"\",\r\n  });\r\n\r\n  const [shortList, setShortList] = useState({\r\n    id: \"\",\r\n    cand_name: \"\",\r\n    job_id: \"\",\r\n    job_name: \"\",\r\n    rec_name: \"\",\r\n    rec_mobile_no: \"\",\r\n    cand_mobile: \"\",\r\n    statusCode: \"\",\r\n    free: \"\",\r\n  });\r\n\r\n  const [recruitmentList, setRecruitmentList] = useState([]);\r\n\r\n  const [validation, setValidation] = useState(false);\r\n\r\n  const [addList, setAddList] = useState([]);\r\n  const [source, setSource] = useState([]);\r\n  const [saveOnly, setSaveOnly] = useState(\"YES\");\r\n  const [requirementName, setRequirementName] = useState([]);\r\n\r\n  var [errorToastId, setErrorToastId] = useState(null);\r\n\r\n  function sendNotification(componentProps, options) {\r\n    return toast(\r\n      <Notification\r\n        {...componentProps}\r\n        className={classes.notificationComponent}\r\n      />,\r\n      options,\r\n    );\r\n  }\r\n\r\n  function handleNotificationCall(notificationType, message) {\r\n    var componentProps;\r\n\r\n    if (errorToastId && notificationType === \"error\") return;\r\n\r\n    switch (notificationType) {\r\n      case \"info\":\r\n        componentProps = {\r\n          type: \"feedback\",\r\n          message: message,\r\n          variant: \"contained\",\r\n          color: \"primary\",\r\n        };\r\n        break;\r\n      case \"error\":\r\n        componentProps = {\r\n          type: \"message\",\r\n          message: message,\r\n          variant: \"contained\",\r\n          color: \"secondary\",\r\n        };\r\n        break;\r\n      default:\r\n        componentProps = {\r\n          type: \"shipped\",\r\n          message: message,\r\n          variant: \"contained\",\r\n          color: \"success\",\r\n        };\r\n    }\r\n\r\n    var toastId = sendNotification(componentProps, {\r\n      type: notificationType,\r\n      position: positions[2],\r\n      progressClassName: classes.progress,\r\n      onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\r\n      className: classes.notification,\r\n    });\r\n\r\n    if (notificationType === \"error\") setErrorToastId(toastId);\r\n  }\r\n\r\n  const [phoneValidation, setPhoneValidation] = useState(false);\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    email: Yup.string()\r\n      .email(\"Email must be a Valid Email Address\")\r\n      .required(\"Email is required\"),\r\n    firstName: Yup.string()\r\n      .required(\"First Name is required\")\r\n      .max(255)\r\n      .matches(/^[^!@#$%^&*+=<>:;|~]*$/, {\r\n        message: \"First Name be Alphanumeric\",\r\n      }),\r\n    lastName: Yup.string()\r\n      .max(255)\r\n      .required(\"Last Name is required\")\r\n      .max(255)\r\n      .matches(/^[^!@#$%^&*+=<>:;|~]*$/, {\r\n        message: \"Last Name be Alphanumeric\",\r\n      }),\r\n    mobile: Yup.string()\r\n      .required(\"Contact Number is required\")\r\n      .min(10, \"Must be exactly 10 digits\")\r\n      .max(10, \"Must be exactly 10 digits\"),\r\n    requirementId: Yup.string().required(\"Requirement Name is required\"),\r\n    skills: Yup.string().required(\"Skill is required\"),\r\n    source: Yup.string().required(\"Source is required\"),\r\n    free: Yup.string().nullable().notRequired(),\r\n    experience: Yup.number()\r\n      .nullable(true)\r\n      .transform((_, val) => (val ? Number(val) : null)),\r\n    location: Yup.string().nullable().notRequired(),\r\n    alternateMobile:\r\n      phoneValidation === true\r\n        ? Yup.string()\r\n            .required(\"Alternate Contact Number is required\")\r\n            .min(10, \"Must be exactly 10 digits\")\r\n            .max(10, \"Must be exactly 10 digits\")\r\n        : Yup.string(),\r\n    day: Yup.string().nullable().notRequired(),\r\n    month: Yup.string().nullable().notRequired(),\r\n    year: Yup.string().nullable().notRequired(),\r\n    gender: Yup.string().nullable().required(\"Gender is required\"),\r\n    educationalQualification: Yup.string().nullable().notRequired(),\r\n    differentlyAbled: Yup.string().nullable().notRequired(),\r\n    currentCtc: Yup.number()\r\n      .nullable(true)\r\n      .transform((_, val) => (val ? Number(val) : null)),\r\n    expectedCtc: Yup.number()\r\n      .nullable(true)\r\n      .transform((_, val) => (val ? Number(val) : null)),\r\n    noticePeriod: Yup.string().nullable().notRequired(),\r\n    reasonForJobChange: Yup.string().nullable().notRequired(),\r\n    candidateProcessed: Yup.string().nullable().notRequired(),\r\n    reason: Yup.string().nullable().notRequired(),\r\n    native: Yup.string().nullable().notRequired(),\r\n    candidateRecruiterDiscussionRecording: Yup.string()\r\n      .nullable()\r\n      .notRequired(),\r\n    candidateSkillExplanationRecording: Yup.string().nullable().notRequired(),\r\n    candidateMindsetAssessmentLink: Yup.string().nullable().notRequired(),\r\n    candidateAndTechPannelDiscussionRecording: Yup.string()\r\n      .nullable()\r\n      .notRequired(),\r\n    preferredLocation: Yup.string().nullable().notRequired(),\r\n    relevantExperience: Yup.number()\r\n      .nullable(true)\r\n      .transform((_, val) => (val ? Number(val) : null)),\r\n    currentCompanyName: Yup.string().nullable().notRequired(),\r\n  });\r\n\r\n  const editSchema = Yup.object().shape({\r\n    email:\r\n      candidatesEdit.recruiterId === decode.recruiterId\r\n        ? Yup.string()\r\n            .email(\"Email must be a Valid Email Address\")\r\n            .required(\"Email is required\")\r\n        : Yup.string().email(\"Email must be a Valid Email Address\"),\r\n    firstName: Yup.string()\r\n      .max(255)\r\n      .required(\"First Name is required\")\r\n      .matches(/^[^!@#$%^&*+=<>:;|~]*$/, {\r\n        message: \"First Name be Alphanumeric\",\r\n      }),\r\n    lastName: Yup.string()\r\n      .max(255)\r\n      .required(\"Last Name is required\")\r\n      .matches(/^[^!@#$%^&*+=<>:;|~]*$/, {\r\n        message: \"Last Name be Alphanumeric\",\r\n      }),\r\n    skills: Yup.string().required(\"Skill is required\"),\r\n    source: Yup.string().required(\"Source is required\"),\r\n    experience: Yup.number()\r\n      .nullable(true)\r\n      .transform((_, val) => (val ? Number(val) : null)),\r\n    location: Yup.string().nullable().notRequired(),\r\n    alternateMobile:\r\n      phoneValidation === true\r\n        ? Yup.string()\r\n            .required(\"Alternate Contact Number is required\")\r\n            .min(10, \"Must be exactly 10 digits\")\r\n            .max(10, \"Must be exactly 10 digits\")\r\n        : Yup.string(),\r\n    native: Yup.string().nullable().notRequired(),\r\n    preferredLocation: Yup.string().nullable(),\r\n    relevantExperience: Yup.number()\r\n      .nullable(true)\r\n      .transform((_, val) => (val ? Number(val) : null)),\r\n    educationalQualification: Yup.string().nullable().notRequired(),\r\n    day: Yup.string().nullable().notRequired(),\r\n    month: Yup.string().nullable().notRequired(),\r\n    year: Yup.string().nullable().notRequired(),\r\n    gender: Yup.string().nullable().required(\"Gender is required\"),\r\n    differentlyAbled: Yup.string().nullable().notRequired(),\r\n    currentCtc: Yup.number()\r\n      .nullable(true)\r\n      .transform((_, val) => (val ? Number(val) : null)),\r\n    expectedCtc: Yup.number()\r\n      .nullable(true)\r\n      .transform((_, val) => (val ? Number(val) : null)),\r\n    noticePeriod: Yup.string().nullable().notRequired(),\r\n    reasonForJobChange: Yup.string().nullable().notRequired(),\r\n    candidateProcessed: Yup.string().nullable().notRequired(),\r\n    reason: Yup.string().nullable().notRequired(),\r\n    candidateRecruiterDiscussionRecording: Yup.string()\r\n      .nullable()\r\n      .notRequired(),\r\n    candidateSkillExplanationRecording: Yup.string().nullable().notRequired(),\r\n    candidateMindsetAssessmentLink: Yup.string().nullable().notRequired(),\r\n    candidateAndTechPannelDiscussionRecording: Yup.string()\r\n      .nullable()\r\n      .notRequired(),\r\n    invoiceDate: Yup.string(),\r\n    invoicedValue: Yup.string(),\r\n    joinedDate: Yup.string(),\r\n    currentCompanyName: Yup.string().nullable().notRequired(),\r\n  });\r\n\r\n  const invoiceSchema = Yup.object().shape({\r\n    invoice: Yup.number()\r\n      .test(\r\n        \"len\",\r\n        \"Must be exactly 15 digits\",\r\n        (val) => Math.ceil(Math.log10(val + 1)) <= 15,\r\n      )\r\n      .required(\"Invoice Value is required\")\r\n      .nullable(true)\r\n      .transform((_, val) => (val ? Number(val) : null)),\r\n  });\r\n\r\n  const noteSchema = Yup.object().shape({\r\n    message: Yup.string().required(\"Message is required\"),\r\n  });\r\n\r\n  const dropSchema = Yup.object().shape({\r\n    reason: Yup.string().required(\"Reason is required\"),\r\n  });\r\n\r\n  const {\r\n    register: dropCandidates,\r\n    formState: { errors: dropErrors },\r\n    handleSubmit: dropSubmit,\r\n    reset: dropReset,\r\n  } = useForm({\r\n    mode: \"onBlur\",\r\n    resolver: yupResolver(dropSchema),\r\n  });\r\n\r\n  const {\r\n    register: noteCandidates,\r\n    formState: { errors: noteErrors },\r\n    handleSubmit: noteSubmit,\r\n    reset: noteReset,\r\n  } = useForm({\r\n    mode: \"onBlur\",\r\n    resolver: yupResolver(noteSchema),\r\n  });\r\n\r\n  const {\r\n    register: invoiceCandidates,\r\n    formState: { errors: invoiceErrors },\r\n    handleSubmit: invoiceSubmit,\r\n    reset: invoicereset,\r\n  } = useForm({\r\n    mode: \"onBlur\",\r\n    resolver: yupResolver(invoiceSchema),\r\n  });\r\n\r\n  const {\r\n    register: editCandidates,\r\n    formState: { errors: editErrors, isSubmitting: editIsSubmitting },\r\n    handleSubmit: editSubmit,\r\n    reset: editreset,\r\n  } = useForm({\r\n    mode: \"onBlur\",\r\n    resolver: yupResolver(editSchema),\r\n  });\r\n\r\n  const {\r\n    register,\r\n    reset,\r\n    handleSubmit,\r\n    formState: { errors, isSubmitting },\r\n  } = useForm({\r\n    resolver: yupResolver(validationSchema),\r\n  });\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"post\",\r\n      url: `${process.env.REACT_APP_SERVER}admin/userList`,\r\n      data: {},\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: token,\r\n      },\r\n    })\r\n      .then(function (response) {\r\n        if (response.data.status === true) {\r\n          setLoader(false);\r\n          setUserName(response.data.data);\r\n        }\r\n      })\r\n\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }, [token]);\r\n\r\n  useEffect(() => {\r\n    var mobile = sessionStorage.getItem(\"use\");\r\n\r\n    setLoader(true);\r\n    setSearch(new URLSearchParams(candidate_search).get(\"search\"));\r\n\r\n    if (mobile !== \"\" && mobile !== null) {\r\n      setState({ ...state, right: true });\r\n      setDataList(\"ADD\");\r\n\r\n      axios({\r\n        method: \"post\",\r\n        url: `${process.env.REACT_APP_SERVER}recruiter/checkCandidateDetailExist`,\r\n        data: {\r\n          mobile: mobile.substring(2),\r\n        },\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: token,\r\n        },\r\n      }).then(function (response) {\r\n        if (response.data.status === true) {\r\n          sessionStorage.removeItem(\"use\");\r\n\r\n          reset({\r\n            requirementId: recruitmentId,\r\n            mobile: mobile.substring(2),\r\n            email: response.data.data?.email,\r\n            firstName: response.data.data?.firstName,\r\n            lastName: response.data.data?.lastName,\r\n            skills: response.data.data?.skills,\r\n            experience: response.data.data?.experience,\r\n            location: response.data.data?.currentLocation,\r\n            candidateProcessed: response.data.data?.candidateProcessed,\r\n            native: response.data.data?.nativeLocation,\r\n            preferredLocation: response.data.data?.preferredLocation,\r\n            relevantExperience: response.data.data?.relevantExperience,\r\n            educationalQualification:\r\n              response.data.data?.educationalQualification,\r\n            gender: response.data.data?.gender,\r\n            differentlyAbled: response.data.data?.differentlyAbled,\r\n            currentCtc: response.data.data?.currentCtc,\r\n            expectedCtc: response.data.data?.expectedCtc,\r\n            noticePeriod: response.data.data?.noticePeriod,\r\n            reasonForJobChange: response.data.data?.reasonForJobChange,\r\n            reason: response.data.data?.reason,\r\n            currentCompanyName: response.data.data?.currentCompanyName,\r\n          });\r\n\r\n          setCandidate({\r\n            ...candidate,\r\n            mobile: mobile.substring(2),\r\n            email: response.data.data?.email,\r\n            firstName: response.data.data?.firstName,\r\n            lastName: response.data.data?.lastName,\r\n            skills: response.data.data?.skills,\r\n            experience: response.data.data?.experience,\r\n            location: response.data.data?.currentLocation,\r\n            dob: response.data.data?.dob,\r\n            candidateProcessed: response.data.data?.candidateProcessed,\r\n            native: response.data.data?.nativeLocation,\r\n            preferredLocation: response.data.data?.preferredLocation,\r\n            relevantExperience: response.data.data?.relevantExperience,\r\n            educationalQualification:\r\n              response.data.data?.educationalQualification,\r\n            gender: response.data.data?.gender,\r\n            differentlyAbled: response.data.data?.differentlyAbled,\r\n            currentCtc: response.data.data?.currentCtc,\r\n            expectedCtc: response.data.data?.expectedCtc,\r\n            noticePeriod: response.data.data?.noticePeriod,\r\n            reasonForJobChange: response.data.data?.reasonForJobChange,\r\n            reason: response.data.data?.reason,\r\n            candidateRecruiterDiscussionRecording:\r\n              response.data.data?.candidateRecruiterDiscussionRecording,\r\n            candidateSkillExplanationRecording:\r\n              response.data.data?.candidateSkillExplanationRecording,\r\n            candidateMindsetAssessmentLink:\r\n              response.data.data?.candidateMindsetAssessmentLink,\r\n            candidateAndTechPannelDiscussionRecording:\r\n              response.data.data?.candidateAndTechPannelDiscussionRecording,\r\n            currentCompanyName: response.data.data?.currentCompanyName,\r\n            freeValue:\r\n              decode.isEnableFree === true\r\n                ? \"YES\"\r\n                : decode.isEnablePaid === true\r\n                ? \"NO\"\r\n                : \"YES\",\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n    const fetchData = async () => {\r\n      setCurrerntPage(1);\r\n      setPage(0);\r\n\r\n      const form = filterRef.current;\r\n\r\n      if (new URLSearchParams(candidate_search).get(\"search\")) {\r\n        form[\"search\"].value = new URLSearchParams(candidate_search).get(\r\n          \"search\",\r\n        );\r\n      }\r\n\r\n      axios({\r\n        method: \"post\",\r\n        url: `${process.env.REACT_APP_SERVER}admin/viewAllCanditates`,\r\n        data: {\r\n          page: \"1\",\r\n          search: `${form[\"search\"].value}`,\r\n          requirementId:\r\n            sessionStorage.getItem(\"recruitmentId\") !== null\r\n              ? sessionStorage.getItem(\"recruitmentId\")\r\n              : requirementId?.id,\r\n        },\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: token,\r\n        },\r\n      }).then(function (response) {\r\n        if (response.data.status === true) {\r\n          setLoader(false);\r\n\r\n          setCandidatesData(response.data.data);\r\n          setCount(response.data.count);\r\n        }\r\n      });\r\n    };\r\n\r\n    const getRequirementName = async () => {\r\n      axios({\r\n        method: \"post\",\r\n        url: `${process.env.REACT_APP_SERVER}admin/getAllRequirementList`,\r\n        data: {},\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: token,\r\n        },\r\n      })\r\n        .then(function (response) {\r\n          if (response.data.status === true) {\r\n            setLoader(false);\r\n            setRequirementName(response.data.data);\r\n          }\r\n        })\r\n\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n    };\r\n\r\n    const getClientName = async () => {\r\n      axios({\r\n        method: \"post\",\r\n        url: `${process.env.REACT_APP_SERVER}admin/getAllClientList`,\r\n        data: {},\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: token,\r\n        },\r\n      })\r\n        .then(function (response) {\r\n          if (response.data.status === true) {\r\n            setLoader(false);\r\n            setClientName(response.data.data);\r\n          }\r\n        })\r\n\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n    };\r\n\r\n    fetchData();\r\n    getRequirementName();\r\n    getClientName();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [\r\n    reducerValue,\r\n    token,\r\n    new URLSearchParams(candidate_search).get(\"search\"),\r\n    sessionStorage.getItem(\"use\"),\r\n  ]);\r\n\r\n  function updateData(id) {\r\n    axios({\r\n      method: \"post\",\r\n      url: `${process.env.REACT_APP_SERVER}recruiter/getAllCandidateStatus`,\r\n      data: {\r\n        id: id,\r\n      },\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: token,\r\n      },\r\n    })\r\n      .then(function (response) {\r\n        if (response.data.status === true) {\r\n          var myCandidateStatuses = response.data.data;\r\n\r\n          axios({\r\n            method: \"post\",\r\n            url: `${process.env.REACT_APP_SERVER}admin/viewCandidate`,\r\n            data: {\r\n              id: id,\r\n            },\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              Authorization: token,\r\n            },\r\n          }).then(function (result) {\r\n            if (result.data.status === true) {\r\n              const updateState = candidatesData.map((item) => {\r\n                if (item.id === id) {\r\n                  return {\r\n                    ...item,\r\n                    candidateDetail: result.data.data.candidateDetail,\r\n                    invoiceValue: result.data.data.invoiceValue,\r\n                    invoicedDate: result.data.data.invoicedDate,\r\n                    joinedDate: result.data.data.joinedDate,\r\n                    statusCode: result.data.data.statusList.statusCode,\r\n                    statusList: result.data.data.statusList,\r\n                    myCandidateStatuses: myCandidateStatuses,\r\n                    droppedReason: result.data.data.droppedReason,\r\n                    ditchReason: result.data.data.ditchReason,\r\n                    creditNoteReason: result.data.data.creditNoteReason,\r\n                  };\r\n                }\r\n                return item;\r\n              });\r\n\r\n              setCandidatesData(updateState);\r\n            }\r\n            setLoader(false);\r\n          });\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  function handleAddNotes(values) {\r\n    return new Promise((resolve) => {\r\n      setLoader(true);\r\n\r\n      axios({\r\n        method: \"post\",\r\n        url: `${process.env.REACT_APP_SERVER}recruiter/addCandidateNotes`,\r\n        data: {\r\n          candidateId: candidatesEdit.id,\r\n          message: values.message,\r\n        },\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: token,\r\n        },\r\n      }).then(function (response) {\r\n        resolve();\r\n        if (response.data.status === true) {\r\n          handleNotificationCall(\"success\", response.data.message);\r\n          forceUpdate();\r\n          setState({ ...state, right: false });\r\n        } else {\r\n          handleNotificationCall(\"error\", response.data.message);\r\n        }\r\n        setLoader(false);\r\n      });\r\n    });\r\n  }\r\n\r\n  const [recruiterId, setRecruiterId] = useState(null);\r\n  const [requirementId, setRequirementId] = useState(null);\r\n  const [clientId, setClientId] = useState(null);\r\n\r\n  const handleFromDateChange = (event) => {\r\n    setFromDate(filterRef.current.fromDate.value);\r\n  };\r\n\r\n  const handleToDateChange = (event) => {\r\n    setToDate(filterRef.current.toDate.value);\r\n  };\r\n\r\n  const resetForm = (e) => {\r\n    filterRef.current.reset();\r\n    setRecruiterId(null);\r\n    setRequirementId(null);\r\n    setClientId(null);\r\n    setSearch(\"\");\r\n    history.push(\"/app/admin_candidates?search=\");\r\n    sessionStorage.removeItem(\"recruitmentId\");\r\n    forceUpdate();\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"post\",\r\n      url: `${process.env.REACT_APP_SERVER}recruiter/requirementList`,\r\n      data: {\r\n        page: \"1\",\r\n      },\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: token,\r\n      },\r\n    }).then(function (response) {\r\n      if (response.data.status === true) {\r\n        setRequirement(response.data.data);\r\n      }\r\n    });\r\n  }, [token]);\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"post\",\r\n      url: `${process.env.REACT_APP_SERVER}source/viewSourcesList`,\r\n      data: {},\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: token,\r\n      },\r\n    }).then(function (response) {\r\n      if (response.data.status === true) {\r\n        setSource(response.data.data);\r\n      }\r\n    });\r\n  }, [token]);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n    setCurrerntPage(newPage + 1);\r\n    setLoader(true);\r\n\r\n    const form = filterRef.current;\r\n    var data = JSON.stringify({\r\n      page: newPage + 1,\r\n      search: `${form[\"search\"].value}`,\r\n      fromDate: `${form[\"fromDate\"].value}`,\r\n      toDate: `${form[\"toDate\"].value}`,\r\n      recruiterId: recruiterId?.id,\r\n      requirementId:\r\n        sessionStorage.getItem(\"recruitmentId\") !== null\r\n          ? sessionStorage.getItem(\"recruitmentId\")\r\n          : requirementId?.id,\r\n      clientId: clientId?.id,\r\n    });\r\n\r\n    axios({\r\n      method: \"post\",\r\n      url: `${process.env.REACT_APP_SERVER}admin/viewAllCanditates`,\r\n      data: data,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: token,\r\n      },\r\n    }).then(function (response) {\r\n      if (response.data.status === true) {\r\n        setCandidatesData(response.data.data);\r\n        setCount(response.data.count);\r\n      }\r\n\r\n      setLoader(false);\r\n    });\r\n  };\r\n\r\n  function getFilterData() {\r\n    sessionStorage.removeItem(\"recruitmentId\");\r\n    setLoader(true);\r\n    setCurrerntPage(1);\r\n    setPage(0);\r\n    const form = filterRef.current;\r\n    var data = JSON.stringify({\r\n      page: 1,\r\n      search: `${form[\"search\"].value}`,\r\n      fromDate: `${form[\"fromDate\"].value}`,\r\n      toDate: `${form[\"toDate\"].value}`,\r\n      recruiterId: recruiterId?.id,\r\n      requirementId:\r\n        sessionStorage.getItem(\"recruitmentId\") !== null\r\n          ? sessionStorage.getItem(\"recruitmentId\")\r\n          : requirementId?.id,\r\n      clientId: clientId?.id,\r\n    });\r\n\r\n    axios({\r\n      method: \"post\",\r\n      url: `${process.env.REACT_APP_SERVER}admin/viewAllCanditates`,\r\n      data: data,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: token,\r\n      },\r\n    })\r\n      .then(function (response) {\r\n        if (response.data.status === true) {\r\n          setLoader(false);\r\n          setCandidatesData(response.data.data);\r\n          setCount(response.data.count);\r\n        }\r\n      })\r\n\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  const [listCanditate, setListCanditate] = useState([]);\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const [stausOpen, setStatusOpen] = React.useState(false);\r\n  const [stausNewOpen, setStatusNewOpen] = React.useState(false);\r\n  const [dropOpen, setDropOpen] = React.useState(false);\r\n  const [reverseOpen, setReverseOpen] = React.useState(false);\r\n  const [messageOpen, setMessageOpen] = React.useState(false);\r\n\r\n  const [resumeOpen, setResumeOpen] = React.useState(false);\r\n  const [matchJDOpen, setMatchJDOpen] = React.useState(false);\r\n\r\n  const handleResumeClose = () => {\r\n    setResumeOpen(false);\r\n  };\r\n\r\n  const handleResumeOpen = () => {\r\n    setResumeOpen(true);\r\n  };\r\n\r\n  const handleJDClose = () => {\r\n    setMatchJDOpen(false);\r\n    setResumePercentage([])\r\n  };\r\n\r\n  const handleJDOpen = () => {\r\n    setMatchJDOpen(true);\r\n  };\r\n\r\n  const [candidate, setCandidate] = useState({\r\n    requirementId: \"\",\r\n    source: \"\",\r\n    email: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    skills: \"\",\r\n    location: \"\",\r\n    experience: null,\r\n    candidateProcessed: \"\",\r\n    native: \"\",\r\n    preferredLocation: \"\",\r\n    relevantExperience: null,\r\n    educationalQualification: \"\",\r\n    gender: \"\",\r\n    differentlyAbled: \"\",\r\n    currentCtc: null,\r\n    expectedCtc: null,\r\n    noticePeriod: \"\",\r\n    reasonForJobChange: \"\",\r\n    reason: \"\",\r\n    dob: \"\",\r\n    candidateRecruiterDiscussionRecording: \"\",\r\n    candidateSkillExplanationRecording: \"\",\r\n    candidateMindsetAssessmentLink: \"\",\r\n    candidateAndTechPannelDiscussionRecording: \"\",\r\n    freeValue:\r\n      decode.isEnableFree === true\r\n        ? \"YES\"\r\n        : decode.isEnablePaid === true\r\n        ? \"NO\"\r\n        : \"YES\",\r\n  });\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleStatusOpen = () => {\r\n    setStatusOpen(true);\r\n  };\r\n\r\n  const handleStatusClose = () => {\r\n    setStatusOpen(false);\r\n  };\r\n\r\n  const handleStatusNewOpen = () => {\r\n    setStatusNewOpen(true);\r\n  };\r\n\r\n  const handleStatusNewClose = () => {\r\n    setStatusNewOpen(false);\r\n  };\r\n\r\n  const handleMessageOpen = () => {\r\n    setMessageOpen(true);\r\n  };\r\n\r\n  const handleMessageClose = () => {\r\n    setMessageOpen(false);\r\n  };\r\n\r\n  const handleDropOpen = () => {\r\n    setDropOpen(true);\r\n  };\r\n\r\n  const handleDropClose = () => {\r\n    setDropOpen(false);\r\n  };\r\n\r\n  const handleReverseOpen = () => {\r\n    setReverseOpen(true);\r\n  };\r\n\r\n  const handleReverseClose = () => {\r\n    setReverseOpen(false);\r\n  };\r\n\r\n  const [dropReasonOpen, setDropReasonOpen] = useState(false);\r\n\r\n  const handleDropReasonOpen = () => {\r\n    setDropReasonOpen(true);\r\n    setStatusOpen(false);\r\n  };\r\n\r\n  const handleDropReasonClose = () => {\r\n    setDropReasonOpen(false);\r\n  };\r\n\r\n  const reasonRef = useRef();\r\n\r\n  const [reasonOpen, setReasonOpen] = useState(false);\r\n\r\n  const handleReasonOpen = () => {\r\n    setStatusOpen(false);\r\n    setStatusNewOpen(false);\r\n    setReasonOpen(true);\r\n  };\r\n\r\n  const handleReasonClose = () => {\r\n    setReasonOpen(false);\r\n  };\r\n\r\n  const [changeMessageOpen, setChangeMessageOpen] = useState(false);\r\n\r\n  const handleChangeMessageOpen = () => {\r\n    setChangeMessageOpen(true);\r\n    handleStatusClose();\r\n  };\r\n\r\n  const handleChangeMessageClose = () => {\r\n    setChangeMessageOpen(false);\r\n  };\r\n\r\n  const [view, setView] = useState(\"\");\r\n  const [fromDate, setFromDate] = useState(\"\");\r\n  const [toDate, setToDate] = useState(\"\");\r\n\r\n  // function downloadExel() {\r\n  //   setLoader(true);\r\n  //   const form = filterRef.current;\r\n  //   var data = JSON.stringify({\r\n  //     search: `${form[\"search\"].value}`,\r\n  //     fromDate: `${form[\"fromDate\"].value}`,\r\n  //     toDate: `${form[\"toDate\"].value}`,\r\n  //     recruiterId: recruiterId?.id,\r\n  //     fileDownload: \"yes\",\r\n  //   });\r\n\r\n  //   axios({\r\n  //     method: \"post\",\r\n  //     url: `${process.env.REACT_APP_SERVER}admin/viewAllCanditates`,\r\n  //     data: data,\r\n  //     headers: {\r\n  //       \"Content-Type\": \"application/json\",\r\n  //       Authorization: token,\r\n  //     },\r\n  //   }).then(function (response) {\r\n  //     if (response.data.status === true) {\r\n  //       setLoader(false);\r\n  //       saveAsExcel(response.data.data);\r\n  //     }\r\n  //   });\r\n  // }\r\n\r\n  const [recruitmentId, setRecruitmentId] = useState(\"\");\r\n\r\n  function handleAdd(values) {\r\n    return new Promise((resolve) => {\r\n      if (validation === true) {\r\n      } else {\r\n        setAddList(values);\r\n\r\n        axios({\r\n          method: \"post\",\r\n          url: `${process.env.REACT_APP_SERVER}CC/getRequirement`,\r\n          data: {\r\n            id: recruitmentId,\r\n          },\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: token,\r\n          },\r\n        }).then(function (response) {\r\n          if (response.data.status === true) {\r\n            setRequirementList({\r\n              ...requirementList,\r\n              cand1_name: values.firstName + \" \" + values.lastName,\r\n              job1_location: response.data.data.jobLocation,\r\n              client1_name: response.data.data.client?.clientName,\r\n              job1_title: response.data.data.requirementName,\r\n              cand1_skills: values.skills,\r\n              job1_experience: response.data.data.experience,\r\n              rec_name: localStorage.getItem(\"firstName\"),\r\n              rec_mobile_no: localStorage.getItem(\"mobile\"),\r\n              req_id: response.data.data.uniqueId,\r\n            });\r\n\r\n            CheckAlreadyExit(values);\r\n          }\r\n          resolve();\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  function CheckAlreadyExit(addList) {\r\n    var dob = addList.day + \"-\" + addList.month + \"-\" + addList.year;\r\n\r\n    axios({\r\n      method: \"post\",\r\n      url: `${process.env.REACT_APP_SERVER}recruiter/candidateExist`,\r\n      data: {\r\n        email: addList.email,\r\n        firstName: addList.firstName,\r\n        lastName: addList.lastName,\r\n        mobile: addList.mobile,\r\n        requirementId: recruitmentId,\r\n        skills: addList.skills,\r\n        sourceId: addList.source,\r\n        isAnswered: candidate.freeValue,\r\n        message: \"\",\r\n        experience: addList.experience,\r\n        currentLocation: addList.location,\r\n        alternateMobile: addList.alternateMobile,\r\n        preferredLocation: addList.preferredLocation,\r\n        nativeLocation: addList.native,\r\n        relevantExperience: addList.relevantExperience,\r\n        currentCtc: addList.currentCtc,\r\n        expectedCtc: addList.expectedCtc,\r\n        dob:\r\n          addList.day === undefined\r\n            ? \"\"\r\n            : dob !== \"--\"\r\n            ? addList.day + \"-\" + addList.month + \"-\" + addList.year\r\n            : \"\",\r\n        noticePeriod: addList.noticePeriod,\r\n        reasonForJobChange: addList.reasonForJobChange,\r\n        candidateProcessed: addList.candidateProcessed,\r\n        differentlyAbled: addList.differentlyAbled,\r\n        educationalQualification: addList.educationalQualification,\r\n        gender: addList.gender,\r\n        reason: addList.reason,\r\n        candidateRecruiterDiscussionRecording:\r\n          addList.candidateRecruiterDiscussionRecording,\r\n        candidateSkillExplanationRecording:\r\n          addList.candidateSkillExplanationRecording,\r\n        candidateMindsetAssessmentLink: addList.candidateMindsetAssessmentLink,\r\n        candidateAndTechPannelDiscussionRecording:\r\n          addList.candidateAndTechPannelDiscussionRecording,\r\n        currentCompanyName: addList.currentCompanyName,\r\n        sendMessage: \"\",\r\n      },\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: token,\r\n      },\r\n    }).then(function (response) {\r\n      if (response.data.status === true) {\r\n        handleClickOpen();\r\n      }\r\n      // else{\r\n      //   handleNotificationCall(\"error\", response.data.message);\r\n\r\n      // }\r\n    });\r\n  }\r\n\r\n  function handleEdit(values) {\r\n    return new Promise((resolve) => {\r\n      setLoader(true);\r\n      var dob = values.day + \"-\" + values.month + \"-\" + values.year;\r\n\r\n      axios({\r\n        method: \"post\",\r\n        url: `${process.env.REACT_APP_SERVER}admin/adminEditCandidate`,\r\n        data: {\r\n          id: candidatesEdit.id,\r\n          email: values.email,\r\n          firstName: values.firstName,\r\n          lastName: values.lastName,\r\n          mobile: values.mobile,\r\n          skills: values.skills,\r\n          experience: values.experience,\r\n          currentLocation: values.location,\r\n          sourceId: values.source,\r\n          invoiceValue: values.invoicedValue,\r\n          invoicedDate: values.invoicedDate,\r\n          joinedDate: values.joinedDate,\r\n          alternateMobile: values.alternateMobile,\r\n          preferredLocation: values.preferredLocation,\r\n          nativeLocation: values.native,\r\n          relevantExperience: values.relevantExperience,\r\n          currentCtc: values.currentCtc,\r\n          expectedCtc: values.expectedCtc,\r\n          dob:\r\n            values.day === undefined\r\n              ? candidatesEdit.dob\r\n              : dob !== \"--\"\r\n              ? dob\r\n              : candidatesEdit.dob,\r\n          noticePeriod: values.noticePeriod,\r\n          reasonForJobChange: values.reasonForJobChange,\r\n          candidateProcessed: values.candidateProcessed,\r\n          differentlyAbled: values.differentlyAbled,\r\n          educationalQualification: values.educationalQualification,\r\n          gender: values.gender,\r\n          reason: values.reason,\r\n          candidateRecruiterDiscussionRecording:\r\n            values.candidateRecruiterDiscussionRecording,\r\n          candidateSkillExplanationRecording:\r\n            values.candidateSkillExplanationRecording,\r\n          candidateMindsetAssessmentLink: values.candidateMindsetAssessmentLink,\r\n          candidateAndTechPannelDiscussionRecording:\r\n            values.candidateAndTechPannelDiscussionRecording,\r\n          hideContactDetails: candidatesEdit.hideContactDetails,\r\n          currentCompanyName: values.currentCompanyName,\r\n        },\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: token,\r\n        },\r\n      })\r\n        .then(function (response) {\r\n          if (response.data.status === true) {\r\n            if (file !== undefined) {\r\n              if (file?.length !== 0) {\r\n                uploadResume(file, response.data.candidateDetailsId);\r\n              }\r\n            }\r\n\r\n            if (assessment !== undefined) {\r\n              if (assessment?.length !== 0) {\r\n                uploadAssessment(assessment, response.data.candidateId);\r\n              }\r\n            }\r\n\r\n            setLoader(false);\r\n            setState({ ...state, right: false });\r\n            handleNotificationCall(\"success\", response.data.message);\r\n\r\n            updateData(candidatesEdit.id);\r\n          } else {\r\n            setLoader(false);\r\n            handleNotificationCall(\"error\", response.data.message);\r\n          }\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n    });\r\n  }\r\n\r\n  function handleAddList(send) {\r\n    setLoader(true);\r\n    var url = \"\";\r\n    var data = {};\r\n    var dob = addList.day + \"-\" + addList.month + \"-\" + addList.year;\r\n\r\n    if (candidate.freeValue === \"YES\") {\r\n      url = `${process.env.REACT_APP_SERVER}recruiter/addFreeCandidate`;\r\n      data = {\r\n        email: addList.email,\r\n        firstName: addList.firstName,\r\n        lastName: addList.lastName,\r\n        mobile: addList.mobile,\r\n        requirementId: recruitmentId,\r\n        skills: addList.skills,\r\n        sourceId: addList.source,\r\n        isAnswered: candidate.freeValue,\r\n        message: messageRef.current.value,\r\n        experience: addList.experience,\r\n        currentLocation: addList.location,\r\n        alternateMobile: addList.alternateMobile,\r\n        preferredLocation: addList.preferredLocation,\r\n        nativeLocation: addList.native,\r\n        relevantExperience: addList.relevantExperience,\r\n        currentCtc: addList.currentCtc,\r\n        expectedCtc: addList.expectedCtc,\r\n        dob:\r\n          addList.day === undefined\r\n            ? \"\"\r\n            : dob !== \"--\"\r\n            ? addList.day + \"-\" + addList.month + \"-\" + addList.year\r\n            : \"\",\r\n        noticePeriod: addList.noticePeriod,\r\n        reasonForJobChange: addList.reasonForJobChange,\r\n        candidateProcessed: addList.candidateProcessed,\r\n        differentlyAbled: addList.differentlyAbled,\r\n        educationalQualification: addList.educationalQualification,\r\n        gender: addList.gender,\r\n        reason: addList.reason,\r\n        candidateRecruiterDiscussionRecording:\r\n          addList.candidateRecruiterDiscussionRecording,\r\n        candidateSkillExplanationRecording:\r\n          addList.candidateSkillExplanationRecording,\r\n        candidateMindsetAssessmentLink: addList.candidateMindsetAssessmentLink,\r\n        candidateAndTechPannelDiscussionRecording:\r\n          addList.candidateAndTechPannelDiscussionRecording,\r\n        currentCompanyName: addList.currentCompanyName,\r\n        sendMessage: send,\r\n      };\r\n    } else {\r\n      url = `${process.env.REACT_APP_SERVER}recruiter/addCandidate`;\r\n      data = {\r\n        email: addList.email,\r\n        firstName: addList.firstName,\r\n        lastName: addList.lastName,\r\n        mobile: addList.mobile,\r\n        requirementId: recruitmentId,\r\n        skills: addList.skills,\r\n        sourceId: addList.source,\r\n        isAnswered: candidate.freeValue,\r\n        experience: addList.experience,\r\n        currentLocation: addList.location,\r\n        alternateMobile: addList.alternateMobile,\r\n        preferredLocation: addList.preferredLocation,\r\n        nativeLocation: addList.native,\r\n        relevantExperience: addList.relevantExperience,\r\n        currentCtc: addList.currentCtc,\r\n        expectedCtc: addList.expectedCtc,\r\n        dob:\r\n          addList.day === undefined\r\n            ? \"\"\r\n            : dob !== \"--\"\r\n            ? addList.day + \"-\" + addList.month + \"-\" + addList.year\r\n            : \"\",\r\n        noticePeriod: addList.noticePeriod,\r\n        reasonForJobChange: addList.reasonForJobChange,\r\n        candidateProcessed: addList.candidateProcessed,\r\n        differentlyAbled: addList.differentlyAbled,\r\n        educationalQualification: addList.educationalQualification,\r\n        gender: addList.gender,\r\n        reason: addList.reason,\r\n        candidateRecruiterDiscussionRecording:\r\n          addList.candidateRecruiterDiscussionRecording,\r\n        candidateSkillExplanationRecording:\r\n          addList.candidateSkillExplanationRecording,\r\n        candidateMindsetAssessmentLink: addList.candidateMindsetAssessmentLink,\r\n        candidateAndTechPannelDiscussionRecording:\r\n          addList.candidateAndTechPannelDiscussionRecording,\r\n        currentCompanyName: addList.currentCompanyName,\r\n        sendMessage: send,\r\n      };\r\n    }\r\n\r\n    axios({\r\n      method: \"post\",\r\n      url: url,\r\n      data: data,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: token,\r\n      },\r\n    }).then(function (response) {\r\n      if (response.data.status === true) {\r\n        handleClose();\r\n        var message = \"\";\r\n\r\n        if (file !== undefined) {\r\n          if (file?.length !== 0) {\r\n            uploadResume(file, response.data.candidateDetailsId);\r\n          }\r\n        }\r\n\r\n        if (assessment !== undefined) {\r\n          if (assessment?.length !== 0) {\r\n            uploadAssessment(assessment, response.data.candidateId);\r\n          }\r\n        }\r\n\r\n        if (send === true) {\r\n          if (candidate.freeValue === \"YES\") {\r\n            message = messageRef.current.value;\r\n\r\n            window.open(\r\n              \"https://api.whatsapp.com/send?phone=+91\" +\r\n                addList.mobile +\r\n                \"&text=\" +\r\n                message +\r\n                \"\",\r\n            );\r\n          } else {\r\n            message =\r\n              \"Hi \" +\r\n              requirementList.cand1_name +\r\n              \", Can we chat today about a job opening \" +\r\n              localStorage.getItem(\"firstName\") +\r\n              \", \" +\r\n              localStorage.getItem(\"mobile\") +\r\n              \", \" +\r\n              localStorage.getItem(\"companyName\") +\r\n              \". Always reply by clicking back arrow button/right swipe only.\";\r\n\r\n            handleMessage(\r\n              response.data.candidate_mobile,\r\n              message,\r\n              response.data.candidateId,\r\n            );\r\n          }\r\n        }\r\n\r\n        handleNotificationCall(\"success\", response.data.message);\r\n\r\n        forceUpdate();\r\n        setState({ ...state, right: false });\r\n        reset();\r\n      } else {\r\n        handleNotificationCall(\"error\", response.data.message);\r\n      }\r\n\r\n      setValidation(false);\r\n      setLoader(false);\r\n    });\r\n  }\r\n\r\n  function getCanididateResumeInfo(candidateData,candidateDetail) {\r\n    axios({\r\n      method: \"post\",\r\n      url: `${process.env.REACT_APP_SERVER}AI/getCanididateResumeInfo`,\r\n      data: {\r\n        id:candidateData\r\n      },\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: token,\r\n      },\r\n    }).then(function (response) {\r\n      if (response.data.status === true) {\r\n        setResumeParsedData({\r\n          data:response.data?.data,\r\n          candidateName: candidateDetail?.firstName + \" \"+ candidateDetail?.lastName,\r\n        })\r\n        const responsedData = JSON.stringify(response.data?.data)\r\n        const candidateFullName = candidateDetail?.firstName + \" \"+ candidateDetail?.lastName\r\n        sessionStorage.setItem('candidateResume',responsedData)\r\n        sessionStorage.setItem('candidateName',candidateFullName)\r\n        window.open(`/v1#/app/parsed_resume`,'_blank')\r\n      } else {\r\n        handleNotificationCall(\"error\", response.data.message);\r\n      }\r\n    });\r\n  }\r\n\r\n  function aiResumeUpload(resumeData) {\r\n    axios({\r\n      method: \"post\",\r\n      url: `${process.env.REACT_APP_SERVER}AI/resumeUpload`,\r\n      data: resumeData,\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n        Authorization: token,\r\n      },\r\n    }).then(function (response) {\r\n      if (response.data.status === true) {\r\n      } else {\r\n        handleNotificationCall(\"error\", response.data.message);\r\n      }\r\n    });\r\n  }\r\n\r\n  function uploadResume(File, Id) {\r\n    var FormData = require(\"form-data\");\r\n    var data = new FormData();\r\n    data.append(\"resume\", File);\r\n    data.append(\"id\", Id);\r\n    axios({\r\n      method: \"post\",\r\n      url: `${process.env.REACT_APP_SERVER}recruiter/updateCandidateResume`,\r\n      data: data,\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n        Authorization: token,\r\n      },\r\n    }).then(function (response) {\r\n      if (response.data.status === true) {\r\n        aiResumeUpload(data);\r\n      } else {\r\n        handleNotificationCall(\"error\", response.data.message);\r\n      }\r\n    });\r\n  }\r\n\r\n  function uploadAssessment(File, Id) {\r\n    var FormData = require(\"form-data\");\r\n    var data = new FormData();\r\n    data.append(\"file\", File);\r\n    data.append(\"id\", Id);\r\n    axios({\r\n      method: \"post\",\r\n      url: `${process.env.REACT_APP_SERVER}recruiter/updateCandidateMindSetAssessment`,\r\n      data: data,\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n        Authorization: token,\r\n      },\r\n    }).then(function (response) {\r\n      if (response.data.status === true) {\r\n        handleNotificationCall(\"success\", response.data.message);\r\n      } else {\r\n        handleNotificationCall(\"error\", response.data.message);\r\n      }\r\n    });\r\n  }\r\n\r\n  function handleMessage(mobile, message, candidateId) {\r\n    var url = \"\";\r\n\r\n    if (candidate.freeValue === \"YES\") {\r\n      url = `${process.env.REACT_APP_SERVER}recruiter/changeYesCadidateStatus`;\r\n    } else {\r\n      url = `${process.env.REACT_APP_SERVER}chat/sendTemplateMessage`;\r\n    }\r\n\r\n    axios({\r\n      method: \"post\",\r\n      url: url,\r\n      data: {\r\n        candidateId: candidateId,\r\n        phone_number: mobile,\r\n        template_name: \"first_message\",\r\n        vars: [\r\n          requirementList.cand1_name,\r\n          requirementList.rec_name,\r\n          requirementList.rec_mobile_no,\r\n          localStorage.getItem(\"companyName\"),\r\n        ],\r\n        message: message,\r\n        candidate_name: requirementList.cand1_name,\r\n      },\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: token,\r\n      },\r\n    }).then(function (response) {\r\n      if (response.data.status === true) {\r\n        if (response.data.isNew === true) {\r\n          getmessageIni();\r\n        }\r\n\r\n        setLoader(false);\r\n      } else {\r\n        handleNotificationCall(\"error\", response.data.message);\r\n      }\r\n\r\n      handleStatusClose();\r\n      handleStatusNewClose();\r\n      setLoader(false);\r\n    });\r\n  }\r\n\r\n  function changeStatus(send, message, status, candidateId) {\r\n    setLoader(true);\r\n    const template_name =\r\n      shortList.statusCode === 303\r\n        ? \"1st_interview_round\"\r\n        : shortList.statusCode === 3031\r\n        ? \"initial_interview_rounds\"\r\n        : shortList.statusCode === 304\r\n        ? status === \"Schedule Another Interview\"\r\n          ? \"initial_interview_rounds\"\r\n          : status === \"Schedule Final Interview\"\r\n          ? \"final_interview_round\"\r\n          : status === \"Send Document\"\r\n          ? \"document_collect\"\r\n          : \"\"\r\n        : shortList.statusCode === 3041\r\n        ? \"document_collect\"\r\n        : shortList.statusCode === 305\r\n        ? \"salary_breakup_shared_confirmation\"\r\n        : shortList.statusCode === 307\r\n        ? \"offer_released_confirmation\"\r\n        : shortList.statusCode === 308\r\n        ? status === \"Joining Confirmation\"\r\n          ? \"joining_confirmation\"\r\n          : \"\"\r\n        : \"\";\r\n\r\n    const vars =\r\n      shortList.statusCode === 308\r\n        ? [\r\n            shortList.cand_name,\r\n            shortList.job_id,\r\n            shortList.rec_name,\r\n            shortList.rec_mobile_no,\r\n            localStorage.getItem(\"companyName\"),\r\n          ]\r\n        : [\r\n            shortList.cand_name,\r\n            shortList.job_id,\r\n            shortList.rec_name,\r\n            shortList.rec_mobile_no,\r\n            localStorage.getItem(\"companyName\"),\r\n          ];\r\n\r\n    var url = \"\";\r\n    if (shortList.free === \"YES\") {\r\n      url = `${process.env.REACT_APP_SERVER}recruiter/changeYesCadidateStatus`;\r\n    } else {\r\n      url = `${process.env.REACT_APP_SERVER}chat/sendTemplateMessage`;\r\n    }\r\n\r\n    axios({\r\n      method: \"post\",\r\n      url: url,\r\n      data: {\r\n        sendMessage: send,\r\n        candidateId: candidateId,\r\n        phone_number: shortList.cand_mobile,\r\n        template_name: template_name,\r\n        vars: vars,\r\n        message: message,\r\n        candidate_name: shortList.cand_name,\r\n      },\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: token,\r\n      },\r\n    }).then(function (response) {\r\n      if (response.data.status === true) {\r\n        if (response.data.isNew === true) {\r\n          getmessageIni();\r\n        }\r\n\r\n        if (shortList.free === \"YES\" && send === true) {\r\n          window.open(\r\n            \"https://api.whatsapp.com/send?phone=\" +\r\n              shortList.cand_mobile +\r\n              \"&text=\" +\r\n              message +\r\n              \"\",\r\n          );\r\n        }\r\n\r\n        setLoader(false);\r\n        updateData(candidateId);\r\n        handleNotificationCall(\"success\", response.data.message);\r\n        setState({ ...state, right: false });\r\n      } else {\r\n        setLoader(false);\r\n        handleNotificationCall(\"error\", response.data.message);\r\n      }\r\n\r\n      handleStatusClose();\r\n      handleStatusNewClose();\r\n    });\r\n  }\r\n\r\n  function joinedStatus() {\r\n    setLoader(true);\r\n    var url = `${process.env.REACT_APP_SERVER}recruiter/updateJoinedStatus`;\r\n\r\n    axios({\r\n      method: \"post\",\r\n      url: url,\r\n      data: {\r\n        candidateId: shortList.id,\r\n        joinedDate: joiningRef.current.value,\r\n      },\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: token,\r\n      },\r\n    }).then(function (response) {\r\n      if (response.data.status === true) {\r\n        handleStatusClose();\r\n        handleStatusNewClose();\r\n        updateData(shortList.id);\r\n        handleNotificationCall(\"success\", response.data.message);\r\n      } else {\r\n        handleNotificationCall(\"error\", response.data.message);\r\n        setLoader(false);\r\n      }\r\n    });\r\n  }\r\n\r\n  function creditNoteStatus() {\r\n    setLoader(true);\r\n    var url = `${process.env.REACT_APP_SERVER}admin/updateCrediNoteStatus`;\r\n\r\n    axios({\r\n      method: \"post\",\r\n      url: url,\r\n      data: {\r\n        candidateId: shortList.id,\r\n        creditNoteReason: reasonRef.current.value,\r\n      },\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: token,\r\n      },\r\n    }).then(function (response) {\r\n      if (response.data.status === true) {\r\n        handleStatusClose();\r\n        handleReasonClose();\r\n        updateData(shortList.id);\r\n        handleNotificationCall(\"success\", response.data.message);\r\n      } else {\r\n        handleNotificationCall(\"error\", response.data.message);\r\n        setLoader(false);\r\n      }\r\n    });\r\n  }\r\n\r\n  function updateJoiningDitchedStatus() {\r\n    setLoader(true);\r\n    var url = `${process.env.REACT_APP_SERVER}recruiter/updateJoiningDitchedStatus`;\r\n\r\n    axios({\r\n      method: \"post\",\r\n      url: url,\r\n      data: {\r\n        candidateId: shortList.id,\r\n        ditchReason: reasonRef.current.value,\r\n      },\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: token,\r\n      },\r\n    }).then(function (response) {\r\n      if (response.data.status === true) {\r\n        handleStatusClose();\r\n        handleReasonClose();\r\n        updateData(shortList.id);\r\n        handleNotificationCall(\"success\", response.data.message);\r\n      } else {\r\n        handleNotificationCall(\"error\", response.data.message);\r\n        setLoader(false);\r\n      }\r\n    });\r\n  }\r\n\r\n  function InvoicedStatus(values) {\r\n    setLoader(true);\r\n    var url = `${process.env.REACT_APP_SERVER}recruiter/updateInvoicedStatus`;\r\n\r\n    return new Promise((resolve) => {\r\n      axios({\r\n        method: \"post\",\r\n        url: url,\r\n        data: {\r\n          candidateId: shortList.id,\r\n          invoice: values.invoice,\r\n          invoicedDate: invoiceRef.current.value,\r\n        },\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: token,\r\n        },\r\n      }).then(function (response) {\r\n        if (response.data.status === true) {\r\n          updateData(shortList.id);\r\n          handleStatusClose();\r\n          resolve();\r\n          handleNotificationCall(\"success\", response.data.message);\r\n        } else {\r\n          handleNotificationCall(\"error\", response.data.message);\r\n          setLoader(false);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  function DropStatus(values) {\r\n    setLoader(true);\r\n    var url = `${process.env.REACT_APP_SERVER}recruiter/DropCandidate`;\r\n\r\n    return new Promise((resolve) => {\r\n      axios({\r\n        method: \"post\",\r\n        url: url,\r\n        data: {\r\n          id: shortList.id,\r\n          droppedReason: values.reason,\r\n        },\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: token,\r\n        },\r\n      }).then(function (response) {\r\n        if (response.data.status === true) {\r\n          updateData(shortList.id);\r\n          handleDropReasonClose();\r\n          resolve();\r\n          handleNotificationCall(\"success\", response.data.message);\r\n        } else {\r\n          handleNotificationCall(\"error\", response.data.message);\r\n          setLoader(false);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  function changeStcStatus() {\r\n    setLoader(true);\r\n\r\n    var url = `${process.env.REACT_APP_SERVER}recruiter/updateStcStatus`;\r\n\r\n    axios({\r\n      method: \"post\",\r\n      url: url,\r\n      data: {\r\n        id: shortList.id,\r\n      },\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: token,\r\n      },\r\n    }).then(function (response) {\r\n      if (response.data.status === true) {\r\n        updateData(shortList.id);\r\n        handleChangeMessageClose();\r\n        handleNotificationCall(\"success\", response.data.message);\r\n      } else {\r\n        handleNotificationCall(\"error\", response.data.message);\r\n        setLoader(false);\r\n      }\r\n    });\r\n  }\r\n\r\n  function OfferDeclineStatus(values) {\r\n    var url = `${process.env.REACT_APP_SERVER}recruiter/updateOfferDeclineStatus`;\r\n    setLoader(true);\r\n    return new Promise((resolve) => {\r\n      axios({\r\n        method: \"post\",\r\n        url: url,\r\n        data: {\r\n          candidateId: shortList.id,\r\n          offerDeclinedReason: reasonRef.current.value,\r\n        },\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: token,\r\n        },\r\n      }).then(function (response) {\r\n        if (response.data.status === true) {\r\n          updateData(shortList.id);\r\n          handleReasonClose();\r\n          resolve();\r\n          handleNotificationCall(\"success\", response.data.message);\r\n        } else {\r\n          handleNotificationCall(\"error\", response.data.message);\r\n          setLoader(false);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  const ExistCheck = (e) => {\r\n    if (recruitmentId !== \"\") {\r\n      CheckExitAlready(recruitmentId, e);\r\n    } else {\r\n      handleNotificationCall(\"error\", \"Select Requirement\");\r\n    }\r\n  };\r\n\r\n  function CheckExitAlready(recruitmentId, e) {\r\n    var data = {};\r\n    var url = \"\";\r\n\r\n    if (e.target.name === \"email\") {\r\n      data = {\r\n        requirementId: recruitmentId,\r\n        email: e.target.value,\r\n      };\r\n      url = `${process.env.REACT_APP_SERVER}recruiter/checkEmailExist`;\r\n    } else {\r\n      data = {\r\n        requirementId: recruitmentId,\r\n        mobile: e.target.value,\r\n      };\r\n      url = `${process.env.REACT_APP_SERVER}recruiter/checkMobileExist`;\r\n    }\r\n\r\n    axios({\r\n      method: \"post\",\r\n      url: url,\r\n      data: data,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: token,\r\n      },\r\n    }).then(function (response) {\r\n      if (response.data.status === true) {\r\n        handleNotificationCall(\"error\", response.data.message);\r\n      }\r\n    });\r\n  }\r\n\r\n  function cvMatchingPercentage(id,requirementId) {\r\n\r\n    setMatchLoading(true)\r\n    const isRequirementIdExist = resumePercentage.some(item => item.requirementId === requirementId);\r\n    if (isRequirementIdExist) {\r\n      setMatchLoading(false)\r\n      handleNotificationCall(\"error\", \"Requirement already exists in the match list.\");\r\n      return;\r\n    }\r\n\r\n    axios({\r\n      method: \"post\",\r\n      url: `${process.env.REACT_APP_SERVER}AI/jdMatcher`,\r\n      data: {\r\n        id: id,\r\n        requirementId: requirementId\r\n      },\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: token,\r\n      },\r\n    }).then((response) => {\r\n      if (response.data.status === true) {\r\n        \r\n        const previousPercentage = [...resumePercentage];\r\n\r\n        const newPercentageItem = {\r\n          description: response.data?.data,\r\n          requirementName: response.data?.requirementName,\r\n          requirementId: response.data?.requirementId\r\n        };\r\n\r\n        previousPercentage.push(newPercentageItem);\r\n\r\n        setResumePercentage(previousPercentage);\r\n      } else if (response.data.status === false) {\r\n        handleNotificationCall(\"error\", response.data.message);\r\n      }\r\n      setMatchLoading(false)\r\n    });\r\n  }\r\n\r\n  const removePercentage = (requirementIdToRemove) => {\r\n    const updatedPercentage = resumePercentage.filter(item => item.requirementId !== requirementIdToRemove);\r\n    setResumePercentage(updatedPercentage);\r\n  };\r\n\r\n  function handleShow(values, name) {\r\n    setLoader(true);\r\n    if (name === \"EDIT\") {\r\n      setDataList(\"EDIT\");\r\n    } else if (name === \"VIEW\") {\r\n      setDataList(\"VIEW\");\r\n    } else {\r\n      setDataList(\"NOTES\");\r\n    }\r\n\r\n    if (name !== \"NOTES\") {\r\n      axios({\r\n        method: \"post\",\r\n        url: `${process.env.REACT_APP_SERVER}admin/viewCandidate`,\r\n        data: {\r\n          id: values,\r\n        },\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: token,\r\n        },\r\n      })\r\n        .then(function (response) {\r\n          if (response.data.status === true) {\r\n            setCandidateView({\r\n              ...candidateView,\r\n              id: response.data.data.id,\r\n              chatId: response.data.chatUser?.id,\r\n              email: response.data.data.candidateDetail?.email,\r\n              mobile: response.data.data.candidateDetail?.mobile,\r\n              cc:\r\n                response.data.data.requirement?.recruiter?.firstName +\r\n                \" \" +\r\n                response.data.data.requirement?.recruiter?.lastName,\r\n              firstName: response.data.data.candidateDetail?.firstName,\r\n              lastName: response.data.data.candidateDetail?.lastName,\r\n              skills: response.data.data.candidateDetail?.skills,\r\n              clientName: response.data.data.requirement?.client?.clientName,\r\n              requirementName: response.data.data.requirement?.requirementName,\r\n              statusCode: response.data.data.statusList?.statusCode,\r\n              source: response.data.data.source?.name,\r\n              invoiceValue: response.data.data.invoiceValue,\r\n              requiremenUniqueId: response.data.data.requirement?.uniqueId,\r\n              candidateUniqueId: response.data.data.uniqueId,\r\n              isAnswered: response.data.data.isAnswered,\r\n              currentLocation:\r\n                response.data.data.candidateDetail?.currentLocation,\r\n              preferredLocation:\r\n                response.data.data.candidateDetail?.preferredLocation,\r\n              nativeLocation:\r\n                response.data.data.candidateDetail?.nativeLocation,\r\n              experience: response.data.data.candidateDetail?.experience,\r\n              relevantExperience:\r\n                response.data.data.candidateDetail?.relevantExperience,\r\n              currentCtc: response.data.data.candidateDetail?.currentCtc,\r\n              expectedCtc: response.data.data.candidateDetail?.expectedCtc,\r\n              dob: response.data.data.candidateDetail?.dob,\r\n              noticePeriod: response.data.data.candidateDetail?.noticePeriod,\r\n              reasonForJobChange:\r\n                response.data.data.candidateDetail?.reasonForJobChange,\r\n              reason: response.data.data.candidateDetail?.reason,\r\n              candidateProcessed:\r\n                response.data.data.candidateDetail?.candidateProcessed,\r\n              differentlyAbled:\r\n                response.data.data.candidateDetail?.differentlyAbled,\r\n              educationalQualification:\r\n                response.data.data.candidateDetail?.educationalQualification,\r\n              gender: response.data.data.candidateDetail?.gender,\r\n              alternateMobile:\r\n                response.data.data.candidateDetail?.alternateMobile,\r\n              resume: response.data.data.candidateDetail?.resume,\r\n              candidateRecruiterDiscussionRecording:\r\n                response.data.data.candidateRecruiterDiscussionRecording,\r\n              candidateSkillExplanationRecording:\r\n                response.data.data.candidateSkillExplanationRecording,\r\n              candidateMindsetAssessmentLink:\r\n                response.data.data.candidateMindsetAssessmentLink,\r\n              candidateAndTechPannelDiscussionRecording:\r\n                response.data.data.candidateAndTechPannelDiscussionRecording,\r\n              currentCompanyName:\r\n                response.data.data.candidateDetail?.currentCompanyName,\r\n              mainId: response.data.data.mainId,\r\n              isCandidateCpv: response.data.data.isCandidateCpv,\r\n            });\r\n\r\n            setCandidatesEdit({\r\n              ...candidatesEdit,\r\n              id: response.data.data.id,\r\n              requirementName: response.data.data.requirement?.requirementName,\r\n              email: response.data.data.candidateDetail?.email,\r\n              mobile: response.data.data.candidateDetail?.mobile?.substring(2),\r\n              firstName: response.data.data.candidateDetail?.firstName,\r\n              lastName: response.data.data.candidateDetail?.lastName,\r\n              skills: response.data.data.candidateDetail?.skills,\r\n              source: response.data.data.source?.id,\r\n              invoicedDate: response.data.data.invoicedDate,\r\n              joinedDate: response.data.data.joinedDate,\r\n              invoiceValue: response.data.data.invoiceValue,\r\n              currentLocation:\r\n                response.data.data.candidateDetail?.currentLocation,\r\n              preferredLocation:\r\n                response.data.data.candidateDetail?.preferredLocation,\r\n              nativeLocation:\r\n                response.data.data.candidateDetail?.nativeLocation,\r\n              experience: response.data.data.candidateDetail?.experience,\r\n              relevantExperience:\r\n                response.data.data.candidateDetail?.relevantExperience,\r\n              currentCtc: response.data.data.candidateDetail?.currentCtc,\r\n              expectedCtc: response.data.data.candidateDetail?.expectedCtc,\r\n              dob: response.data.data.candidateDetail?.dob,\r\n              noticePeriod: response.data.data.candidateDetail?.noticePeriod,\r\n              reasonForJobChange:\r\n                response.data.data.candidateDetail?.reasonForJobChange,\r\n              reason: response.data.data.candidateDetail?.reason,\r\n              candidateProcessed:\r\n                response.data.data.candidateDetail?.candidateProcessed,\r\n              differentlyAbled:\r\n                response.data.data.candidateDetail?.differentlyAbled,\r\n              educationalQualification:\r\n                response.data.data.candidateDetail?.educationalQualification,\r\n              alternateMobile: response.data.data.candidateDetail?.alternateMobile?.substring(\r\n                2,\r\n              ),\r\n              resume: response.data.data.candidateDetail?.resume,\r\n              gender: response.data.data.candidateDetail?.gender,\r\n              candidateRecruiterDiscussionRecording:\r\n                response.data.data.candidateRecruiterDiscussionRecording,\r\n              candidateSkillExplanationRecording:\r\n                response.data.data.candidateSkillExplanationRecording,\r\n              candidateMindsetAssessmentLink:\r\n                response.data.data.candidateMindsetAssessmentLink,\r\n              candidateAndTechPannelDiscussionRecording:\r\n                response.data.data.candidateAndTechPannelDiscussionRecording,\r\n              mainId: response.data.data.mainId,\r\n              recruiterId: response.data.data.recruiterId,\r\n              currentCompanyName:\r\n                response.data.data.candidateDetail?.currentCompanyName,\r\n              hideContactDetails: response.data.data.hideContactDetails,\r\n            });\r\n\r\n            setState({ ...state, right: true });\r\n\r\n            setLoader(false);\r\n          } else {\r\n            setLoader(false);\r\n          }\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n\r\n      axios({\r\n        method: \"post\",\r\n        url: `${process.env.REACT_APP_SERVER}recruiter/getAllCandidateStatus`,\r\n        data: {\r\n          id: values,\r\n        },\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: token,\r\n        },\r\n      })\r\n        .then(function (response) {\r\n          if (response.data.status === true) {\r\n            setListCanditate(response.data.data);\r\n          }\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n    } else {\r\n      setCandidatesEdit({\r\n        ...candidatesEdit,\r\n        id: values,\r\n      });\r\n\r\n      axios({\r\n        method: \"post\",\r\n        url: `${process.env.REACT_APP_SERVER}recruiter/viewCandidateNotes`,\r\n        data: {\r\n          candidateId: values,\r\n        },\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: token,\r\n        },\r\n      }).then(function (response) {\r\n        if (response.data.status === true) {\r\n          setCandidatesNote(response.data.data);\r\n          setState({ ...state, right: true });\r\n          setLoader(false);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  function dropConfirmation(id) {\r\n    setLoader(true);\r\n    axios({\r\n      method: \"post\",\r\n      url: `${process.env.REACT_APP_SERVER}recruiter/DropCandidate`,\r\n      data: {\r\n        id: id,\r\n      },\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: token,\r\n      },\r\n    }).then(function (response) {\r\n      if (response.data.status === true) {\r\n        setDropOpen(false);\r\n        updateData(id);\r\n      } else {\r\n        handleNotificationCall(\"error\", response.data.message);\r\n        setLoader(false);\r\n      }\r\n    });\r\n  }\r\n\r\n  function reverseConfirmation(id) {\r\n    setLoader(true);\r\n    axios({\r\n      method: \"post\",\r\n      url: `${process.env.REACT_APP_SERVER}admin/resetStatus`,\r\n      data: {\r\n        id: id,\r\n      },\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: token,\r\n      },\r\n    }).then(function (response) {\r\n      if (response.data.status === true) {\r\n        setReverseOpen(false);\r\n        setLoader(false);\r\n        updateData(id);\r\n        handleNotificationCall(\"success\", response.data.message);\r\n      } else {\r\n        handleNotificationCall(\"error\", response.data.message);\r\n        setLoader(false);\r\n      }\r\n    });\r\n  }\r\n\r\n  function sendMessage(candidateId, mobile, message, candidate_name, list) {\r\n    setLoader(true);\r\n\r\n    axios({\r\n      method: \"post\",\r\n      url: `${process.env.REACT_APP_SERVER}chat/sendTemplateMessage`,\r\n      data: {\r\n        candidateId: candidateId,\r\n        phone_number: mobile,\r\n        template_name: \"general_message\",\r\n        vars: [\r\n          candidate_name,\r\n          list.rec_name,\r\n          list.rec_mobile_no,\r\n          localStorage.getItem(\"companyName\"),\r\n        ],\r\n        message: message,\r\n        candidate_name: candidate_name,\r\n      },\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: token,\r\n      },\r\n    })\r\n      .then(function (response) {\r\n        if (response.data.status === true) {\r\n          if (response.data.isNew === true) {\r\n            getmessageIni();\r\n          }\r\n\r\n          setLoader(false);\r\n          handleMessageClose();\r\n          handleNotificationCall(\"success\", response.data.message);\r\n        } else {\r\n          setLoader(false);\r\n          handleNotificationCall(\"error\", response.data.message);\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  function getmessageIni() {\r\n    axios({\r\n      method: \"post\",\r\n      url: `${process.env.REACT_APP_SERVER}auth/getMyWallet`,\r\n      data: {},\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: token,\r\n      },\r\n    }).then(function (response) {\r\n      if (response.data.status === true) {\r\n        localStorage.setItem(\r\n          \"WalletValue\",\r\n          response.data.data.remainingMessages,\r\n          { sameSite: \"strict\", secure: true },\r\n        );\r\n        window.dispatchEvent(new Event(\"storage\"));\r\n      }\r\n    });\r\n  }\r\n\r\n  const list = (anchor) =>\r\n    dataList === \"EDIT\" ? (\r\n      <>\r\n        <Edit\r\n          setValidation={setValidation}\r\n          validation={validation}\r\n          editSubmit={editSubmit}\r\n          handleEdit={handleEdit}\r\n          setCandidatesEdit={setCandidatesEdit}\r\n          candidatesEdit={candidatesEdit}\r\n          editCandidates={editCandidates}\r\n          editIsSubmitting={editIsSubmitting}\r\n          editErrors={editErrors}\r\n          toggleDrawer={toggleDrawer}\r\n          source={source}\r\n          setFile={setFile}\r\n          file={file}\r\n          setAssessment={setAssessment}\r\n          assessment={assessment}\r\n          days={days}\r\n          months={months}\r\n          years={years}\r\n          setDay={setDay}\r\n          setMonth={setMonth}\r\n          setYear={setYear}\r\n          date={date}\r\n          month={month}\r\n          year={year}\r\n          setPhoneValidation={setPhoneValidation}\r\n          show={\r\n            candidatesEdit.recruiterId === decode.recruiterId ? true : false\r\n          }\r\n        />\r\n      </>\r\n    ) : dataList === \"ADD\" ? (\r\n      <>\r\n        <Add\r\n          setValidation={setValidation}\r\n          validation={validation}\r\n          handleAddList={handleAddList}\r\n          register={register}\r\n          source={source}\r\n          recruitmentList={recruitmentList}\r\n          handleClose={handleClose}\r\n          errors={errors}\r\n          setLoader={setLoader}\r\n          toggleDrawer={toggleDrawer}\r\n          setRecruitmentList={setRecruitmentList}\r\n          requirementList={requirementList}\r\n          handleSubmit={handleSubmit}\r\n          handleAdd={handleAdd}\r\n          requirement={requirement}\r\n          isSubmitting={isSubmitting}\r\n          open={open}\r\n          messageRef={messageRef}\r\n          reset={reset}\r\n          setCandidate={setCandidate}\r\n          candidate={candidate}\r\n          setFile={setFile}\r\n          file={file}\r\n          setAssessment={setAssessment}\r\n          assessment={assessment}\r\n          setRecruitmentId={setRecruitmentId}\r\n          recruitmentId={recruitmentId}\r\n          days={days}\r\n          months={months}\r\n          years={years}\r\n          setDay={setDay}\r\n          setMonth={setMonth}\r\n          setYear={setYear}\r\n          setPhoneValidation={setPhoneValidation}\r\n          setHideContactDetails={setHideContactDetails}\r\n          hideContactDetails={hideContactDetails}\r\n          ExistCheck={ExistCheck}\r\n          requirementId={\"true\"}\r\n        />\r\n      </>\r\n    ) : dataList === \"VIEW\" ? (\r\n      <>\r\n        <View\r\n          candidateView={candidateView}\r\n          toggleDrawer={toggleDrawer}\r\n          listCanditate={listCanditate}\r\n          candidatesEdit={candidatesEdit}\r\n          setCandidateView={setCandidateView}\r\n        />\r\n      </>\r\n    ) : (\r\n      <>\r\n        <Note\r\n          toggleDrawer={toggleDrawer}\r\n          candidatesNote={candidatesNote}\r\n          noteCandidates={noteCandidates}\r\n          noteErrors={noteErrors}\r\n          handleAddNotes={handleAddNotes}\r\n          noteSubmit={noteSubmit}\r\n        />\r\n      </>\r\n    );\r\n\r\n  const HeaderElements = () => (\r\n    <>\r\n      <Grid className={classes.HeaderElements}>\r\n        {/* <Tooltip title=\"Dowmload\" placement=\"bottom\" aria-label=\"download\">\r\n          {count !== 0 ? (\r\n            <CloudDownloadIcon\r\n              className={classNames(classes.toolIcon)}\r\n              onClick={(e) => {\r\n                downloadExel();\r\n              }}\r\n            />\r\n          ) : (\r\n            <CloudDownloadIcon className={classes.downloadIcon} />\r\n          )}\r\n        </Tooltip> */}\r\n        Total : {count}\r\n      </Grid>\r\n    </>\r\n  );\r\n\r\n  const table_options = {\r\n    textLabels: {\r\n      body: {\r\n        noMatch: \"Oops! Matching record could not be found\",\r\n      },\r\n    },\r\n    search: false,\r\n    pagination: false,\r\n    sort: false,\r\n    selectableRows: \"none\",\r\n    filter: false,\r\n    print: false,\r\n    download: false,\r\n    customToolbar: () => <HeaderElements />,\r\n    onFilterChange: (changedColumn, filterList) => {},\r\n    filterType: \"dropdown\",\r\n    rowsPerPage: 50,\r\n    // rowsExpanded: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9],\r\n    expandableRows: true,\r\n    expandableRowsHeader: false,\r\n    expandableRowsOnClick: true,\r\n    responsive: mobileQuery === true ? \"vertical\" : \"standard\",\r\n    renderExpandableRow: (rowData, rowMeta) => {\r\n      const list = candidatesData[rowMeta.rowIndex];\r\n\r\n      return (\r\n        <React.Fragment>\r\n          <tr>\r\n            <td colSpan={16}>\r\n              <Bar title=\"Candidates\" list={list} />\r\n            </td>\r\n          </tr>\r\n        </React.Fragment>\r\n      );\r\n    },\r\n    page: page,\r\n  };\r\n\r\n  const components = {\r\n    ExpandButton: function (props) {\r\n      return <ExpandButton {...props} />;\r\n    },\r\n  };\r\n\r\n  // function getSheetData(data, header) {\r\n  //   var fields = Object.keys(data[0]);\r\n  //   var sheetData = data.map(function (row) {\r\n  //     return fields.map(function (fieldName) {\r\n  //       return row[fieldName] ? row[fieldName] : \"\";\r\n  //     });\r\n  //   });\r\n  //   sheetData.unshift(header);\r\n  //   return sheetData;\r\n  // }\r\n\r\n  // async function saveAsExcel(data) {\r\n  //   let header = [\r\n  //   \"S.No\",\r\n  //   \"Requirement Name\",\r\n  //   \"Client Coordinator\",\r\n  //   \"Recruiter\",\r\n  //   \"Candidate Name\",\r\n  //   \"Email\",\r\n  //   \"Mobile\",\r\n  //   \"Gender\",\r\n  //   \"Current Location\",\r\n  //   \"Preferred Location\",\r\n  //   \"Native Location\",\r\n  //   \"Total Years of Experience\",\r\n  //   \"Relevant Experience\",\r\n  //   \"Current CTC\",\r\n  //   \"Expected CTC\",\r\n  //   \"DOB\",\r\n  //   \"Notice Period\",\r\n  //   \"Reason for Job Change\",\r\n  //   \"Candidate Attended\",\r\n  //   \"Differently Abled\",\r\n  //   \"Educational Qualification\",\r\n  //   \"Posted Date\",\r\n  //   ];\r\n\r\n  //   XlsxPopulate.fromBlankAsync().then(async (workbook) => {\r\n  //     const sheet1 = workbook.sheet(0);\r\n  //     const sheetData = getSheetData(data, header);\r\n  //     const totalColumns = sheetData[0].length;\r\n\r\n  //     sheet1.cell(\"A1\").value(sheetData);\r\n  //     const range = sheet1.usedRange();\r\n  //     const endColumn = String.fromCharCode(64 + totalColumns);\r\n  //     sheet1.row(1).style(\"bold\", true);\r\n  //     sheet1.range(\"A1:\" + endColumn + \"1\").style(\"fill\", \"BFBFBF\");\r\n  //     range.style(\"border\", true);\r\n  //     return workbook.outputAsync().then((res) => {\r\n  //       saveAs(\r\n  //         res,\r\n  //         `Candidates_${moment(new Date()).format(\"DD_MM_YYYY_HH_mm\")}.xlsx`,\r\n  //       );\r\n  //     });\r\n  //   });\r\n  // }\r\n\r\n  return (\r\n    <>\r\n      <Grid container direction=\"row\" spacing={2} className={classes.heading}>\r\n        <Grid item xs={9} sm={7} md={8} lg={6}>\r\n          <PageTitle title=\"Candidates\" />\r\n        </Grid>\r\n\r\n        <Grid item xs={3} sm={5} md={4} lg={6} className={classes.drawerClose}>\r\n          <div className={classes.lgButton}>\r\n            <Button\r\n              variant=\"contained\"\r\n              size=\"small\"\r\n              startIcon={<AddCircleIcon />}\r\n              className={classes.margin}\r\n              color=\"primary\"\r\n              onClick={(e) => {\r\n                setDataList(\"ADD\");\r\n                reset();\r\n                setCandidate({\r\n                  ...candidate,\r\n                  requirementId: \"\",\r\n                  source: \"\",\r\n                  email: \"\",\r\n                  firstName: \"\",\r\n                  lastName: \"\",\r\n                  skills: \"\",\r\n                  location: \"\",\r\n                  experience: null,\r\n                  gender: \"\",\r\n                  differentlyAbled: \"\",\r\n                  candidateProcessed: \"\",\r\n                  native: \"\",\r\n                  preferredLocation: \"\",\r\n                  relevantExperience: null,\r\n                  educationalQualification: \"\",\r\n                  currentCtc: null,\r\n                  expectedCtc: null,\r\n                  noticePeriod: \"\",\r\n                  reasonForJobChange: \"\",\r\n                  reason: \"\",\r\n                  dob: \"\",\r\n                  candidateRecruiterDiscussionRecording: \"\",\r\n                  candidateSkillExplanationRecording: \"\",\r\n                  candidateMindsetAssessmentLink: \"\",\r\n                  candidateAndTechPannelDiscussionRecording: \"\",\r\n                  freeValue:\r\n                    decode.isEnableFree === true\r\n                      ? \"YES\"\r\n                      : decode.isEnablePaid === true\r\n                      ? \"NO\"\r\n                      : \"YES\",\r\n                });\r\n                setPhoneValidation(false);\r\n                setRecruitmentId(\"\");\r\n                setState({ ...state, right: true });\r\n                setValidation(false);\r\n                setFile([]);\r\n                setAssessment([]);\r\n              }}\r\n            >\r\n              Add New Candidate\r\n            </Button>\r\n          </div>\r\n\r\n          <div className={classes.smButton}>\r\n            <Button\r\n              variant=\"contained\"\r\n              size=\"small\"\r\n              startIcon={<AddCircleIcon />}\r\n              className={classes.margin}\r\n              color=\"primary\"\r\n              onClick={(e) => {\r\n                setDataList(\"ADD\");\r\n                reset();\r\n                setState({ ...state, right: true });\r\n                setValidation(false);\r\n              }}\r\n            >\r\n              Add\r\n            </Button>\r\n          </div>\r\n\r\n          <SwipeableDrawer\r\n            anchor=\"right\"\r\n            open={state[\"right\"]}\r\n            onClose={toggleDrawer(\"right\", false)}\r\n            onOpen={toggleDrawer(\"right\", true)}\r\n            classes={{\r\n              paper:\r\n                dataList === \"VIEW\" || dataList === \"NOTES\"\r\n                  ? classes.drawer\r\n                  : classes.clientDrawer,\r\n            }}\r\n          >\r\n            {list(\"right\")}\r\n          </SwipeableDrawer>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <form\r\n        ref={filterRef}\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          getFilterData();\r\n        }}\r\n      >\r\n        <Grid container spacing={2} className={classes.filterGap}>\r\n          <TextField\r\n            label=\"Search\"\r\n            type=\"text\"\r\n            name=\"search\"\r\n            placeholder=\"Enter Candidate Unique ID/Name/Email/Mobile (eg: 91XXXXXXXXXX)\"\r\n            InputLabelProps={{ shrink: true }}\r\n            value={search !== null ? search : \"\"}\r\n            onChange={(e) => {\r\n              setSearch(e.target.value);\r\n            }}\r\n            className={classes.searchWidth}\r\n          />\r\n\r\n          <Autocomplete\r\n            className={classes.filterFullWidth}\r\n            options={requirementName}\r\n            getOptionLabel={(option) =>\r\n              option.requirementName + \" (\" + option.uniqueId + \")\"\r\n            }\r\n            // size=\"small\"\r\n            value={requirementId}\r\n            onChange={(event, value) => {\r\n              setRequirementId(value);\r\n            }}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                name=\"requirementId\"\r\n                label=\"Requirement\"\r\n                size=\"small\"\r\n                InputLabelProps={{ shrink: true }}\r\n                type=\"text\"\r\n              />\r\n            )}\r\n          />\r\n\r\n          <Autocomplete\r\n            className={classes.filterFullWidth}\r\n            options={clientName}\r\n            getOptionLabel={(option) =>\r\n              option.clientName + \" (\" + option.uniqueId + \")\"\r\n            }\r\n            value={clientId}\r\n            onChange={(event, value) => setClientId(value)}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                name=\"clientId\"\r\n                label=\"Client\"\r\n                InputLabelProps={{ shrink: true }}\r\n                type=\"text\"\r\n              />\r\n            )}\r\n          />\r\n\r\n          <Autocomplete\r\n            options={userName}\r\n            className={classes.filterFullWidth}\r\n            getOptionLabel={(option) =>\r\n              option.firstName +\r\n              \" \" +\r\n              option.lastName +\r\n              \" (\" +\r\n              option.user?.role?.title +\r\n              \")\"\r\n            }\r\n            value={recruiterId}\r\n            onChange={(event, value) => setRecruiterId(value)}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                name=\"recruiterId\"\r\n                label=\"Recruiter\"\r\n                InputLabelProps={{ shrink: true }}\r\n                type=\"text\"\r\n              />\r\n            )}\r\n          />\r\n\r\n          <TextField\r\n            name=\"fromDate\"\r\n            label=\"From\"\r\n            InputLabelProps={{ shrink: true }}\r\n            className={classes.filterWidth}\r\n            type=\"date\"\r\n            defaultValue={fromDate}\r\n            onChange={handleFromDateChange}\r\n          />\r\n\r\n          <TextField\r\n            name=\"toDate\"\r\n            label=\"To\"\r\n            InputLabelProps={{ shrink: true }}\r\n            type=\"date\"\r\n            defaultValue={toDate}\r\n            onChange={handleToDateChange}\r\n            className={classes.filterWidth}\r\n          />\r\n\r\n          <div className={classes.buttons}>\r\n            <Button\r\n              variant=\"contained\"\r\n              size=\"small\"\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n            >\r\n              Search\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              size=\"small\"\r\n              color=\"secondary\"\r\n              onClick={() => resetForm()}\r\n            >\r\n              Reset\r\n            </Button>\r\n          </div>\r\n        </Grid>\r\n      </form>\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12}>\r\n          <MUIDataTable\r\n            options={table_options}\r\n            components={components}\r\n            columns={[\r\n              {\r\n                name: \"S.No\",\r\n              },\r\n              {\r\n                name: \"Actions\",\r\n              },\r\n              {\r\n                name: \"Status\",\r\n              },\r\n              {\r\n                name: \"Candidate Name\",\r\n              },\r\n              {\r\n                name: \"Email ID / Mobile\",\r\n              },\r\n\r\n              {\r\n                name: \"Requirement Name\",\r\n              },\r\n              {\r\n                name: \"Client Coordinator\",\r\n              },\r\n              {\r\n                name: \"Recruiter Name\",\r\n              },\r\n\r\n              {\r\n                name: \"Resume\",\r\n              },\r\n              {\r\n                name: \"View Candidate\",\r\n              },\r\n              {\r\n                name: \"Match Jd\",\r\n              },\r\n              {\r\n                name: \"Resume Info \",\r\n              },\r\n              {\r\n                name: \"Posted Date\",\r\n              },\r\n            ]}\r\n            data={candidatesData.map((item, index) => {\r\n              return [\r\n                <>\r\n                  {currerntPage !== 0\r\n                    ? 10 * currerntPage - 10 + index + 1\r\n                    : index + 1}\r\n                </>,\r\n                <Actions\r\n                  index={index}\r\n                  item={item}\r\n                  reset={reset}\r\n                  editreset={editreset}\r\n                  noteReset={noteReset}\r\n                  setCandidateList={setCandidateList}\r\n                  handleMessageOpen={handleMessageOpen}\r\n                  candidateList={candidateList}\r\n                  handleDropOpen={handleDropOpen}\r\n                  handleReverseOpen={handleReverseOpen}\r\n                  handleShow={handleShow}\r\n                  setFile={setFile}\r\n                  setAssessment={setAssessment}\r\n                  setPhoneValidation={setPhoneValidation}\r\n                  handleUse={handleUse}\r\n                />,\r\n                item.statusCode ? (\r\n                  <Grid>\r\n                    <Status\r\n                      list={item}\r\n                      handleStatusOpen={handleStatusOpen}\r\n                      handleStatusNewOpen={handleStatusNewOpen}\r\n                      setValidation={setValidation}\r\n                      setShortList={setShortList}\r\n                      shortList={shortList}\r\n                      setView={setView}\r\n                      view={view}\r\n                      invoicereset={invoicereset}\r\n                    />\r\n                  </Grid>\r\n                ) : (\r\n                  \"\"\r\n                ),\r\n\r\n                <Grid container row spacing={2}>\r\n                  {item.candidateDetail?.isExternal === \"YES\" ? (\r\n                    <Tooltip\r\n                      title=\"SUBVENDOR/FREELANCER\"\r\n                      placement=\"bottom\"\r\n                      aria-label=\"title\"\r\n                    >\r\n                      <Avatar\r\n                        alt=\"Profile\"\r\n                        src={external}\r\n                        className={classes.externalIcon}\r\n                      />\r\n                    </Tooltip>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                  {item.candidateDetail?.firstName +\r\n                    \" \" +\r\n                    item.candidateDetail?.lastName}\r\n                  <br /> {\" (\" + item.uniqueId + \")\"}\r\n                </Grid>,\r\n                item.mainId === decode.mainId ? (\r\n                  <>\r\n                    \r\n                    {item.candidateDetail?.email + \" /\"} <br />\r\n                    {\"91 \" + item.candidateDetail?.mobile.slice(2)}\r\n                  </>\r\n                ) : item.hideContactDetails !== true ? (\r\n                  <>\r\n                    \r\n                    {item.candidateDetail?.email + \" /\"} <br />\r\n                    {\"91 \" + item.candidateDetail?.mobile.slice(2)}\r\n                  </>\r\n                ) : (\r\n                  \"\"\r\n                ),\r\n                <>\r\n                  {item.requirement?.requirementName} <br />\r\n                  {\" (\" + item.requirement?.uniqueId + \")\"}\r\n                </>,\r\n                item.requirement?.recruiter?.firstName +\r\n                  \" \" +\r\n                  item.requirement?.recruiter?.lastName,\r\n                item.recruiter?.firstName + \" \" + item.recruiter?.lastName,\r\n                <>\r\n                  {item.candidateDetail?.resume !==\r\n                  \"https://liverefo.s3.amazonaws.com/\" ? (\r\n                    <>\r\n                      \r\n                      <Grid container className={classes.space}>\r\n                        \r\n                        <Grid item xs className={classes.toolAlign}>\r\n                          <Tooltip\r\n                            title=\"View Resume\"\r\n                            placement=\"bottom\"\r\n                            aria-label=\"view\"\r\n                          >\r\n                            <DescriptionIcon\r\n                              className={classes.toolIcon}\r\n                              onClick={() => {\r\n                                handleResumeOpen();\r\n                                setFile([\r\n                                  {\r\n                                    url: item.candidateDetail?.resume,\r\n                                  },\r\n                                ]);\r\n                              }}\r\n                            />\r\n                          </Tooltip>\r\n                          {/* <Tooltip         title=\"Downlaod Resume\"         placement=\"bottom\"         aria-label=\"downlaod\"       > \r\n  <a href={item.candidateDetail?.resume} download>  <GetAppIcon className={classes.toolIcon} />    </a>      \r\n</Tooltip>      */}\r\n                        </Grid>\r\n                      </Grid>\r\n                    </>\r\n                  ) : (\r\n                    \"No Resume Found\"\r\n                  )}\r\n                </>,\r\n                <Tooltip\r\n                  title=\"View Candidate\"\r\n                  placement=\"bottom\"\r\n                  aria-label=\"view\"\r\n                >\r\n                  <ViewIcon\r\n                    onClick={(e) => {\r\n                      handleShow(item.id, \"VIEW\");\r\n                    }}\r\n                    className={classes.toolIcon}\r\n                  />\r\n                </Tooltip>,\r\n                <Tooltip\r\n                  title=\"Match JD\"\r\n                  placement=\"bottom\"\r\n                  aria-label=\"view\"\r\n                >\r\n                  <div className={classes.toolIcon+\" \"+classes.resumeUploadParent} \r\n                    onClick={(e) => {\r\n                      handleJDOpen();\r\n                      cvMatchingPercentage(item.id);\r\n                      setCandidMatchId(item.id);\r\n                    }}>\r\n                    %\r\n                  </div>\r\n                </Tooltip>,\r\n                <Tooltip\r\n                  title=\"Get Resume Info\"\r\n                  placement=\"bottom\"\r\n                  aria-label=\"view\"\r\n                >\r\n                  <div className={classes.toolIcon+\" \"+classes.resumeUploadParent} \r\n                    onClick={(e) => {\r\n                      getCanididateResumeInfo(item.candidateDetailId,item.candidateDetail);\r\n                    }}>\r\n                    i\r\n                  </div>\r\n                </Tooltip>,\r\n                moment(item.createdAt).format(\"DD-MM-YYYY\"),\r\n              ];\r\n            })}\r\n          />\r\n\r\n          <Grid container spacing={2} className={classes.pagination}>\r\n            <TablePagination\r\n              rowsPerPageOptions={[50]}\r\n              component=\"div\"\r\n              count={count}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              onPageChange={handleChangePage}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Message\r\n        setState={setState}\r\n        state={state}\r\n        candidateList={candidateList}\r\n        decode={decode}\r\n        sendMessage={sendMessage}\r\n        handleMessageOpen={handleMessageOpen}\r\n        messageOpen={messageOpen}\r\n        handleMessageClose={handleMessageClose}\r\n      />\r\n\r\n      <Dialogs\r\n        handleStatusClose={handleStatusClose}\r\n        handleStatusNewClose={handleStatusNewClose}\r\n        validation={validation}\r\n        stausOpen={stausOpen}\r\n        stausNewOpen={stausNewOpen}\r\n        changeStatus={changeStatus}\r\n        shortList={shortList}\r\n        view={view}\r\n        setView={setView}\r\n        invoiceCandidates={invoiceCandidates}\r\n        invoiceErrors={invoiceErrors}\r\n        invoiceSubmit={invoiceSubmit}\r\n        InvoicedStatus={InvoicedStatus}\r\n        joinedStatus={joinedStatus}\r\n        creditNoteStatus={creditNoteStatus}\r\n        updateJoiningDitchedStatus={updateJoiningDitchedStatus}\r\n        OfferDeclineStatus={OfferDeclineStatus}\r\n        joiningRef={joiningRef}\r\n        invoiceRef={invoiceRef}\r\n        saveOnly={saveOnly}\r\n        setSaveOnly={setSaveOnly}\r\n        dropCandidates={dropCandidates}\r\n        dropErrors={dropErrors}\r\n        dropSubmit={dropSubmit}\r\n        dropReset={dropReset}\r\n        DropStatus={DropStatus}\r\n        handleDropReasonClose={handleDropReasonClose}\r\n        dropReasonOpen={dropReasonOpen}\r\n        handleDropReasonOpen={handleDropReasonOpen}\r\n        changeMessageOpen={changeMessageOpen}\r\n        handleChangeMessageClose={handleChangeMessageClose}\r\n        changeStcStatus={changeStcStatus}\r\n        handleChangeMessageOpen={handleChangeMessageOpen}\r\n        reasonRef={reasonRef}\r\n        handleReasonOpen={handleReasonOpen}\r\n        reasonOpen={reasonOpen}\r\n        handleReasonClose={handleReasonClose}\r\n      />\r\n\r\n      <ResumeDialog\r\n        resume={file}\r\n        resumeOpen={resumeOpen}\r\n        handleResumeClose={handleResumeClose}\r\n      />\r\n\r\n      <MatchJDDialog\r\n        resumePercentage={resumePercentage}\r\n        requirementName={requirementName}\r\n        matchLoading={matchLoading}\r\n        jDOpen={matchJDOpen}\r\n        handleJDClose={handleJDClose}\r\n        candidMatchId={candidMatchId}\r\n        cvMatchingPercentage={cvMatchingPercentage}\r\n        removePercentage={removePercentage}\r\n      />\r\n\r\n      <Drop\r\n        handleDropClose={handleDropClose}\r\n        dropOpen={dropOpen}\r\n        dropConfirmation={dropConfirmation}\r\n        candidateList={candidateList}\r\n      />\r\n\r\n      <Reverse\r\n        handleReverseClose={handleReverseClose}\r\n        reverseOpen={reverseOpen}\r\n        reverseConfirmation={reverseConfirmation}\r\n        candidateList={candidateList}\r\n      />\r\n\r\n      <Backdrop className={classes.backdrop} open={loader}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n    </>\r\n  );\r\n}\r\n","D:\\RecruiterCommunity\\refo-Front\\src\\pages\\requirements\\AssignRequirements.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\activity\\FreeMsgActivity.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\cc\\Candidates.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\requirements\\Requirements.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\cc\\dashboard\\YetToJoin.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\cc\\dashboard\\OfferedDeclined.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\cc\\dashboard\\SalaryBreakup.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\cc\\dashboard\\ScheduleInterview.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\cc\\dashboard\\Offered.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\cc\\dashboard\\FinalInterviewCompleted.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\cc\\dashboard\\Stc.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\cc\\dashboard\\DocumentColleted.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\cc\\dashboard\\New.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\admin\\dashboard\\YetToJoin.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\cc\\dashboard\\InterviewScheduled.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\cc\\dashboard\\Joined.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\admin\\dashboard\\SalaryBreakup.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\admin\\dashboard\\Joined.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\admin\\dashboard\\FinalInterviewScheduled.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\admin\\dashboard\\FinalInterviewCompleted.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\cc\\dashboard\\FinalInterviewScheduled.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\admin\\dashboard\\ScheduleInterview.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\admin\\dashboard\\Stc.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\admin\\dashboard\\DocumentColleted.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\admin\\dashboard\\New.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\transaction\\components\\Pdf.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\chat\\Singlechat.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\admin\\dashboard\\InterviewScheduled.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\admin\\dashboard\\Offered.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\transaction\\Transaction.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\chat\\Chat.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\contact\\Contact.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\plans\\Plans.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\company\\Company.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\ticket\\Ticket.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\invoice\\Invoice.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\price\\Price.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\source\\Source.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\users\\Users.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\adminUser\\Admin.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\clients\\Clients.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\components\\Sidebar\\Sidebar.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\dashboard\\Dashboard.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\components\\Admin\\ReportLayout.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\components\\Recruiter\\Layout.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\themes\\style.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\components\\Admin\\Layout.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\components\\Candidates\\AddRequirements.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\chat\\styles.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\components\\Candidates\\Dialogs.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\components\\Recruiter\\Reverse.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\components\\Candidates\\ExpandButton.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\components\\Candidates\\Drop.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\components\\Candidates\\Actions.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\components\\Admin\\AddClient.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\components\\Candidates\\Message.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\components\\Recruiter\\Status.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\components\\Recruiter\\Dialogs.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\components\\Candidates\\Note.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\components\\Candidates\\Bar.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\components\\PageTitle\\PageTitle.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\components\\Admin\\Dialogs.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\components\\Admin\\AssignAdd.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\components\\Admin\\Status.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\components\\Admin\\Reverse.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\components\\Candidates\\Edit.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\components\\Candidates\\View.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\dashboard\\styles.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\components\\Sidebar\\styles.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\components\\Admin\\AddUser.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\components\\Sidebar\\components\\Dot.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\components\\PageTitle\\styles.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\components\\Candidates\\Add.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\components\\Candidates\\SearchLayout.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\components\\Others\\Layout.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\components\\Recruiter\\SearchStatus.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\components\\Layout\\styles.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\forget\\styles.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\share\\Share.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\register\\DrawerComp.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\share\\Header.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\components\\Header\\Header.js",["1297","1298","1299"],"import React, { useEffect, useState, useReducer, useRef } from \"react\";\nimport {\n  Backdrop,\n  Box,\n  CircularProgress,\n  FormControl,\n  Grid,\n  IconButton,\n  InputLabel,\n  List,\n  Select,\n  TextField,\n  MenuItem,\n  SwipeableDrawer,\n  Toolbar,\n  AppBar,\n  InputAdornment,\n  Dialog,\n  DialogTitle,\n  Button,\n  Typography,\n  DialogContent,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  ClickAwayListener,\n  Tooltip,\n  Popper,\n} from \"@material-ui/core\";\nimport moment from \"moment\";\n\nimport WhatsAppIcon from \"@material-ui/icons/WhatsApp\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport CloudOffIcon from \"@material-ui/icons/CloudOff\";\nimport CloudQueueIcon from \"@material-ui/icons/CloudQueue\";\nimport SwapVertIcon from \"@material-ui/icons/SwapVert\";\nimport { Popover } from \"@material-ui/core\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Badge from \"@material-ui/core/Badge\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Chip from \"@material-ui/core/Chip\";\nimport jwt_decode from \"jwt-decode\";\nimport { toast } from \"react-toastify\";\nimport useStyles from \"../../themes/style.js\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardHeader from \"@material-ui/core/CardMedia\";\nimport { Menu as MenuIcon } from \"@material-ui/icons\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport VpnKeyIcon from \"@material-ui/icons/VpnKey\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport axios from \"axios\";\nimport classNames from \"classnames\";\nimport { useForm } from \"react-hook-form\";\nimport * as Yup from \"yup\";\nimport CloudDownloadIcon from \"@material-ui/icons/CloudDownload\";\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\nimport Notification from \"../../components/Notification\";\nimport {\n  toggleSidebar,\n  useLayoutDispatch,\n  useLayoutState,\n} from \"../../context/LayoutContext\";\nimport Fab from \"@mui/material/Fab\";\nimport { signOut, useUserDispatch } from \"../../context/UserContext\";\nimport walletBlue from \"../../images/WalletBlue.png\";\nimport walletRed from \"../../images/WalletRed.png\";\nimport { useHistory } from \"react-router-dom\";\nimport SearchBar from \"../Candidates/Search.js\";\nimport ContactSupportIcon from \"@material-ui/icons/ContactSupport\";\nimport PhotoCamera from \"@material-ui/icons/PhotoCamera\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\n\nimport PermContactCalendarIcon from \"@material-ui/icons/PermContactCalendar\";\nimport PublishIcon from \"@material-ui/icons/Publish\";\nimport sample_candidates from \"../../images/sample_candidates.xlsx\";\nimport AddClient from \"../Admin/AddClient\";\nimport AddUser from \"../Admin/AddUser\";\nimport Add from \"../Candidates/Add\";\nimport AddRequirements from \"../Candidates/AddRequirements\";\nimport AssignAdd from \"../Admin/AssignAdd.js\";\nimport { Autocomplete } from \"@material-ui/lab\";\n\nimport addRequirements from \"../../images/quickAccess/Add_requirements.png\";\nimport addUsers from \"../../images/quickAccess/Add_users.png\";\nimport addClients from \"../../images/quickAccess/Add_clients.png\";\nimport addCandidates from \"../../images/quickAccess/Add_candidates.png\";\nimport assignRequirements from \"../../images/quickAccess/Assign_Requirements.png\";\nimport MSMEregistration from \"../../images/quickAccess/MSMEregistration.png\";\nimport shareCVImg from \"../../images/quickAccess/shareCV.png\";\n//import ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport ArrowLeftIcon from \"@material-ui/icons/ArrowLeft\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nexport default function Header(props) {\n  var classes = useStyles();\n  const [reducerValue, forceUpdate] = useReducer((x) => x + 1, 0);\n  var userDispatch = useUserDispatch();\n  var layoutDispatch = useLayoutDispatch();\n  var layoutState = useLayoutState();\n  var [notificationsPosition] = useState(2);\n  var [errorToastId, setErrorToastId] = useState(null);\n  var [profileMenu, setProfileMenu] = useState(null);\n  var token = localStorage.getItem(\"token\");\n  var decode = jwt_decode(token);\n  var [WalletValue, setWalletValue] = useState(0);\n  var [image, setImage] = useState();\n  var [view, setView] = useState(\"\");\n  var [profile, setProfile] = useState([]);\n  var [file, setFile] = useState([]);\n  const [assessment, setAssessment] = useState([]);\n  const [hideContactDetails, setHideContactDetails] = useState(false);\n\n  //const [isScrollOpen,setIsScrollOpen]=useState(false)\n  const [isShareCV, setIsShareCV] = useState(false);\n\n  const history = useHistory();\n\n  var [deleteValue, setDeleteValue] = useState(\"\");\n  const [roleName, setRoleName] = useState(\"\");\n\n  var [backupView, setBackupView] = useState({\n    view: \"\",\n    link: \"\",\n  });\n\n  const [backupOpen, setBackupOpen] = React.useState(false);\n  const [confirmOpen, setConfirmOpen] = React.useState(false);\n  const [deleteOpen, setDeleteOpen] = React.useState(false);\n  const [uploadOpen, setUploadOpen] = React.useState(false);\n  const [uploadConfirmOpen, setUploadConfirmOpen] = React.useState(false);\n  const [existingOpen, setExistingOpen] = React.useState(false);\n  const [existingConfirmOpen, setExistingConfirmOpen] = React.useState(false);\n  const [invitationOpen, setInvitationOpen] = React.useState(false);\n\n  const [cvLink, setCvLink] = React.useState(\"\");\n\n  async function copyTextToClipboard(text) {\n    if (\"clipboard\" in navigator) {\n      return await navigator.clipboard.writeText(text);\n    } else {\n      return document.execCommand(\"copy\", true, text);\n    }\n  }\n\n  function handleCopy() {\n    copyTextToClipboard(\n      `${process.env.REACT_APP_SITE}/v1/#/companyRegister`,\n    ).then(() => {\n      handleNotificationCall(\"success\", \"Copied successfully\");\n    });\n  }\n\n  function handleCvLinkCopy(text) {\n    copyTextToClipboard(text).then(() => {\n      handleNotificationCall(\"success\", \"Copied successfully\");\n    });\n  }\n\n  function getLink(id) {\n    setLoader(true);\n    axios({\n      method: \"post\",\n      url: `${process.env.REACT_APP_SERVER}admin/candidateCvLink`,\n      data: { requirementId: id },\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: token,\n      },\n    }).then(function (response) {\n      if (response.data.status === true) {\n        setCvLink(response.data.link);\n      } else {\n      }\n      setLoader(false);\n    });\n  }\n\n  const handleUploadConfirmClose = () => {\n    setUploadConfirmOpen(false);\n  };\n\n  // const handleUploadOpen = () => {\n  //   setUploadOpen(true);\n  // };\n\n  const handleUploadClose = () => {\n    setUploadOpen(false);\n  };\n\n  const handleExistingOpen = () => {\n    setExistingOpen(true);\n  };\n\n  const handleExistingClose = () => {\n    setExistingOpen(false);\n  };\n\n  // const handleBackupOpen = () => {\n  //   setBackupOpen(true);\n  // };\n\n  const handleBackupClose = () => {\n    setBackupOpen(false);\n  };\n\n  const handleconfirmOpen = () => {\n    setBackupOpen(false);\n    setConfirmOpen(true);\n  };\n\n  const handleconfirmClose = () => {\n    setConfirmOpen(false);\n  };\n\n  const handleExistingConfirmClose = () => {\n    setExistingConfirmOpen(false);\n  };\n\n  const handleInvitationClose = () => {\n    setInvitationOpen(false);\n  };\n\n  const handleShareCVClose = () => {\n    setIsShareCV(false);\n  };\n\n  const handleDeleteOpen = () => {\n    setConfirmOpen(false);\n    setDeleteOpen(true);\n  };\n\n  const handleDeleteClose = () => {\n    setDeleteOpen(false);\n  };\n\n  const toRef = useRef(null);\n  const fromRef = useRef(null);\n\n  const monthDropdown = [\n    {\n      id: \"1\",\n      Month: \"JAN\",\n    },\n    {\n      id: \"2\",\n      Month: \"FEB\",\n    },\n    {\n      id: \"3\",\n      Month: \"MAR\",\n    },\n    {\n      id: \"4\",\n      Month: \"APR\",\n    },\n\n    {\n      id: \"5\",\n      Month: \"MAY\",\n    },\n    {\n      id: \"6\",\n      Month: \"JUN\",\n    },\n    {\n      id: \"7\",\n      Month: \"JUL\",\n    },\n    {\n      id: \"8\",\n      Month: \"AUG\",\n    },\n\n    {\n      id: \"9\",\n      Month: \"SEP\",\n    },\n\n    {\n      id: \"10\",\n      Month: \"OCT\",\n    },\n\n    {\n      id: \"11\",\n      Month: \"NOV\",\n    },\n\n    {\n      id: \"12\",\n      Month: \"DEC\",\n    },\n  ];\n\n  const [loader, setLoader] = useState(false);\n\n  const [state, setState] = useState({\n    right: false,\n  });\n\n  const [popperOpen, setPopperOpen] = useState(false);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [anchorEl2, setAnchorEl2] = useState(null);\n\n  const [quickAccessOpen, setQuickAccessOpen] = useState(false);\n  const [quickAccessMobileOpen, setQuickAccessMobileOpen] = useState(false);\n\n  const handleQAClick = (event) => {\n    setAnchorEl2(event.currentTarget);\n    setQuickAccessOpen((previousOpen) => !previousOpen);\n  };\n\n  const handleQAMobileClick = (event) => {\n    setAnchorEl2(event.currentTarget);\n    setQuickAccessMobileOpen((previousOpen) => !previousOpen);\n  };\n\n  const qaOpen = quickAccessOpen && Boolean(anchorEl2);\n  const qaMobileOpen = quickAccessMobileOpen && Boolean(anchorEl2);\n\n  const qaId = qaOpen ? \"spring\" : undefined;\n  const qaMobileId = qaMobileOpen ? \"spring\" : undefined;\n\n  const handlePoperClick = (event) => {\n    setAnchorEl(event.currentTarget);\n    setPopperOpen((previousOpen) => !previousOpen);\n  };\n\n  const canBeOpen = popperOpen && Boolean(anchorEl);\n  const poperId = canBeOpen ? \"spring-popper\" : undefined;\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    setState({ ...state, [anchor]: open });\n  };\n\n  /** Start Client **/\n\n  const [setDay] = useState(\"\");\n  const [setMonth] = useState(\"\");\n  const [setYear] = useState(\"\");\n\n  const months = [\n    \"01\",\n    \"02\",\n    \"03\",\n    \"04\",\n    \"05\",\n    \"06\",\n    \"07\",\n    \"08\",\n    \"09\",\n    \"10\",\n    \"11\",\n    \"12\",\n  ];\n  const days = Array.from({ length: 31 }, (_, i) => i + 1);\n  const years = Array.from(\n    { length: 60 },\n    (_, i) => moment(new Date()).format(\"YYYY\") - i,\n  );\n\n  const [recruiterFields, setRecruiterFields] = useState([\n    {\n      name: \"\",\n      mobile: \"\",\n      email: \"\",\n    },\n  ]);\n\n  const recruiterChange = (event, index) => {\n    const values = [...recruiterFields];\n    values[index][event.target.name] = event.target.value;\n    setRecruiterFields(values);\n  };\n\n  const recruiterAdd = () => {\n    setRecruiterFields([\n      ...recruiterFields,\n      {\n        name: \"\",\n        mobile: \"\",\n        email: \"\",\n      },\n    ]);\n\n    const timeout = setTimeout(() => {\n      const element = document.getElementById(\"section\");\n\n      element.scrollIntoView({ behavior: \"smooth\" });\n    }, 500);\n\n    return () => clearTimeout(timeout);\n  };\n  const recruiterRemove = (index) => {\n    if (recruiterFields.length !== -1) {\n      const values = [...recruiterFields];\n      values.splice(-1);\n      setRecruiterFields(values);\n    }\n  };\n\n  function handleAddClient(values) {\n    return new Promise((resolve) => {\n      setLoader(true);\n\n      axios({\n        method: \"post\",\n        url: `${process.env.REACT_APP_SERVER}admin/addClient`,\n        data: {\n          clientName: values.clientName,\n          clientIndustry: values.clientIndustry,\n          clientWebsite: values.clientWebsite,\n          aggStartDate: values.aggStartDate,\n          aggEndDate: values.aggEndDate,\n          orgRec: recruiterFields,\n        },\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: token,\n        },\n      }).then(function (response) {\n        resolve();\n        if (response.data.status === true) {\n          handleNotificationCall(\"success\", response.data.message);\n          history.push(\"/app/clients\");\n          setState({ ...state, right: false });\n        } else {\n          handleNotificationCall(\"error\", response.data.message);\n        }\n        setLoader(false);\n      });\n    });\n  }\n\n  /** End Client **/\n\n  /** Start User*/\n  function handleAddUser(values) {\n    return new Promise((resolve) => {\n      setLoader(true);\n\n      axios({\n        method: \"post\",\n        url: `${process.env.REACT_APP_SERVER}admin/addUser`,\n        data: {\n          firstName: values.firstName,\n          lastName: values.lastName,\n          email: values.email,\n          password: values.password,\n          mobile: values.mobile,\n          roleName: values.roleName,\n          companyName: values.companyName,\n          employeeId: values.employeeId,\n        },\n\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: token,\n        },\n      }).then(function (response) {\n        resolve();\n        if (response.data.status === true) {\n          handleNotificationCall(\"success\", response.data.message);\n          history.push(\"/app/users\");\n          setState({ ...state, right: false });\n        } else {\n          handleNotificationCall(\"error\", response.data.message);\n        }\n        setLoader(false);\n      });\n    });\n  }\n\n  /** End User */\n\n  /** Start Candidate*/\n  const [source, setSource] = useState([]);\n  const messageRef = useRef();\n  const [recruitmentId, setRecruitmentId] = useState(\"\");\n  const [addList, setAddList] = useState([]);\n  const [phoneValidation, setPhoneValidation] = useState(false);\n  const [recruitmentList, setRecruitmentList] = useState([]);\n  const [validation, setValidation] = useState(false);\n  const [open, setOpen] = React.useState(false);\n\n  const ExistCheck = (e) => {\n    if (decode.role === \"SUBVENDOR\" || decode.role === \"FREELANCER\") {\n      CheckExitAlready(recruitmentId, e);\n    } else {\n      if (recruitmentId !== \"\") {\n        CheckExitAlready(recruitmentId, e);\n      } else {\n        handleNotificationCall(\"error\", \"Select Requirement\");\n      }\n    }\n  };\n\n  function CheckExitAlready(recruitmentId, e) {\n    var data = {};\n    var url = \"\";\n\n    if (e.target.name === \"email\") {\n      data = {\n        requirementId: recruitmentId,\n        email: e.target.value,\n      };\n      url = `${process.env.REACT_APP_SERVER}recruiter/checkEmailExist`;\n    } else {\n      data = {\n        requirementId: recruitmentId,\n        mobile: e.target.value,\n      };\n      url = `${process.env.REACT_APP_SERVER}recruiter/checkMobileExist`;\n    }\n\n    axios({\n      method: \"post\",\n      url: url,\n      data: data,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: token,\n      },\n    }).then(function (response) {\n      if (response.data.status === true) {\n        handleNotificationCall(\"error\", response.data.message);\n      }\n    });\n  }\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [candidate, setCandidate] = useState({\n    requirementId: \"\",\n    source: \"\",\n    email: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    skills: \"\",\n    location: \"\",\n    experience: null,\n    candidateProcessed: \"\",\n    native: \"\",\n    preferredLocation: \"\",\n    relevantExperience: null,\n    educationalQualification: \"\",\n    gender: \"\",\n    differentlyAbled: \"\",\n    currentCtc: null,\n    expectedCtc: null,\n    noticePeriod: \"\",\n    reasonForJobChange: \"\",\n    reason: \"\",\n    dob: \"\",\n    freeValue:\n      decode.isEnableFree === true\n        ? \"YES\"\n        : decode.isEnablePaid === true\n        ? \"NO\"\n        : \"YES\",\n  });\n\n  const [requirementList, setRequirementList] = useState({\n    cand1_name: \"\",\n    job1_location: \"\",\n    client1_name: \"\",\n    job1_title: \"\",\n    cand1_skills: \"\",\n    job1_experience: \"\",\n    rec_name: \"\",\n    rec_mobile_no: \"\",\n    req_id: \"\",\n  });\n\n  function handleAddCandidate(values) {\n    return new Promise((resolve) => {\n      if (validation === true) {\n      } else {\n        setAddList(values);\n\n        axios({\n          method: \"post\",\n          url: `${process.env.REACT_APP_SERVER}CC/getRequirement`,\n          data: {\n            id: recruitmentId,\n          },\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: token,\n          },\n        }).then(function (response) {\n          if (response.data.status === true) {\n            setRequirementList({\n              ...requirementList,\n              cand1_name: values.firstName + \" \" + values.lastName,\n              job1_location: response.data.data.jobLocation,\n              client1_name: response.data.data.client?.clientName,\n              job1_title: response.data.data.requirementName,\n              cand1_skills: values.skills,\n              job1_experience: response.data.data.experience,\n              rec_name: localStorage.getItem(\"firstName\"),\n              rec_mobile_no: localStorage.getItem(\"mobile\"),\n              req_id: response.data.data.uniqueId,\n            });\n\n            CheckAlreadyExit(values);\n          }\n          resolve();\n        });\n      }\n    });\n  }\n\n  function CheckAlreadyExit(addList) {\n    var dob = addList.day + \"-\" + addList.month + \"-\" + addList.year;\n\n    axios({\n      method: \"post\",\n      url: `${process.env.REACT_APP_SERVER}recruiter/candidateExist`,\n      data: {\n        email: addList.email,\n        firstName: addList.firstName,\n        lastName: addList.lastName,\n        mobile: addList.mobile,\n        requirementId: recruitmentId,\n        skills: addList.skills,\n        sourceId: addList.source,\n        isAnswered: candidate.freeValue,\n        message: \"\",\n        experience: addList.experience,\n        currentLocation: addList.location,\n        alternateMobile: addList.alternateMobile,\n        preferredLocation: addList.preferredLocation,\n        nativeLocation: addList.native,\n        relevantExperience: addList.relevantExperience,\n        currentCtc: addList.currentCtc,\n        expectedCtc: addList.expectedCtc,\n        dob:\n          addList.day === undefined\n            ? \"\"\n            : dob !== \"--\"\n            ? addList.day + \"-\" + addList.month + \"-\" + addList.year\n            : \"\",\n        noticePeriod: addList.noticePeriod,\n        reasonForJobChange: addList.reasonForJobChange,\n        candidateProcessed: addList.candidateProcessed,\n        differentlyAbled: addList.differentlyAbled,\n        educationalQualification: addList.educationalQualification,\n        gender: addList.gender,\n        reason: addList.reason,\n        sendMessage: \"\",\n      },\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: token,\n      },\n    }).then(function (response) {\n      if (response.data.status === true) {\n        handleClickOpen();\n      } else {\n        handleNotificationCall(\"error\", response.data.message);\n      }\n    });\n  }\n\n  function handleAddList(send) {\n    setLoader(true);\n    var url = \"\";\n    var data = {};\n    var dob = addList.day + \"-\" + addList.month + \"-\" + addList.year;\n\n    if (candidate.freeValue === \"YES\") {\n      url = `${process.env.REACT_APP_SERVER}recruiter/addFreeCandidate`;\n      data = {\n        email: addList.email,\n        firstName: addList.firstName,\n        lastName: addList.lastName,\n        mobile: addList.mobile,\n        requirementId: recruitmentId,\n        skills: addList.skills,\n        sourceId: addList.source,\n        isAnswered: candidate.freeValue,\n        message: messageRef.current.value,\n        experience: addList.experience,\n        currentLocation: addList.location,\n        alternateMobile: addList.alternateMobile,\n        preferredLocation: addList.preferredLocation,\n        nativeLocation: addList.native,\n        relevantExperience: addList.relevantExperience,\n        currentCtc: addList.currentCtc,\n        expectedCtc: addList.expectedCtc,\n        dob:\n          addList.day === undefined\n            ? \"\"\n            : dob !== \"--\"\n            ? addList.day + \"-\" + addList.month + \"-\" + addList.year\n            : \"\",\n        noticePeriod: addList.noticePeriod,\n        reasonForJobChange: addList.reasonForJobChange,\n        candidateProcessed: addList.candidateProcessed,\n        differentlyAbled: addList.differentlyAbled,\n        educationalQualification: addList.educationalQualification,\n        gender: addList.gender,\n        reason: addList.reason,\n        candidateRecruiterDiscussionRecording:\n          addList.candidateRecruiterDiscussionRecording,\n        candidateSkillExplanationRecording:\n          addList.candidateSkillExplanationRecording,\n        candidateMindsetAssessmentLink: addList.candidateMindsetAssessmentLink,\n        candidateAndTechPannelDiscussionRecording:\n          addList.candidateAndTechPannelDiscussionRecording,\n        currentCompanyName: addList.currentCompanyName,\n        sendMessage: send,\n      };\n    } else {\n      url = `${process.env.REACT_APP_SERVER}recruiter/addCandidate`;\n      data = {\n        email: addList.email,\n        firstName: addList.firstName,\n        lastName: addList.lastName,\n        mobile: addList.mobile,\n        requirementId: recruitmentId,\n        skills: addList.skills,\n        sourceId: addList.source,\n        isAnswered: candidate.freeValue,\n        experience: addList.experience,\n        currentLocation: addList.location,\n        alternateMobile: addList.alternateMobile,\n        preferredLocation: addList.preferredLocation,\n        nativeLocation: addList.native,\n        relevantExperience: addList.relevantExperience,\n        currentCtc: addList.currentCtc,\n        expectedCtc: addList.expectedCtc,\n        dob:\n          addList.day === undefined\n            ? \"\"\n            : dob !== \"--\"\n            ? addList.day + \"-\" + addList.month + \"-\" + addList.year\n            : \"\",\n        noticePeriod: addList.noticePeriod,\n        reasonForJobChange: addList.reasonForJobChange,\n        candidateProcessed: addList.candidateProcessed,\n        differentlyAbled: addList.differentlyAbled,\n        educationalQualification: addList.educationalQualification,\n        gender: addList.gender,\n        reason: addList.reason,\n        candidateRecruiterDiscussionRecording:\n          addList.candidateRecruiterDiscussionRecording,\n        candidateSkillExplanationRecording:\n          addList.candidateSkillExplanationRecording,\n        candidateMindsetAssessmentLink: addList.candidateMindsetAssessmentLink,\n        candidateAndTechPannelDiscussionRecording:\n          addList.candidateAndTechPannelDiscussionRecording,\n        currentCompanyName: addList.currentCompanyName,\n        sendMessage: send,\n      };\n    }\n\n    axios({\n      method: \"post\",\n      url: url,\n      data: data,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: token,\n      },\n    }).then(function (response) {\n      if (response.data.status === true) {\n        handleClose();\n        var message = \"\";\n\n        if (file !== undefined) {\n          if (file?.length !== 0) {\n            uploadResume(file, response.data.candidateDetailsId);\n          }\n        }\n\n        if (assessment !== undefined) {\n          if (assessment?.length !== 0) {\n            uploadAssessment(assessment, response.data.candidateId);\n          }\n        }\n\n        if (send === true) {\n          if (candidate.freeValue === \"YES\") {\n            message = messageRef.current.value;\n\n            window.open(\n              \"https://api.whatsapp.com/send?phone=+91\" +\n                addList.mobile +\n                \"&text=\" +\n                message +\n                \"\",\n            );\n          } else {\n            message =\n              \"Hi \" +\n              requirementList.cand1_name +\n              \", Can we chat today about a job opening \" +\n              localStorage.getItem(\"firstName\") +\n              \", \" +\n              localStorage.getItem(\"mobile\") +\n              \", \" +\n              localStorage.getItem(\"companyName\") +\n              \". Always reply by clicking back arrow button/right swipe only.\";\n\n            handleMessage(\n              response.data.candidate_mobile,\n              message,\n              response.data.candidateId,\n            );\n          }\n        }\n\n        handleNotificationCall(\"success\", response.data.message);\n\n        decode.role === \"ADMIN\"\n          ? history.push(\"/app/admin_candidates\")\n          : decode.role === \"RECRUITER\"\n          ? history.push(\"/app/recruiter_candidates\")\n          : decode.role === \"CLIENTCOORDINATOR\"\n          ? history.push(\"/app/cc_candidates\")\n          : history.push(\"/app/others_candidates\");\n        setState({ ...state, right: false });\n        candidateReset();\n      } else {\n        handleNotificationCall(\"error\", response.data.message);\n      }\n\n      setValidation(false);\n      setLoader(false);\n    });\n  }\n\n  function aiResumeUpload(resumeData) {\n    axios({\n      method: \"post\",\n      url: `${process.env.REACT_APP_SERVER}AI/resumeUpload`,\n      data: resumeData,\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        Authorization: token,\n      },\n    }).then(function (response) {\n    \n      if (response.data.status === true) {\n      } else {\n        handleNotificationCall(\"error\", response.data.message);\n      }\n    });\n  }\n  \n  function uploadResume(File, Id) {\n    var FormData = require(\"form-data\");\n    var data = new FormData();\n    data.append(\"resume\", File);\n    data.append(\"id\", Id);\n    axios({\n      method: \"post\",\n      url: `${process.env.REACT_APP_SERVER}recruiter/updateCandidateResume`,\n      data: data,\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        Authorization: token,\n      },\n    }).then(function (response) {\n      if (response.data.status === true) {\n        aiResumeUpload(data)\n      } else {\n        handleNotificationCall(\"error\", response.data.message);\n      }\n    });\n  }\n\n  function uploadAssessment(File, Id) {\n    var FormData = require(\"form-data\");\n    var data = new FormData();\n    data.append(\"file\", File);\n    data.append(\"id\", Id);\n    axios({\n      method: \"post\",\n      url: `${process.env.REACT_APP_SERVER}recruiter/updateCandidateMindSetAssessment`,\n      data: data,\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        Authorization: token,\n      },\n    }).then(function (response) {\n      if (response.data.status === true) {\n      } else {\n        handleNotificationCall(\"error\", response.data.message);\n      }\n    });\n  }\n\n  function handleMessage(mobile, message, candidateId) {\n    var url = \"\";\n\n    if (candidate.freeValue === \"YES\") {\n      url = `${process.env.REACT_APP_SERVER}recruiter/changeYesCadidateStatus`;\n    } else {\n      url = `${process.env.REACT_APP_SERVER}chat/sendTemplateMessage`;\n    }\n\n    axios({\n      method: \"post\",\n      url: url,\n      data: {\n        candidateId: candidateId,\n        phone_number: mobile,\n        template_name: \"first_message\",\n        vars: [\n          requirementList.cand1_name,\n          requirementList.rec_name,\n          requirementList.rec_mobile_no,\n          localStorage.getItem(\"companyName\"),\n        ],\n        message: message,\n        candidate_name: requirementList.cand1_name,\n      },\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: token,\n      },\n    }).then(function (response) {\n      if (response.data.status === true) {\n        if (response.data.isNew === true) {\n          getmessageIni();\n        }\n\n        setLoader(false);\n      } else {\n        handleNotificationCall(\"error\", response.data.message);\n      }\n\n      // handleStatusClose();\n      // handleStatusNewClose();\n      setLoader(false);\n    });\n  }\n\n  function getmessageIni() {\n    axios({\n      method: \"post\",\n      url: `${process.env.REACT_APP_SERVER}auth/getMyWallet`,\n      data: {},\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: token,\n      },\n    }).then(function (response) {\n      if (response.data.status === true) {\n        localStorage.setItem(\n          \"WalletValue\",\n          response.data.data.remainingMessages,\n          { sameSite: \"strict\", secure: true },\n        );\n        window.dispatchEvent(new Event(\"storage\"));\n      }\n    });\n  }\n\n  useEffect(() => {\n    if (decode.role !== \"SUPERADMIN\") {\n      axios({\n        method: \"post\",\n        url: `${process.env.REACT_APP_SERVER}source/viewSourcesList`,\n        data: {},\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: token,\n        },\n      }).then(function (response) {\n        if (response.data.status === true) {\n          setSource(response.data.data);\n        }\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [token]);\n\n  /** End Candidate */\n\n  /** Start Requirements */\n  const [recUser, setRecUser] = useState([]);\n\n  const ContentRef = React.useRef();\n  var [hideFromInternal, setHideFromInternal] = useState(false);\n  const [modeofWork, setModeofWork] = React.useState(\"\");\n  const [specialHiring, setSpecialHiring] = React.useState(\"\");\n  const [clientId, setClientId] = useState(\"\");\n  const [requirementsOrgId, setRequirementsOrgId] = useState(\"\");\n  const [clientList, setClientList] = useState([]);\n\n  const RequirementsSchema = Yup.object().shape({\n    requirementName: Yup.string().required(\"Requirement Name is required\"),\n    jobLocation: Yup.string().required(\"Job Location is required\"),\n    clientId: Yup.string().required(\"Clients Name is required\"),\n    orgRecruiterId: Yup.string().required(\"Org Recruiter Name is required\"),\n    skills: Yup.string().required(\"Skill is required\"),\n    gist: Yup.string(),\n    hideFromInternal: Yup.string(),\n    work: Yup.string().required(\"Mode of work is required\"),\n    hiring: Yup.string(),\n    experience: Yup.string().required(\"Experience is required\"),\n  });\n\n  const {\n    register: requirementsRegister,\n    formState: {\n      errors: requirementsErrors,\n      isSubmitting: requirementsIsSubmitting,\n    },\n    handleSubmit: requirementsSubmit,\n    reset: requirementsReset,\n  } = useForm({\n    mode: \"onBlur\",\n    resolver: yupResolver(RequirementsSchema),\n  });\n\n  function handleClientNameChange(value) {\n    setClientId(value);\n\n    axios({\n      method: \"post\",\n      url: `${process.env.REACT_APP_SERVER}CC/getOrganisationReciruterList`,\n      data: {\n        id: value,\n      },\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: token,\n      },\n    }).then(function (response) {\n      if (response.data.status === true) {\n        setRecUser(response.data.data);\n      }\n    });\n  }\n\n  function handleUploadChange(e) {\n    setFile(e.target.files[0]);\n  }\n\n  function handleRequirementAdd(values) {\n    return new Promise((resolve) => {\n      setLoader(true);\n      var url = \"\";\n      if (decode.role === \"ADMIN\") {\n        url = `${process.env.REACT_APP_SERVER}admin/addRequirement`;\n      } else {\n        url = `${process.env.REACT_APP_SERVER}CC/addRequirement`;\n      }\n\n      axios({\n        method: \"post\",\n        url: url,\n        data: {\n          requirementName: values.requirementName,\n          skills: values.skills,\n          clientId: clientId,\n          orgRecruiterId: requirementsOrgId,\n          jobLocation: values.jobLocation,\n          experience: values.experience,\n          gist: ContentRef.current.value,\n          file: file?.name,\n          modeOfWork: values.work,\n          specialHiring: values.hiring,\n          hideFromInternal: values.hideFromInternal,\n        },\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: token,\n        },\n      }).then(function (response) {\n        if (response.data.status === true) {\n          if (file?.name) {\n            uploadJD(file, response.data.requirementId);\n          }\n\n          handleNotificationCall(\"success\", response.data.message);\n          history.push(\"/app/requirements\");\n          setState({ ...state, right: false });\n        } else {\n          handleNotificationCall(\"error\", response.data.message);\n        }\n        resolve();\n        setLoader(false);\n      });\n    });\n  }\n\n  function uploadJD(File, Id) {\n    var FormData = require(\"form-data\");\n    var data = new FormData();\n    data.append(\"file\", File);\n    data.append(\"id\", Id);\n    axios({\n      method: \"post\",\n      url: `${process.env.REACT_APP_SERVER}cc/updateRequirementJd`,\n      data: data,\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        Authorization: token,\n      },\n    }).then(function (response) {\n      if (response.data.status === true) {\n      } else {\n        handleNotificationCall(\"error\", response.data.message);\n      }\n    });\n  }\n\n  /** End Requirements */\n\n  /** Start Assign */\n  const [requirementName, setRequirementName] = useState([]);\n\n  const [externalUser, setExternalUser] = useState([]);\n  const [recruiterId, setRecruiterId] = useState(null);\n  const [requirementId, setRequirementId] = useState(null);\n  const [assignData, setAssignData] = useState([]);\n  const [assignPage, setAssignPage] = useState(0);\n  const [assignCurrerntPage, setAssignCurrerntPage] = useState(1);\n  const [assigncount, setAssignCount] = useState(0);\n\n  const assignSchema = Yup.object().shape({\n    recruiterId: Yup.string().required(\"User is required\"),\n    requirementId: Yup.string().required(\"Requirement Name is required\"),\n  });\n\n  const {\n    register: assignRequirement,\n    formState: { errors: assignErrors, isSubmitting: assignIsSubmitting },\n    handleSubmit: assignSubmit,\n    reset: assignReset,\n  } = useForm({\n    mode: \"onBlur\",\n    resolver: yupResolver(assignSchema),\n  });\n\n  useEffect(() => {\n    if (decode.role !== \"SUPERADMIN\") {\n      const fetchData = async () => {\n        axios({\n          method: \"post\",\n          url: `${process.env.REACT_APP_SERVER}recruiter/externalUserList`,\n          data: {},\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: token,\n          },\n        }).then(function (response) {\n          if (response.data.status === true) {\n            setExternalUser(response.data.data);\n          }\n        });\n      };\n\n      const getRequirementName = async () => {\n        var url = \"\";\n\n        if (decode.role === \"ADMIN\") {\n          url = `${process.env.REACT_APP_SERVER}admin/getAllRequirementList`;\n        } else if (\n          decode.role === \"SUBVENDOR\" ||\n          decode.role === \"FREELANCER\"\n        ) {\n          url = `${process.env.REACT_APP_SERVER}recruiter/getAssignedRequierments`;\n        } else if (decode.role === \"RECRUITER\") {\n          url = `${process.env.REACT_APP_SERVER}recruiter/requirementList`;\n        } else {\n          url = `${process.env.REACT_APP_SERVER}CC/getCCRequirementList`;\n        }\n\n        axios({\n          method: \"post\",\n          url: url,\n          data: {},\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: token,\n          },\n        })\n          .then(function (response) {\n            if (response.data.status === true) {\n              setLoader(false);\n              setRequirementName(response.data.data);\n            }\n          })\n\n          .catch(function (error) {\n            console.log(error);\n          });\n      };\n      fetchData();\n      getRequirementName();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [reducerValue, token]);\n\n  function handleAssignRequirements(values) {\n    return new Promise((resolve) => {\n      setLoader(true);\n      axios({\n        method: \"post\",\n        url: `${process.env.REACT_APP_SERVER}admin/assignRequirements`,\n        data: {\n          recruiterId: recruiterId?.id,\n          requirementId: requirementId?.id,\n        },\n\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: token,\n        },\n      }).then(function (response) {\n        resolve();\n        if (response.data.status === true) {\n          handleNotificationCall(\"success\", response.data.message);\n          history.push(\"/app/users\");\n          assignReset();\n          setRecruiterId(null);\n          setRequirementId(null);\n          forceUpdate();\n          setState({ ...state, right: false });\n        } else {\n          handleNotificationCall(\"error\", response.data.message);\n        }\n        setLoader(false);\n      });\n    });\n  }\n\n  const handlerequirementChangePage = (event, newPage) => {\n    setAssignPage(newPage);\n    setLoader(true);\n    setAssignCurrerntPage(newPage + 1);\n\n    axios({\n      method: \"post\",\n      url: `${process.env.REACT_APP_SERVER}admin/viewAllAssigendRequirements`,\n      data: {\n        recruiterId: recruiterId?.id,\n        page: newPage + 1,\n      },\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: token,\n      },\n    }).then(function (response) {\n      if (response.data.status === true) {\n        setAssignData(response.data.data);\n        setAssignCount(response.data.count);\n      }\n\n      setLoader(false);\n    });\n  };\n\n  function handleAssignStatus(id, value) {\n    setLoader(true);\n    axios({\n      method: \"post\",\n      url: `${process.env.REACT_APP_SERVER}admin/changeAssignedRequirementStatus`,\n      data: {\n        id: id,\n      },\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: token,\n      },\n    }).then(function (response) {\n      if (response.data.status === true) {\n        const switchState = assignData.map((item) => {\n          if (item.id === id) {\n            return { ...item, isActive: value };\n          }\n          return item;\n        });\n        setAssignData(switchState);\n        setLoader(false);\n        handleNotificationCall(\"success\", response.data.message);\n      }\n    });\n  }\n\n  function getAssigendRequirements(id) {\n    setLoader(true);\n    axios({\n      method: \"post\",\n      url: `${process.env.REACT_APP_SERVER}admin/viewAllAssigendRequirements`,\n      data: {\n        recruiterId: id,\n        page: \"1\",\n      },\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: token,\n      },\n    })\n      .then(function (response) {\n        if (response.data.status === true) {\n          setLoader(false);\n          setAssignData(response.data.data);\n          setAssignCount(response.data.count);\n        }\n      })\n\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n\n  /** End Assign */\n\n  const positions = [toast.POSITION.TOP_RIGHT];\n  function sendNotification(componentProps, options) {\n    return toast(\n      <Notification\n        {...componentProps}\n        className={classes.notificationComponent}\n      />,\n      options,\n    );\n  }\n  function handleNotificationCall(notificationType, message) {\n    var componentProps;\n\n    if (errorToastId && notificationType === \"error\") return;\n\n    switch (notificationType) {\n      case \"info\":\n        componentProps = {\n          type: \"feedback\",\n          message: message,\n          variant: \"contained\",\n          color: \"primary\",\n        };\n        break;\n      case \"error\":\n        componentProps = {\n          type: \"message\",\n          message: message,\n          variant: \"contained\",\n          color: \"secondary\",\n        };\n        break;\n      default:\n        componentProps = {\n          type: \"shipped\",\n          message: message,\n          variant: \"contained\",\n          color: \"success\",\n        };\n    }\n\n    var toastId = sendNotification(componentProps, {\n      type: notificationType,\n      position: positions[notificationsPosition],\n      progressClassName: classes.progress,\n      onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\n      className: classes.notification,\n    });\n\n    if (notificationType === \"error\") setErrorToastId(toastId);\n  }\n\n  const [Month, setMonthValue] = useState({\n    toMonth: \"\",\n    fromMonth: \"\",\n  });\n\n  const validationSchema = Yup.object().shape({\n    email: Yup.string()\n      .required(\"Email is required\")\n      .email(\"Email must be a Valid Email Address\"),\n    firstName: Yup.string().max(255).required(\"First Name is required\"),\n    lastName: Yup.string().max(255).required(\"Last Name is required\"),\n    mobile: Yup.string()\n      .required(\"Mobile is required\")\n      .min(10, \"Must be exactly 10 digits\")\n      .max(10, \"Must be exactly 10 digits\"),\n    companyName: Yup.string().max(255).required(\"Company Name is required\"),\n  });\n\n  const changeSchema = Yup.object().shape({\n    old: Yup.string()\n      .required(\"Old Password is required\")\n      .min(8, \"Old Password must be at least 8 characters\"),\n    password: Yup.string()\n      .required(\"Password is required\")\n      .min(8, \"Password must be at least 8 characters\"),\n    confirm: Yup.string()\n      .required(\"Confirm Password is required\")\n      .min(8, \"Confirm Password must be at least 8 characters\"),\n  });\n\n  const userSchema = Yup.object().shape({\n    email: Yup.string()\n      .required(\"Email is required\")\n      .email(\"Email must be a Valid Email Address\"),\n    firstName: Yup.string()\n      .max(255)\n      .required(\"First Name is required\")\n      .matches(/^[^!@#$%^&*+=<>:;|~]*$/, {\n        message: \"First Name be Alphanumeric\",\n      }),\n    lastName: Yup.string()\n      .max(255)\n      .required(\"Last Name is required\")\n      .matches(/^[^!@#$%^&*+=<>:;|~]*$/, {\n        message: \"Last Name be Alphanumeric\",\n      }),\n    mobile: Yup.string()\n      .required(\"Mobile is required\")\n      .min(10, \"Must be exactly 10 digits\")\n      .max(10, \"Must be exactly 10 digits\"),\n    roleName: Yup.string().required(\"User Category is required\"),\n    password: Yup.string()\n      .required(\"Password is required\")\n      .min(8, \"Password must be at least 8 characters\"),\n    employeeId: Yup.string(),\n    companyName:\n      roleName === \"SUBVENDOR\"\n        ? Yup.string().required(\"company Name is required\")\n        : Yup.string(),\n  });\n\n  const clientSchema = Yup.object().shape({\n    clientName: Yup.string().max(255).required(\"Clients Name is required\"),\n    clientIndustry: Yup.string()\n      .max(255)\n      .required(\"Clients Industry is required\"),\n    clientWebsite: Yup.string()\n      .max(255)\n      .required(\"Clients Website is required\"),\n    aggStartDate: Yup.string().max(255).required(\"Start Date is required\"),\n    aggEndDate: Yup.string().max(255).required(\"End Date is required\"),\n  });\n\n  const invitationSchema = Yup.object().shape({\n    email: Yup.string()\n      .email(\"Email must be a Valid Email Address\")\n      .required(\"Email is required\"),\n  });\n\n  const shareCVSchema = Yup.object().shape({\n    requirementId: Yup.string().required(\"Requirement Name is required\"),\n    email: Yup.string()\n      .email(\"Email must be a Valid Email Address\")\n      .required(\"Email is required\"),\n    mobile: Yup.string()\n      .required(\"Mobile is required\")\n      .min(10, \"Must be exactly 10 digits\")\n      .max(10, \"Must be exactly 10 digits\"),\n  });\n\n  const candidateSchema = Yup.object().shape({\n    email: Yup.string()\n      .email(\"Email must be a Valid Email Address\")\n      .required(\"Email is required\"),\n    firstName: Yup.string()\n      .required(\"First Name is required\")\n      .max(255)\n      .matches(/^[^!@#$%^&*+=<>:;|~]*$/, {\n        message: \"First Name be Alphanumeric\",\n      }),\n    lastName: Yup.string()\n      .max(255)\n      .required(\"Last Name is required\")\n      .max(255)\n      .matches(/^[^!@#$%^&*+=<>:;|~]*$/, {\n        message: \"Last Name be Alphanumeric\",\n      }),\n    mobile: Yup.string()\n      .required(\"Contact Number is required\")\n      .min(10, \"Must be exactly 10 digits\")\n      .max(10, \"Must be exactly 10 digits\"),\n    requirementId: Yup.string().required(\"Requirement Name is required\"),\n    skills: Yup.string().required(\"Skill is required\"),\n    source: Yup.string().required(\"Source is required\"),\n    free: Yup.string().nullable().notRequired(),\n    experience: Yup.number()\n      .nullable(true)\n      .transform((_, val) => (val ? Number(val) : null)),\n    location: Yup.string().nullable().notRequired(),\n    alternateMobile:\n      phoneValidation === true\n        ? Yup.string()\n            .required(\"Alternate Contact Number is required\")\n            .min(10, \"Must be exactly 10 digits\")\n            .max(10, \"Must be exactly 10 digits\")\n        : Yup.string(),\n    day: Yup.string().nullable().notRequired(),\n    month: Yup.string().nullable().notRequired(),\n    year: Yup.string().nullable().notRequired(),\n    gender: Yup.string().nullable().required(\"Gender is required\"),\n    educationalQualification: Yup.string().nullable().notRequired(),\n    differentlyAbled: Yup.string().nullable().notRequired(),\n    currentCtc: Yup.number()\n      .nullable(true)\n      .transform((_, val) => (val ? Number(val) : null)),\n    expectedCtc: Yup.number()\n      .nullable(true)\n      .transform((_, val) => (val ? Number(val) : null)),\n    noticePeriod: Yup.string().nullable().notRequired(),\n    reasonForJobChange: Yup.string().nullable().notRequired(),\n    candidateProcessed: Yup.string().nullable().notRequired(),\n    reason: Yup.string().nullable().notRequired(),\n    native: Yup.string().nullable().notRequired(),\n    preferredLocation: Yup.string().nullable().notRequired(),\n    relevantExperience: Yup.number()\n      .nullable(true)\n      .transform((_, val) => (val ? Number(val) : null)),\n    currentCompanyName: Yup.string().nullable().notRequired(),\n  });\n\n  const {\n    register: candidateRegister,\n    formState: { errors: candidateErrors, isSubmitting: candidateIsSubmitting },\n    handleSubmit: candidateSubmit,\n    reset: candidateReset,\n  } = useForm({\n    mode: \"onBlur\",\n    resolver: yupResolver(candidateSchema),\n  });\n\n  const {\n    register: clientRegister,\n    formState: { errors: clientErrors, isSubmitting: clientIsSubmitting },\n    handleSubmit: clientSubmit,\n    reset: clientReset,\n  } = useForm({\n    mode: \"onBlur\",\n    resolver: yupResolver(clientSchema),\n  });\n\n  const {\n    register: userRegister,\n    formState: { errors: userErrors, isSubmitting: userIsSubmitting },\n    handleSubmit: userSubmit,\n    reset: userReset,\n  } = useForm({\n    mode: \"onBlur\",\n    resolver: yupResolver(userSchema),\n  });\n\n  const {\n    register: changePassword,\n    formState: { errors: changeErrors, isSubmitting: changeIsSubmitting },\n    handleSubmit: changeSubmit,\n  } = useForm({\n    mode: \"onBlur\",\n    resolver: yupResolver(changeSchema),\n  });\n\n  const {\n    register: invite,\n    formState: { errors: inviteErrors, isSubmitting: inviteIsSubmitting },\n    handleSubmit: inviteSubmit,\n    reset: inviteReset,\n  } = useForm({\n    resolver: yupResolver(invitationSchema),\n  });\n\n  const {\n    register: shareCV,\n    formState: { errors: shareCVErrors, isSubmitting: shareCVIsSubmitting },\n    handleSubmit: shareCVSubmit,\n    reset: shareCVReset,\n  } = useForm({\n    resolver: yupResolver(shareCVSchema),\n  });\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors, isSubmitting },\n  } = useForm({\n    resolver: yupResolver(validationSchema),\n  });\n\n  const { handleSubmit: uploadSubmit } = useForm({\n    mode: \"onBlur\",\n  });\n\n  const [values, setValues] = React.useState({\n    showOldPassword: false,\n    showPassword: false,\n    showConfirmPassword: false,\n  });\n\n  const handleClickOldPassword = () => {\n    setValues({ ...values, showOldPassword: !values.showOldPassword });\n  };\n\n  const handleClickShowPassword = () => {\n    setValues({ ...values, showPassword: !values.showPassword });\n  };\n\n  const handleClickConfirmPassword = () => {\n    setValues({ ...values, showConfirmPassword: !values.confirm });\n  };\n\n  function handleChange(event) {\n    setImage(URL.createObjectURL(event.target.files[0]));\n\n    var FormData = require(\"form-data\");\n    var data = new FormData();\n    data.append(\"image\", event.target.files[0]);\n\n    setLoader(true);\n    axios({\n      method: \"post\",\n      url: `${process.env.REACT_APP_SERVER}admin/setLogo`,\n      data: data,\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        Authorization: token,\n      },\n    }).then(function (response) {\n      if (response.data.status === true) {\n        setLoader(false);\n        handleNotificationCall(\"success\", response.data.message);\n        setImage(response.data.image);\n      } else {\n        setLoader(false);\n        handleNotificationCall(\"error\", response.data.message);\n      }\n    });\n  }\n\n  function handleCompanySettings(values) {\n    return new Promise((resolve) => {\n      setLoader(true);\n      axios({\n        method: \"post\",\n        url: `${process.env.REACT_APP_SERVER}admin/editMyCompanySettings`,\n        data: {\n          fromMonth: fromRef.current.value,\n          toMonth: toRef.current.value,\n        },\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: token,\n        },\n      })\n        .then(function (response) {\n          if (response.data.status === true) {\n            handleNotificationCall(\"success\", response.data.message);\n            forceUpdate();\n            setState({ ...state, right: false });\n          } else {\n            handleNotificationCall(\"error\", response.data.message);\n          }\n          setLoader(false);\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    });\n  }\n\n  function handleBackupOnly(view) {\n    setLoader(true);\n    setView(\"Download\");\n    axios({\n      method: \"post\",\n      url: `${process.env.REACT_APP_SERVER}admin/resumeBackup`,\n      data: {},\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: token,\n      },\n    })\n      .then(function (response) {\n        if (response.data.status === true) {\n          handleResumeBackup(view);\n        } else {\n          setLoader(false);\n\n          handleNotificationCall(\"error\", response.data.message);\n        }\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n\n  function handleResumeBackup(view) {\n    axios({\n      method: \"post\",\n      url: `${process.env.REACT_APP_SERVER}admin/backupData`,\n      data: {},\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: token,\n      },\n    })\n      .then(function (response) {\n        if (response.data.status === true) {\n          handleArchiveDownload(view);\n        } else {\n          setLoader(false);\n\n          handleNotificationCall(\"error\", response.data.message);\n        }\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n\n  function handleArchiveDownload(view) {\n    axios({\n      method: \"post\",\n      url: `${process.env.REACT_APP_SERVER}admin/archiveDownload`,\n      data: {},\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: token,\n      },\n    })\n      .then(function (response) {\n        if (response.data.status === true) {\n          setLoader(false);\n          setBackupView({\n            ...backupView,\n            view: view,\n            link: response.data.link,\n          });\n        } else {\n          setLoader(false);\n\n          handleNotificationCall(\"error\", response.data.message);\n        }\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n\n  function handleUploadConfirm() {\n    if (file && file.name) {\n      setUploadConfirmOpen(true);\n      handleUploadClose();\n    } else {\n      handleNotificationCall(\"error\", \"No file uploaded\");\n    }\n  }\n\n  function handleExistingConfirm() {\n    if (file && file.name) {\n      setExistingConfirmOpen(true);\n      handleExistingClose();\n    } else {\n      handleNotificationCall(\"error\", \"No file uploaded\");\n    }\n  }\n\n  function handleUpload() {\n    if (file && file.name) {\n      var FormData = require(\"form-data\");\n      var data = new FormData();\n      data.append(\"backup\", file);\n\n      setLoader(true);\n      axios({\n        method: \"post\",\n        url: `${process.env.REACT_APP_SERVER}admin/clientRestoreBackup`,\n        data: data,\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n          Authorization: token,\n        },\n      }).then(function (response) {\n        if (response.data.status === true) {\n          restore(response.data.foldername);\n        } else {\n          setLoader(false);\n          handleNotificationCall(\"error\", response.data.message);\n        }\n      });\n    } else {\n      handleNotificationCall(\"error\", \"No file uploaded\");\n    }\n  }\n\n  function restore(foldername) {\n    axios({\n      method: \"post\",\n      url: `${process.env.REACT_APP_SERVER}admin/clientrestoreDataBase`,\n      data: {\n        foldName: foldername,\n      },\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: token,\n      },\n    }).then(function (response) {\n      if (response.data.status === true) {\n        setLoader(false);\n        handleNotificationCall(\"success\", response.data.message);\n        handleUploadConfirmClose();\n        window.location.reload();\n      } else {\n        setLoader(false);\n        handleNotificationCall(\"error\", response.data.message);\n      }\n    });\n  }\n\n  function handleExistingUpload() {\n    if (file && file.name) {\n      var FormData = require(\"form-data\");\n      var data = new FormData();\n      data.append(\"backup\", file);\n\n      setLoader(true);\n      axios({\n        method: \"post\",\n        url: `${process.env.REACT_APP_SERVER}admin/uploadExistingCandidates`,\n        data: data,\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n          Authorization: token,\n        },\n      }).then(function (response) {\n        if (response.data.status === true) {\n          handleNotificationCall(\"success\", response.data.message);\n          handleExistingConfirmClose();\n          setLoader(false);\n        } else {\n          setLoader(false);\n          handleNotificationCall(\"error\", response.data.message);\n        }\n      });\n    } else {\n      handleNotificationCall(\"error\", \"No file uploaded\");\n    }\n  }\n\n  const deleteRef = useRef(null);\n\n  function handleBackupDelete() {\n    setLoader(true);\n    if (deleteRef.current.value === \"DELETE\") {\n      axios({\n        method: \"post\",\n        url: `${process.env.REACT_APP_SERVER}admin/inactiveBackup`,\n        data: {},\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: token,\n        },\n      })\n        .then(function (response) {\n          if (response.data.status === true) {\n            window.location.reload();\n            handleDeleteClose();\n            handleNotificationCall(\"success\", \"Data is deleted permanently\");\n          } else {\n            handleNotificationCall(\"error\", response.data.message);\n          }\n          setLoader(false);\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    } else {\n      setLoader(false);\n      handleNotificationCall(\"error\", \"Doesn't match\");\n    }\n  }\n\n  useEffect(() => {\n    var decode = jwt_decode(token);\n    if (decode.role !== \"SUPERADMIN\") {\n      axios({\n        method: \"post\",\n        url: `${process.env.REACT_APP_SERVER}auth/getLogo`,\n        data: {},\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: token,\n        },\n      })\n        .then(function (response) {\n          if (response.data.status === true) {\n            setImage(response.data.image);\n          }\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n\n      const fetchData = async () => {\n        axios({\n          method: \"post\",\n          url: `${process.env.REACT_APP_SERVER}recruiter/viewUsers`,\n          data: {\n            id: decode.user_id,\n          },\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: token,\n          },\n        })\n          .then(function (response) {\n            if (response.data.status === true) {\n              setProfile(response.data.data);\n            }\n            setLoader(false);\n          })\n          .catch(function (error) {\n            console.log(error);\n\n            if (\n              error?.response?.status === 401 ||\n              error?.response?.status === 403\n            ) {\n              signOut(userDispatch, props.history);\n            }\n          });\n      };\n\n      if (decode.role === \"ADMIN\") {\n        const financialData = async () => {\n          axios({\n            method: \"post\",\n            url: `${process.env.REACT_APP_SERVER}admin/myCompanySettings`,\n            data: {},\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: token,\n            },\n          }).then(function (response) {\n            if (response.data.status === true) {\n              setMonthValue({\n                toMonth: response.data.data.toMonth,\n                fromMonth: response.data.data.fromMonth,\n              });\n            }\n          });\n        };\n\n        financialData();\n      }\n      fetchData();\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [reducerValue, token]);\n\n  function updateProfile(values) {\n    return new Promise((resolve) => {\n      setLoader(true);\n\n      axios({\n        method: \"post\",\n        url: `${process.env.REACT_APP_SERVER}admin/updateProfile`,\n        data: {\n          id: decode.user_id,\n          firstName: values.firstName,\n          lastName: values.lastName,\n          companyName: values.companyName,\n          mobile: values.mobile,\n          email: values.email,\n          employeeId: values.employeeId,\n        },\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: token,\n        },\n      })\n        .then(function (response) {\n          if (response.data.status === true) {\n            localStorage.setItem(\"firstName\", values.firstName);\n            localStorage.setItem(\"email\", values.email);\n            localStorage.setItem(\"mobile\", values.mobile);\n            localStorage.setItem(\"companyName\", values.companyName);\n\n            handleNotificationCall(\"success\", response.data.message);\n            forceUpdate();\n\n            setState({ ...state, right: false });\n          } else {\n            handleNotificationCall(\"error\", response.data.message);\n          }\n          resolve();\n          setLoader(false);\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    });\n  }\n\n  function handleChangePassword(values) {\n    if (values.password === values.confirm) {\n      return new Promise((resolve) => {\n        setLoader(true);\n        var decode = jwt_decode(token);\n\n        var url = \"\";\n        if (decode.role === \"SUPERADMIN\") {\n          url = `${process.env.REACT_APP_SERVER}superadmin/changeMyPassword`;\n        } else {\n          url = `${process.env.REACT_APP_SERVER}auth/changeMyPassword`;\n        }\n\n        axios({\n          method: \"post\",\n          url: url,\n          data: {\n            newPassword: values.password,\n            oldPassword: values.old,\n          },\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: token,\n          },\n        })\n          .then(function (response) {\n            if (response.data.status === true) {\n              handleNotificationCall(\"success\", response.data.message);\n              forceUpdate();\n              resolve();\n              setState({ ...state, right: false });\n            } else {\n              handleNotificationCall(\"error\", response.data.message);\n            }\n            setLoader(false);\n          })\n          .catch(function (error) {\n            console.log(error);\n          });\n      });\n    } else {\n      handleNotificationCall(\"error\", \"Password is mismatch\");\n    }\n  }\n\n  function inviteMSME(values) {\n    axios({\n      method: \"post\",\n      url: `${process.env.REACT_APP_SERVER}recruiter/inviteMsme`,\n      data: {\n        email: values.email,\n      },\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: token,\n      },\n    }).then(function (response) {\n      if (response.data.status === true) {\n        handleNotificationCall(\"success\", response.data.message);\n        inviteReset();\n        handleInvitationClose();\n      } else {\n        handleNotificationCall(\"error\", response.data.message);\n      }\n    });\n  }\n\n  function shareCVShortList(values) {\n    axios({\n      method: \"post\",\n      url: `${process.env.REACT_APP_SERVER}admin/sendCV`,\n      data: {\n        email: values.email,\n        mobile: values.mobile,\n        requirementId: requirementId?.id,\n      },\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: token,\n      },\n    }).then(function (response) {\n      if (response.data.status === true) {\n        handleNotificationCall(\"success\", response.data.message);\n        shareCVReset();\n        handleShareCVClose();\n      } else {\n        handleNotificationCall(\"error\", response.data.message);\n      }\n    });\n  }\n\n  useEffect(() => {\n    var decode = jwt_decode(token);\n\n    if (decode.role !== \"SUPERADMIN\") {\n      const fetchData = async () => {\n        axios({\n          method: \"post\",\n          url: `${process.env.REACT_APP_SERVER}auth/getMyWallet`,\n          data: {},\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: token,\n          },\n        }).then(function (response) {\n          if (response.data.data !== null) {\n            setWalletValue(response.data.data?.remainingMessages);\n          } else {\n            setWalletValue(0);\n          }\n        });\n      };\n      fetchData();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [reducerValue, token]);\n\n  useEffect(() => {\n    const changeWallet = () => {\n      forceUpdate();\n    };\n\n    window.addEventListener(\"storage\", changeWallet);\n    return () => {\n      window.removeEventListener(\"storage\", changeWallet);\n    };\n  }, []);\n\n  const list = (anchor) => (\n    <Box sx={{ width: \"100%\" }} role=\"presentation\">\n      <List>\n        {view === \"Settings\" ? (\n          <>\n            <Card className={classes.root}>\n              <CardHeader>\n                <Grid\n                  container\n                  direction=\"row\"\n                  spacing={1}\n                  className={classes.drawerHeader}\n                >\n                  <Grid item xs={10} md={6}>\n                    <Typography variant=\"subtitle1\"> Settings </Typography>\n                  </Grid>\n\n                  <Grid item xs={2} lg={6} className={classes.drawerClose}>\n                    <CloseIcon\n                      className={classes.closeBtn}\n                      size=\"14px\"\n                      onClick={toggleDrawer(anchor, false)}\n                    />\n                  </Grid>\n                </Grid>\n              </CardHeader>\n\n              <form onSubmit={uploadSubmit(handleCompanySettings)}>\n                <CardContent className={classes.root}>\n                  <Grid container direction=\"row\" spacing={2}>\n                    <Grid item xs={12}>\n                      <Box\n                        sx={{\n                          display: \"flex\",\n                          justifyContent: \"center\",\n                          alignItems: \"center\",\n                        }}\n                      >\n                        <Avatar\n                          alt=\"Profile\"\n                          src={image}\n                          className={classes.avatarButton}\n                        />\n                      </Box>\n                    </Grid>\n                  </Grid>\n\n                  <Grid container direction=\"row\" spacing={2}>\n                    <Grid item xs={12} lg={4}></Grid>\n\n                    <Grid item xs={12} lg={4}>\n                      <FormControl>\n                        <div className={classes.root + \" \" + classes.center}>\n                          <input\n                            accept=\"image/*\"\n                            className={classes.input}\n                            id=\"icon-button-file\"\n                            type=\"file\"\n                            style={{ display: \"none\" }}\n                            onChange={handleChange}\n                          />\n                          <label htmlFor=\"icon-button-file\">\n                            <Button\n                              variant=\"contained\"\n                              color=\"primary\"\n                              className={classes.button}\n                              startIcon={<PhotoCamera />}\n                              aria-label=\"upload picture\"\n                              component=\"span\"\n                            >\n                              Upload Logo\n                            </Button>\n                          </label>\n                        </div>\n                      </FormControl>\n                    </Grid>\n                    <Grid item xs={12} lg={4}></Grid>\n                    <Grid item xs={12}>\n                      <InputLabel shrink htmlFor=\"fromMonth\">\n                        Financial Year\n                      </InputLabel>\n\n                      <FormControl className={classes.margin}>\n                        <div className={classes.space}>\n                          <Select\n                            labelId=\"fromMonth\"\n                            name=\"fromMonth\"\n                            defaultValue={Month.fromMonth}\n                            classes={{\n                              root: classes.customSelectField,\n                              icon: classes.customSelectIcon,\n                            }}\n                            onChange={(e) => {\n                              setMonthValue({\n                                ...Month,\n                                fromMonth: e.target.value,\n                              });\n                            }}\n                            inputRef={fromRef}\n                            disableUnderline\n                          >\n                            <MenuItem value=\"\"> Select </MenuItem>\n                            {monthDropdown.map((item, index) => {\n                              return [\n                                <MenuItem value={item.id}>\n                                  {\" \"}\n                                  {item.Month}{\" \"}\n                                </MenuItem>,\n                              ];\n                            })}\n                          </Select>\n\n                          <Select\n                            labelId=\"toMonth\"\n                            name=\"toMonth\"\n                            defaultValue={Month.toMonth}\n                            onChange={(e) => {\n                              setMonthValue({\n                                ...Month,\n                                toMonth: e.target.value,\n                              });\n                            }}\n                            classes={{\n                              root: classes.customSelectField,\n                              icon: classes.customSelectIcon,\n                            }}\n                            inputRef={toRef}\n                            disableUnderline\n                          >\n                            <MenuItem value=\"\"> Select </MenuItem>\n                            {monthDropdown.map((item, index) => {\n                              return [\n                                <MenuItem value={item.id}>\n                                  {\" \"}\n                                  {item.Month}{\" \"}\n                                </MenuItem>,\n                              ];\n                            })}\n                          </Select>\n                        </div>\n                      </FormControl>\n                    </Grid>\n                  </Grid>\n                </CardContent>\n                <CardActions>\n                  <Grid\n                    container\n                    direction=\"row\"\n                    spacing={2}\n                    className={classes.drawerFooter}\n                  >\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      size=\"small\"\n                      type=\"submit\"\n                      disabled={loader}\n                    >\n                      Update\n                    </Button>\n                    <Button\n                      variant=\"contained\"\n                      size=\"small\"\n                      color=\"secondary\"\n                      onClick={toggleDrawer(anchor, false)}\n                    >\n                      Close\n                    </Button>\n                  </Grid>\n                </CardActions>\n              </form>\n            </Card>\n          </>\n        ) : view === \"Change\" ? (\n          <>\n            <Card className={classes.root}>\n              <CardHeader>\n                <Grid\n                  container\n                  direction=\"row\"\n                  spacing={1}\n                  className={classes.drawerHeader}\n                >\n                  <Grid item xs={10} md={6}>\n                    <Typography variant=\"subtitle1\">\n                      {\" \"}\n                      Change Password{\" \"}\n                    </Typography>\n                  </Grid>\n\n                  <Grid item xs={2} lg={6} className={classes.drawerClose}>\n                    <CloseIcon\n                      className={classes.closeBtn}\n                      size=\"14px\"\n                      onClick={toggleDrawer(anchor, false)}\n                    />\n                  </Grid>\n                </Grid>\n              </CardHeader>\n\n              <form onSubmit={changeSubmit(handleChangePassword)}>\n                <CardContent className={classes.root}>\n                  <Grid container direction=\"row\" spacing={2}>\n                    <Grid item xs={12}>\n                      <InputLabel shrink htmlFor=\"old\">\n                        {\" \"}\n                        Old Password{\" \"}\n                      </InputLabel>\n                      <FormControl className={classes.margin}>\n                        <TextField\n                          classes={{ root: classes.customTextField }}\n                          type={values.showOldPassword ? \"text\" : \"password\"}\n                          placeholder=\"Enter Password\"\n                          InputProps={{\n                            disableUnderline: true,\n                            endAdornment: (\n                              <InputAdornment position=\"end\">\n                                <IconButton\n                                  aria-label=\"toggle password visibility\"\n                                  onClick={handleClickOldPassword}\n                                >\n                                  {values.showOldPassword ? (\n                                    <Visibility />\n                                  ) : (\n                                    <VisibilityOff />\n                                  )}\n                                </IconButton>\n                              </InputAdornment>\n                            ),\n                          }}\n                          {...changePassword(\"old\")}\n                          error={changeErrors.old ? true : false}\n                        />\n\n                        <Typography variant=\"inherit\" color=\"error\">\n                          {changeErrors.old?.message}\n                        </Typography>\n                      </FormControl>\n                    </Grid>\n\n                    <Grid item xs={12} sm={6} lg={6}>\n                      <InputLabel shrink htmlFor=\"password\">\n                        {\" \"}\n                        Password{\" \"}\n                      </InputLabel>\n                      <FormControl className={classes.margin}>\n                        <TextField\n                          classes={{ root: classes.customTextField }}\n                          type={values.showPassword ? \"text\" : \"password\"}\n                          placeholder=\"Enter Password\"\n                          InputProps={{\n                            disableUnderline: true,\n                            endAdornment: (\n                              <InputAdornment position=\"end\">\n                                <IconButton\n                                  aria-label=\"toggle password visibility\"\n                                  onClick={handleClickShowPassword}\n                                >\n                                  {values.showPassword ? (\n                                    <Visibility />\n                                  ) : (\n                                    <VisibilityOff />\n                                  )}\n                                </IconButton>\n                              </InputAdornment>\n                            ),\n                          }}\n                          {...changePassword(\"password\")}\n                          error={changeErrors.password ? true : false}\n                        />\n\n                        <Typography variant=\"inherit\" color=\"error\">\n                          {changeErrors.password?.message}\n                        </Typography>\n                      </FormControl>\n                    </Grid>\n\n                    <Grid item xs={12} sm={6} lg={6}>\n                      <InputLabel shrink htmlFor=\"confirm\">\n                        {\" \"}\n                        Confirm Password{\" \"}\n                      </InputLabel>\n                      <FormControl className={classes.margin}>\n                        <TextField\n                          classes={{ root: classes.customTextField }}\n                          type={\n                            values.showConfirmPassword ? \"text\" : \"password\"\n                          }\n                          placeholder=\"Enter Confirm Password\"\n                          InputProps={{\n                            disableUnderline: true,\n                            endAdornment: (\n                              <InputAdornment position=\"end\">\n                                <IconButton\n                                  aria-label=\"toggle password visibility\"\n                                  onClick={handleClickConfirmPassword}\n                                >\n                                  {values.showConfirmPassword ? (\n                                    <Visibility />\n                                  ) : (\n                                    <VisibilityOff />\n                                  )}\n                                </IconButton>\n                              </InputAdornment>\n                            ),\n                          }}\n                          {...changePassword(\"confirm\")}\n                          error={changeErrors.confirm ? true : false}\n                        />\n\n                        <Typography variant=\"inherit\" color=\"error\">\n                          {\" \"}\n                          {changeErrors.confirm?.message}{\" \"}\n                        </Typography>\n                      </FormControl>\n                    </Grid>\n                  </Grid>\n                </CardContent>\n                <CardActions>\n                  <Grid\n                    container\n                    direction=\"row\"\n                    spacing={2}\n                    className={classes.drawerFooter}\n                  >\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      size=\"small\"\n                      type=\"submit\"\n                      disabled={changeIsSubmitting}\n                    >\n                      Update\n                    </Button>\n                    <Button\n                      variant=\"contained\"\n                      size=\"small\"\n                      color=\"secondary\"\n                      onClick={toggleDrawer(anchor, false)}\n                    >\n                      Close\n                    </Button>\n                  </Grid>\n                </CardActions>\n              </form>\n            </Card>\n          </>\n        ) : (\n          <>\n            <Card className={classes.root}>\n              <CardHeader>\n                <Grid\n                  container\n                  direction=\"row\"\n                  spacing={1}\n                  className={classes.drawerHeader}\n                >\n                  <Grid item xs={10} md={6}>\n                    <Typography variant=\"subtitle1\">Update Profile</Typography>\n                  </Grid>\n\n                  <Grid item xs={2} lg={6} className={classes.drawerClose}>\n                    <CloseIcon\n                      className={classes.closeBtn}\n                      size=\"14px\"\n                      onClick={toggleDrawer(anchor, false)}\n                    />\n                  </Grid>\n                </Grid>\n              </CardHeader>\n\n              <form onSubmit={handleSubmit(updateProfile)}>\n                <CardContent>\n                  <Grid container direction=\"row\" spacing={2}>\n                    <Grid item xs={12} sm={6} lg={6}>\n                      <InputLabel shrink htmlFor=\"firstName\">\n                        First Name\n                      </InputLabel>\n                      <FormControl className={classes.margin}>\n                        <TextField\n                          InputProps={{ disableUnderline: true }}\n                          classes={{ root: classes.customTextField }}\n                          size=\"small\"\n                          placeholder=\"Enter First Name\"\n                          id=\"firstName\"\n                          name=\"firstName\"\n                          defaultValue={profile.recruiter?.firstName}\n                          {...register(\"firstName\")}\n                          error={errors.firstName ? true : false}\n                        />\n\n                        <Typography variant=\"inherit\" color=\"error\">\n                          {errors.firstName?.message}\n                        </Typography>\n                      </FormControl>\n                    </Grid>\n\n                    <Grid item xs={12} sm={6} lg={6}>\n                      <InputLabel shrink htmlFor=\"lastName\">\n                        Last Name\n                      </InputLabel>\n                      <FormControl className={classes.margin}>\n                        <TextField\n                          InputProps={{ disableUnderline: true }}\n                          classes={{ root: classes.customTextField }}\n                          size=\"small\"\n                          placeholder=\"Enter Last Name\"\n                          id=\"lastName\"\n                          name=\"lastName\"\n                          defaultValue={profile.recruiter?.lastName}\n                          {...register(\"lastName\")}\n                          error={errors.lastName ? true : false}\n                        />\n\n                        <Typography variant=\"inherit\" color=\"error\">\n                          {errors.lastName?.message}\n                        </Typography>\n                      </FormControl>\n                    </Grid>\n\n                    <Grid item xs={12} sm={6} lg={6}>\n                      <InputLabel shrink htmlFor=\"email\">\n                        Email\n                      </InputLabel>\n                      <FormControl className={classes.margin}>\n                        <TextField\n                          InputProps={{ disableUnderline: true }}\n                          classes={{ root: classes.customTextField }}\n                          size=\"small\"\n                          placeholder=\"Enter Email\"\n                          id=\"email\"\n                          name=\"email\"\n                          defaultValue={profile.email}\n                          {...register(\"email\")}\n                          error={errors.email ? true : false}\n                        />\n\n                        <Typography variant=\"inherit\" color=\"error\">\n                          {errors.email?.message}\n                        </Typography>\n                      </FormControl>\n                    </Grid>\n\n                    <Grid item xs={12} sm={6} lg={6}>\n                      <InputLabel shrink htmlFor=\"mobile\">\n                        Mobile\n                      </InputLabel>\n                      <FormControl className={classes.margin}>\n                        <TextField\n                          InputProps={{ disableUnderline: true }}\n                          classes={{ root: classes.customTextField }}\n                          size=\"small\"\n                          placeholder=\"Enter Mobile\"\n                          id=\"mobile\"\n                          name=\"mobile\"\n                          defaultValue={profile.recruiter?.mobile}\n                          {...register(\"mobile\")}\n                          error={errors.mobile ? true : false}\n                        />\n\n                        <Typography variant=\"inherit\" color=\"error\">\n                          {errors.mobile?.message}\n                        </Typography>\n                      </FormControl>\n                    </Grid>\n\n                    <Grid item xs={12} sm={6} lg={6}>\n                      <InputLabel shrink htmlFor=\"companyName\">\n                        Company Name\n                      </InputLabel>\n                      <FormControl className={classes.margin}>\n                        <TextField\n                          InputProps={{ disableUnderline: true }}\n                          classes={{ root: classes.customTextField }}\n                          size=\"small\"\n                          placeholder=\"Enter Company Name\"\n                          id=\"companyName\"\n                          name=\"companyName\"\n                          defaultValue={profile.recruiter?.companyName}\n                          {...register(\"companyName\")}\n                          error={errors.companyName ? true : false}\n                        />\n\n                        <Typography variant=\"inherit\" color=\"error\">\n                          {errors.companyName?.message}\n                        </Typography>\n                      </FormControl>\n                    </Grid>\n\n                    <Grid item xs={12} sm={6} lg={6}>\n                      <InputLabel shrink htmlFor=\"employeeId\">\n                        Employee ID\n                      </InputLabel>\n                      <FormControl className={classes.margin}>\n                        <TextField\n                          InputProps={{ disableUnderline: true }}\n                          classes={{ root: classes.customTextField }}\n                          size=\"small\"\n                          placeholder=\"Enter Employee ID\"\n                          id=\"employeeId\"\n                          name=\"employeeId\"\n                          defaultValue={profile.recruiter?.employeeId}\n                          {...register(\"employeeId\")}\n                          error={errors.employeeId ? true : false}\n                        />\n\n                        <Typography variant=\"inherit\" color=\"error\">\n                          {errors.employeeId?.message}\n                        </Typography>\n                      </FormControl>\n                    </Grid>\n                  </Grid>\n                </CardContent>\n                <CardActions>\n                  <Grid\n                    container\n                    direction=\"row\"\n                    spacing={2}\n                    className={classes.drawerFooter}\n                  >\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      size=\"small\"\n                      type=\"submit\"\n                      disabled={isSubmitting}\n                    >\n                      Update\n                    </Button>\n\n                    <Button\n                      variant=\"contained\"\n                      size=\"small\"\n                      color=\"secondary\"\n                      onClick={toggleDrawer(anchor, false)}\n                    >\n                      Close\n                    </Button>\n                  </Grid>\n                </CardActions>\n              </form>\n            </Card>\n          </>\n        )}\n      </List>\n    </Box>\n  );\n\n  const User = (anchor) => (\n    <Box sx={{ width: \"100%\" }} role=\"presentation\">\n      <List>\n        <>\n          <AddUser\n            toggleDrawer={toggleDrawer}\n            handleSubmit={userSubmit}\n            handleAdd={handleAddUser}\n            setRoleName={setRoleName}\n            isSubmitting={userIsSubmitting}\n            errors={userErrors}\n            register={userRegister}\n          />\n        </>\n      </List>\n    </Box>\n  );\n\n  const Client = (anchor) => (\n    <Box sx={{ width: \"100%\" }} role=\"presentation\">\n      <List>\n        <>\n          <AddClient\n            isSubmitting={clientIsSubmitting}\n            handleAdd={handleAddClient}\n            handleSubmit={clientSubmit}\n            toggleDrawer={toggleDrawer}\n            recruiterChange={recruiterChange}\n            recruiterFields={recruiterFields}\n            errors={clientErrors}\n            register={clientRegister}\n            recruiterAdd={recruiterAdd}\n            recruiterRemove={recruiterRemove}\n          />\n        </>\n      </List>\n    </Box>\n  );\n\n  const Candidate = (anchor) => (\n    <Box sx={{ width: \"100%\" }} role=\"presentation\">\n      <List>\n        <>\n          <Add\n            setValidation={setValidation}\n            validation={validation}\n            handleAddList={handleAddList}\n            register={candidateRegister}\n            source={source}\n            recruitmentList={recruitmentList}\n            handleClose={handleClose}\n            errors={candidateErrors}\n            setLoader={setLoader}\n            toggleDrawer={toggleDrawer}\n            setRecruitmentList={setRecruitmentList}\n            requirementList={requirementList}\n            handleSubmit={candidateSubmit}\n            handleAdd={handleAddCandidate}\n            requirement={requirementName}\n            isSubmitting={candidateIsSubmitting}\n            open={open}\n            messageRef={messageRef}\n            reset={candidateReset}\n            setCandidate={setCandidate}\n            candidate={candidate}\n            setFile={setFile}\n            file={file}\n            setAssessment={setAssessment}\n            assessment={assessment}\n            setRecruitmentId={setRecruitmentId}\n            recruitmentId={recruitmentId}\n            days={days}\n            months={months}\n            years={years}\n            setDay={setDay}\n            setMonth={setMonth}\n            setYear={setYear}\n            setPhoneValidation={setPhoneValidation}\n            setHideContactDetails={setHideContactDetails}\n            hideContactDetails={hideContactDetails}\n            ExistCheck={ExistCheck}\n            requirementId={\"true\"}\n          />\n        </>\n      </List>\n    </Box>\n  );\n\n  const Requirements = (anchor) => (\n    <Box sx={{ width: \"100%\" }} role=\"presentation\">\n      <List>\n        <>\n          <AddRequirements\n            handleAdd={handleRequirementAdd}\n            setClientList={setClientList}\n            clientList={clientList}\n            handleChange={handleClientNameChange}\n            handleSubmit={requirementsSubmit}\n            toggleDrawer={toggleDrawer}\n            register={requirementsRegister}\n            errors={requirementsErrors}\n            isSubmitting={requirementsIsSubmitting}\n            recUser={recUser}\n            modeOfWork={modeofWork}\n            setModeofWork={setModeofWork}\n            specialHiring={specialHiring}\n            setSpecialHiring={setSpecialHiring}\n            hideFromInternal={hideFromInternal}\n            setHideFromInternal={setHideFromInternal}\n            handleUploadChange={handleUploadChange}\n            file={file}\n            setFile={setFile}\n            ContentRef={ContentRef}\n            requirement={requirementName}\n            setRequirementsOrgId={setRequirementsOrgId}\n          />\n        </>\n      </List>\n    </Box>\n  );\n\n  const Assign = (anchor) => (\n    <Box sx={{ width: \"100%\" }} role=\"presentation\">\n      <List>\n        <>\n          <AssignAdd\n            externalUser={externalUser}\n            toggleDrawer={toggleDrawer}\n            handleAssignRequirements={handleAssignRequirements}\n            assignSubmit={assignSubmit}\n            assignRequirement={assignRequirement}\n            assignErrors={assignErrors}\n            setRequirementId={setRequirementId}\n            handlerequirementChangePage={handlerequirementChangePage}\n            assigncount={assigncount}\n            assignPage={assignPage}\n            handleAssignStatus={handleAssignStatus}\n            requirementName={requirementName}\n            setRecruiterId={setRecruiterId}\n            assignIsSubmitting={assignIsSubmitting}\n            assignData={assignData}\n            assignCurrerntPage={assignCurrerntPage}\n            getAssigendRequirements={getAssigendRequirements}\n            recruiter={\"true\"}\n          />\n        </>\n      </List>\n    </Box>\n  );\n\n  return (\n    <>\n      <AppBar\n        position=\"fixed\"\n        className={\n          layoutState.isSidebarOpened ? classes.appBar1 : classes.appBar\n        }\n      >\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            color=\"inherit\"\n            onClick={() => toggleSidebar(layoutDispatch)}\n            className={classNames(\n              classes.headerMenuButtonSandwich,\n              classes.headerMenuButtonCollapse,\n            )}\n          >\n            {layoutState.isSidebarOpened ? (\n              // <ArrowBackIcon\n              //       classes={{\n              //         root: classNames(\n              //           classes.headerIcon,\n              //           classes.headerIconCollapse,\n              //         ),\n              //       }}\n              //     />\n\n              <MenuIcon\n                classes={{\n                  root: classNames(\n                    classes.headerIcon,\n                    classes.headerIconCollapse,\n                  ),\n                }}\n              />\n            ) : (\n              <MenuIcon\n                classes={{\n                  root: classNames(\n                    classes.headerIcon,\n                    classes.headerIconCollapse,\n                  ),\n                }}\n              />\n            )}\n          </IconButton>\n\n          <div\n            className={\n              layoutState.isSidebarOpened\n                ? classes.headerTopOpen\n                : classes.headerTop\n            }\n          >\n            <div\n              className={\n                layoutState.isSidebarOpened\n                  ? classes.headerWidth\n                  : classes.headerWidth1\n              }\n            >\n              <Typography variant=\"h5\" className={classes.title}>\n                <span className=\"refo-font\">refo</span>\n              </Typography>\n              <div className={classes.lgQuickButton}>\n                {decode.role !== \"SUPERADMIN\" ? (\n                  <Tooltip title=\"Quick Access\" placement=\"bottom\">\n                    <IconButton>\n                      <ArrowLeftIcon\n                        id={qaId}\n                        onClick={handleQAClick}\n                        className={classes.quickAccessArrow}\n                      />\n                      {/* {!isScrollOpen? <ArrowLeftIcon onClick={ ()=>{setIsScrollOpen(true)}} fontSize:\"30px\",background: \"blue\",color: \"#fff\",borderRadius: \"22px\"}}/>\n                    :<ArrowRightIcon onClick={ ()=>{setIsScrollOpen(false)}} style={{fontSize:\"30px\",background: \"blue\",color: \"#fff\",borderRadius: \"22px\"}}/>} */}\n                    </IconButton>\n                  </Tooltip>\n                ) : (\n                  <></>\n                )}\n              </div>\n\n              <div className={classes.smQuickHeaderButton}>\n                {decode.role !== \"SUPERADMIN\" ? (\n                  <Tooltip title=\"Quick Access\" placement=\"bottom\">\n                    <IconButton>\n                      <ArrowLeftIcon\n                        id={qaMobileId}\n                        onClick={handleQAMobileClick}\n                        className={classes.quickAccessArrow}\n                      />\n                      {/* {!isScrollOpen? <ArrowLeftIcon onClick={ ()=>{setIsScrollOpen(true)}} style={{fontSize:\"30px\",background: \"blue\",color: \"#fff\",borderRadius: \"22px\"}}/>\n                    :<ArrowRightIcon onClick={ ()=>{setIsScrollOpen(false)}} style={{fontSize:\"30px\",background: \"blue\",color: \"#fff\",borderRadius: \"22px\"}}/>} */}\n                    </IconButton>\n                  </Tooltip>\n                ) : (\n                  <></>\n                )}\n              </div>\n              {/* {\n                  isScrollOpen ?  */}\n              <Popper\n                id={qaId}\n                open={quickAccessOpen}\n                anchorEl={anchorEl2}\n                onClose={() => {\n                  setQuickAccessOpen(false);\n                }}\n                anchorReference=\"anchorPosition\"\n                anchorPosition={{ top: 0, left: 400 }}\n                anchorOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"right\",\n                }}\n                transformOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"right\",\n                }}\n                className={\n                  layoutState.isSidebarOpened\n                    ? classes.quickAccessPopoverOpen\n                    : classes.quickAccessPopover\n                }\n              >\n                <ClickAwayListener\n                  onClickAway={() => {\n                    setQuickAccessOpen(false);\n                  }}\n                >\n                  <div className={classes.lgQuickButton}>\n                    {decode.role === \"ADMIN\" ? (\n                      <>\n                        <div className={classes.quickAccessContainer}>\n                          <IconButton\n                            onClick={(e) => {\n                              setView(\"Client\");\n                              clientReset();\n                              setState({ ...state, right: true });\n                            }}\n                          >\n                            <img src={addClients} alt=\"img\" />\n                            <p>Add Clients</p>\n                          </IconButton>\n                        </div>\n                        <div className={classes.quickAccessContainer}>\n                          <IconButton\n                            onClick={(e) => {\n                              setView(\"User\");\n                              userReset();\n                              setState({ ...state, right: true });\n                            }}\n                          >\n                            <img src={addUsers} alt=\"img\" />\n                            <p>Add Users</p>\n                          </IconButton>\n                        </div>{\" \"}\n                      </>\n                    ) : (\n                      \"\"\n                    )}\n\n                    {decode.role === \"ADMIN\" ||\n                    decode.role === \"CLIENTCOORDINATOR\" ? (\n                      <div className={classes.quickAccessContainer}>\n                        <IconButton\n                          onClick={(e) => {\n                            setView(\"Requirement\");\n                            requirementsReset();\n                            setFile([]);\n                            setSpecialHiring(\"\");\n                            setState({ ...state, right: true });\n                          }}\n                        >\n                          <img src={addRequirements} alt=\"img\" />\n                          <p>Add Requirements</p>\n                        </IconButton>\n                      </div>\n                    ) : (\n                      \"\"\n                    )}\n\n                    {decode.role === \"ADMIN\" ? (\n                      <div className={classes.quickAccessContainer}>\n                        <IconButton\n                          onClick={(e) => {\n                            setView(\"Assign\");\n                            setAssignData([]);\n                            assignReset();\n                            setState({ ...state, right: true });\n                          }}\n                        >\n                          <img src={assignRequirements} alt=\"img\" />\n                          <p>Assign Requirements</p>\n                        </IconButton>\n                      </div>\n                    ) : (\n                      \"\"\n                    )}\n\n                    {decode.role !== \"SUPERADMIN\" ? (\n                      <div className={classes.quickAccessContainer}>\n                        <IconButton\n                          onClick={(e) => {\n                            setView(\"Candidate\");\n                            candidateReset();\n                            setFile([]);\n                            setAssessment([]);\n                            setState({ ...state, right: true });\n                          }}\n                        >\n                          <img src={addCandidates} alt=\"img\" />\n                          <p>Add Candidates</p>\n                        </IconButton>\n                      </div>\n                    ) : (\n                      \"\"\n                    )}\n\n                    {decode.role === \"ADMIN\" ? (\n                      <div className={classes.quickAccessContainer}>\n                        <IconButton\n                          onClick={(e) => {\n                            setInvitationOpen(true);\n                          }}\n                        >\n                          <img src={MSMEregistration} alt=\"img\" />\n                          <p>MSME Invitation</p>\n                        </IconButton>\n                      </div>\n                    ) : (\n                      \"\"\n                    )}\n\n                    {decode.role === \"ADMIN\" ? (\n                      <div className={classes.quickAccessContainer}>\n                        <IconButton\n                          onClick={(e) => {\n                            setIsShareCV(true);\n                          }}\n                        >\n                          <img src={shareCVImg} alt=\"img\" />\n                          <p>Share & CV Shortlist</p>\n                        </IconButton>\n                      </div>\n                    ) : (\n                      \"\"\n                    )}\n                  </div>\n                </ClickAwayListener>\n              </Popper>\n            </div>\n\n            <div className={classes.grow}>\n              {decode.role !== \"SUPERADMIN\" ? (\n                <div className={classes.SlgButton}>\n                  <SearchBar\n                    WalletValue={WalletValue}\n                    search={props.history?.location?.search}\n                  />\n                </div>\n              ) : (\n                \"\"\n              )}\n\n              {/* {decode.role === \"ADMIN\" ? (\n                <Tooltip\n                  title=\"Credit is one candidate added to a job\"\n                  placement=\"bottom\"\n                  PopperProps={{ style: { marginTop: -35 } }}\n                >\n                  <Badge\n                    onClick={(e) => {\n                      history.push(\"/app/plans\");\n                    }}\n                    overlap=\"circular\"\n                    max={999999999}\n                    badgeContent={\n                      WalletValue === 0 ? \"0 Credits\" : WalletValue + \" Credits\"\n                    }\n                    anchorOrigin={{\n                      vertical: \"top\",\n                      horizontal: \"left\",\n                    }}\n                    className={classes.wallet}\n                    color={WalletValue === 0 ? \"primary\" : \"secondary\"}\n                  >\n                    {WalletValue === 0 ? (\n                      <Avatar\n                        alt=\"Profile\"\n                        src={walletRed}\n                        className={classes.walletButton}\n                      />\n                    ) : (\n                      <Avatar\n                        alt=\"Profile\"\n                        src={walletBlue}\n                        className={classes.walletButton}\n                      />\n                    )}\n                  </Badge>\n                </Tooltip>\n              ) : decode.role === \"CLIENTCOORDINATOR\" &&\n                decode.role === \"RECRUITER\" ? (\n                <Tooltip\n                  title=\"Credit is one candidate added to a job\"\n                  placement=\"bottom\"\n                >\n                  <Badge\n                    overlap=\"circular\"\n                    max={999999999}\n                    badgeContent={\n                      WalletValue === 0 ? \"0 Credits\" : WalletValue + \" Credits\"\n                    }\n                    anchorOrigin={{\n                      vertical: \"top\",\n                      horizontal: \"left\",\n                    }}\n                    className={classes.wallet}\n                    color={WalletValue === 0 ? \"primary\" : \"secondary\"}\n                  >\n                    {WalletValue === 0 ? (\n                      <Avatar\n                        alt=\"Profile\"\n                        src={walletRed}\n                        className={classes.walletButton}\n                      />\n                    ) : (\n                      <Avatar\n                        alt=\"Profile\"\n                        src={walletBlue}\n                        className={classes.walletButton}\n                      />\n                    )}\n                  </Badge>\n                </Tooltip>\n              ) : (\n                \"\"\n              )} */}\n\n              <ClickAwayListener onClickAway={(e) => setProfileMenu(false)}>\n                <div>\n                  <IconButton\n                    aria-haspopup=\"true\"\n                    color=\"inherit\"\n                    className={classes.headerMenuButton}\n                    aria-controls=\"profile-menu\"\n                    onClick={(e) => setProfileMenu(e.currentTarget)}\n                  >\n                    <Avatar\n                      alt=\"Profile\"\n                      src={image}\n                      className={classes.profileButton}\n                    />\n                  </IconButton>\n\n                  {profileMenu ? (\n                    <div className={classes.dropdown}>\n                      {decode.role !== \"SUPERADMIN\" ? (\n                        <ListItem className={classes.profileHeader}>\n                          <ListItemAvatar>\n                            <Avatar\n                              alt={\n                                profile.recruiter?.firstName +\n                                \" \" +\n                                profile.recruiter?.lastName\n                              }\n                              sizes=\"medium\"\n                              src={image}\n                              className={classes.chipAvatar}\n                            />\n                          </ListItemAvatar>\n                          <ListItemText\n                            primary={\n                              <>\n                                {\" \"}\n                                <Typography>\n                                  {\" \"}\n                                  {profile.recruiter?.firstName +\n                                    \" \" +\n                                    profile.recruiter?.lastName}{\" \"}\n                                </Typography>\n                                <Typography>\n                                  {\" \"}\n                                  {profile.roleName}-\n                                  {profile.recruiter?.companyName}{\" \"}\n                                </Typography>\n                                <Typography> {profile.email} </Typography>\n                              </>\n                            }\n                          />\n                          {/* <ListItemSecondaryAction className={classes.closeBtn} onClick={() => signOut(userDispatch, props.history)}>\n                  \n                 <VscSignOut  className={classes.IconButton} />   \n \n                 </ListItemSecondaryAction> */}\n                        </ListItem>\n                      ) : (\n                        <ListItem className={classes.profileHeader}>\n                          <ListItemAvatar>\n                            <Avatar\n                              alt={\n                                profile.recruiter?.firstName +\n                                \" \" +\n                                profile.recruiter?.lastName\n                              }\n                              sizes=\"medium\"\n                              src={image}\n                              className={classes.chipAvatar}\n                            />\n                          </ListItemAvatar>\n                          <ListItemText\n                            primary={\n                              <>\n                                {\" \"}\n                                <Typography> SUPERADMIN </Typography>\n                                <Typography>\n                                  {\" \"}\n                                  {localStorage.getItem(\"email\")}{\" \"}\n                                </Typography>\n                              </>\n                            }\n                          />\n                          {/* <ListItemSecondaryAction  onClick={() => signOut(userDispatch, props.history)}>\n                \n                 \n\n                <VscSignOut className={classes.IconButton}    />   \n\n                </ListItemSecondaryAction> */}\n                        </ListItem>\n                      )}\n\n                      {decode.role === \"SUPERADMIN\" ? (\n                        <ListItem\n                          className={classes.profileMenuIcon}\n                          onClick={(e) => {\n                            history.push(\"/app/ticket\");\n                          }}\n                        >\n                          <ContactSupportIcon />\n                          Support\n                        </ListItem>\n                      ) : (\n                        \"\"\n                      )}\n                      {decode.role === \"ADMIN\" ? (\n                        <div>\n                          <ListItem\n                            className={classes.profileMenuIcon}\n                            onClick={(e) => {\n                              setView(\"Settings\");\n                              setState({ ...state, right: true });\n                            }}\n                          >\n                            <SettingsIcon /> Settings\n                          </ListItem>\n                          <ListItem\n                            className={classes.profileMenuIcon}\n                            onClick={(e) => {\n                              history.push(\"/app/ticket\");\n                            }}\n                          >\n                            <ContactSupportIcon />\n                            Support\n                          </ListItem>\n\n                          <ListItem\n                            className={classes.profileMenuIcon}\n                            onClick={(e) => {\n                              setView(\"Profile\");\n                              setState({ ...state, right: true });\n                            }}\n                          >\n                            <PermContactCalendarIcon /> Update Profile\n                          </ListItem>\n\n                          {/*   <ListItem   className={classes.profileMenuIcon} \n                  onClick={(e) => {    handleBackupOpen();\n                    setBackupView({  \n                      ...backupView,\n                      view:\"\",\n                      link:\"\"\n                     });  \n                  }}\n                >\n                  <CloudDownloadIcon /> Backup & Store\n                </ListItem>\n\n\n               <ListItem   className={classes.profileMenuIcon}   onClick={(e) => {  handleUploadOpen(); setFile([]); }}   >\n                  <CloudUploadIcon /> Restore Backup\n                </ListItem> */}\n\n                          <ListItem\n                            className={classes.profileMenuIcon}\n                            onClick={(e) => {\n                              handleExistingOpen();\n                              setFile([]);\n                            }}\n                          >\n                            <PublishIcon /> Upload Existing Candidates\n                          </ListItem>\n                        </div>\n                      ) : (\n                        \"\"\n                      )}\n\n                      <ListItem\n                        className={classes.profileMenuIcon}\n                        onClick={(e) => {\n                          setView(\"Change\");\n                          setState({ ...state, right: true });\n                        }}\n                      >\n                        <VpnKeyIcon /> Change Password\n                      </ListItem>\n\n                      <ListItem\n                        className={classes.profileMenuIcon}\n                        onClick={() => signOut(userDispatch, props.history)}\n                      >\n                        <ExitToAppIcon /> Logout\n                      </ListItem>\n                    </div>\n                  ) : null}\n                </div>\n              </ClickAwayListener>\n            </div>\n          </div>\n        </Toolbar>\n\n        <SwipeableDrawer\n          anchor=\"right\"\n          open={state[\"right\"]}\n          onClose={toggleDrawer(\"right\", false)}\n          onOpen={toggleDrawer(\"right\", true)}\n          classes={{\n            paper:\n              view === \"Client\" || view === \"Candidate\"\n                ? classes.clientDrawer\n                : classes.drawer,\n          }}\n        >\n          {view === \"Settings\" || view === \"Profile\" || view === \"Change\"\n            ? list(\"right\")\n            : view === \"User\"\n            ? User(\"right\")\n            : view === \"Client\"\n            ? Client(\"right\")\n            : view === \"Candidate\"\n            ? Candidate(\"right\")\n            : view === \"Requirement\"\n            ? Requirements(\"right\")\n            : view === \"Assign\"\n            ? Assign(\"right\")\n            : \"\"}\n        </SwipeableDrawer>\n      </AppBar>\n\n      {decode.role !== \"SUPERADMIN\" ? (\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <div className={classes.smQuickButton}>\n              <Popper\n                id={qaMobileId}\n                open={quickAccessMobileOpen}\n                anchorEl={anchorEl2}\n                onClose={() => {\n                  setQuickAccessMobileOpen(false);\n                }}\n                anchorPosition={{ top: 18, left: 400 }}\n                anchorOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"left\",\n                }}\n                transformOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"left\",\n                }}\n                className={classes.quickAccessMobilePopover}\n              >\n                <div className={classes.quickAccessMobile}>\n                  {decode.role === \"ADMIN\" ? (\n                    <>\n                      <div className={classes.quickAccessContainer}>\n                        <IconButton\n                          onClick={(e) => {\n                            setView(\"Client\");\n                            clientReset();\n                            setState({ ...state, right: true });\n                          }}\n                        >\n                          <img src={addClients} alt=\"img\" />\n                          <p>Add Clients</p>\n                        </IconButton>\n                      </div>\n                      <div className={classes.quickAccessContainer}>\n                        <IconButton\n                          onClick={(e) => {\n                            setView(\"User\");\n                            userReset();\n                            setState({ ...state, right: true });\n                          }}\n                        >\n                          <img src={addUsers} alt=\"img\" />\n                          <p>Add Users</p>\n                        </IconButton>\n                      </div>{\" \"}\n                    </>\n                  ) : (\n                    \"\"\n                  )}\n\n                  {decode.role === \"ADMIN\" ||\n                  decode.role === \"CLIENTCOORDINATOR\" ? (\n                    <div className={classes.quickAccessContainer}>\n                      <IconButton\n                        onClick={(e) => {\n                          setView(\"Requirement\");\n                          requirementsReset();\n                          setState({ ...state, right: true });\n                        }}\n                      >\n                        <img src={addRequirements} alt=\"img\" />\n                        <p>Add Requirements</p>\n                      </IconButton>\n                    </div>\n                  ) : (\n                    \"\"\n                  )}\n\n                  {decode.role === \"ADMIN\" ? (\n                    <div className={classes.quickAccessContainer}>\n                      <IconButton\n                        onClick={(e) => {\n                          setView(\"Assign\");\n                          setAssignData([]);\n                          assignReset();\n                          setState({ ...state, right: true });\n                        }}\n                      >\n                        <img src={assignRequirements} alt=\"img\" />\n                        <p>Assign Requirements</p>\n                      </IconButton>\n                    </div>\n                  ) : (\n                    \"\"\n                  )}\n\n                  <div className={classes.quickAccessContainer}>\n                    <IconButton\n                      onClick={(e) => {\n                        setView(\"Candidate\");\n                        candidateReset();\n                        setState({ ...state, right: true });\n                      }}\n                    >\n                      <img src={addCandidates} alt=\"img\" />\n                      <p>Add Candidates</p>\n                    </IconButton>\n                  </div>\n                  {decode.role === \"ADMIN\" ? (\n                    <div className={classes.quickAccessContainer}>\n                      <IconButton\n                        onClick={(e) => {\n                          setInvitationOpen(true);\n                        }}\n                      >\n                        <img src={MSMEregistration} alt=\"img\" />\n                        <p>MSME Registration</p>\n                      </IconButton>\n                    </div>\n                  ) : (\n                    \"\"\n                  )}\n\n                  {decode.role === \"ADMIN\" ? (\n                    <div className={classes.quickAccessContainer}>\n                      <IconButton\n                        onClick={(e) => {\n                          setIsShareCV(true);\n                        }}\n                      >\n                        <img src={shareCVImg} alt=\"img\" />\n                        <p>Share & CV Shortlist</p>\n                      </IconButton>\n                    </div>\n                  ) : (\n                    \"\"\n                  )}\n                </div>\n              </Popper>\n              <SearchBar\n                WalletValue={WalletValue}\n                search={props.history.location.search}\n              />\n            </div>\n          </Grid>\n        </Grid>\n      ) : (\n        \"\"\n      )}\n\n      {decode.role !== \"SUPERADMIN\" ? (\n        <Box className={classes.lgButton}>\n          <Fab\n            aria-label=\"add\"\n            size=\"medium\"\n            component=\"div\"\n            variant=\"circular\"\n            aria-describedby={poperId}\n            onClick={handlePoperClick}\n            color=\"primary\"\n            sx={{\n              borderRadius: 0,\n              borderTopLeftRadius: \"50%\",\n              borderBottomLeftRadius: \"50%\",\n              borderTopRightRadius: \"50%\",\n              borderBottomRightRadius: \"4px\",\n              top: \"88%\",\n              position: \"fixed\",\n              right: 10,\n              zIndex: 99999,\n            }}\n          >\n            <InfoIcon />\n          </Fab>\n        </Box>\n      ) : (\n        \"\"\n      )}\n\n      <Popover\n        aria-describedby={poperId}\n        open={popperOpen}\n        onClose={() => {\n          setPopperOpen(false);\n        }}\n        anchorEl={anchorEl}\n        sx={{ top: \"80%\" }}\n        anchorPosition={{ top: 225, right: 10, left: 0 }}\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"left\",\n        }}\n        transformOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"right\",\n        }}\n      >\n        <Box>\n          <Card sx={{ maxWidth: 250 }}>\n            <CardHeader>\n              <Box className={classes.chipMessageBox}>\n                <Chip\n                  variant=\"outlined\"\n                  className={classes.chipMessage}\n                  label={\n                    <>\n                      <Typography>\n                        <span className={classes.colorWhite}>\n                          {decode.role === \"SUPERADMIN\"\n                            ? \"SUPERADMIN\"\n                            : profile.recruiter?.firstName +\n                              \" \" +\n                              profile.recruiter?.lastName}\n                        </span>\n                      </Typography>\n                    </>\n                  }\n                  avatar={\n                    <Avatar\n                      alt={\n                        profile.recruiter?.firstName +\n                        \" \" +\n                        profile.recruiter?.lastName\n                      }\n                      sizes=\"medium\"\n                      src={image}\n                      className={classes.chipMessageAvatar}\n                    />\n                  }\n                ></Chip>\n              </Box>\n            </CardHeader>\n            <CardContent>\n              <Typography variant=\"body2\" className={classes.chipMessageText}>\n                REFO is available in mobile browser use after candidate upload\n                is super easy experience!\n              </Typography>\n              <Typography variant=\"body2\" className={classes.chipMessageText}>\n                Do every other task using your mobile browser.\n              </Typography>\n              <div className={classes.flexCenter}>\n                <Button\n                  endIcon={<WhatsAppIcon />}\n                  variant=\"contained\"\n                  size=\"small\"\n                  className={classes.whatsappSend}\n                  onClick={(e) => {\n                    window.open(\n                      \"https://api.whatsapp.com/send?phone=+91\" +\n                        localStorage.getItem(\"mobile\") +\n                        \"&text=REFO is available in mobile browser so after candidate upload is super easy experience! \\n Do every other task using your mobile browser. - https://refo.app/\",\n                    );\n                  }}\n                >\n                  Send to\n                </Button>\n              </div>\n            </CardContent>\n          </Card>\n        </Box>\n      </Popover>\n\n      <Dialog\n        onClose={handleBackupClose}\n        aria-labelledby=\"dialog-title\"\n        open={backupOpen}\n        width=\"md\"\n        maxWidth=\"md\"\n        PaperProps={{\n          style: {\n            maxWidth: \"520px\",\n          },\n        }}\n      >\n        <DialogTitle className={classes.digTitle}>\n          <div className={classes.center}>\n            <Typography\n              variant=\"subtitle2\"\n              className={classes.digColor + \" \" + classes.digCenter}\n            >\n              {\" \"}\n              Backup and Store{\" \"}\n            </Typography>\n            <div className={classes.drawerClose}>\n              <CloseIcon\n                className={classes.digClose}\n                size=\"14px\"\n                onClick={handleBackupClose}\n              />\n            </div>\n          </div>\n        </DialogTitle>\n\n        <DialogContent className={classes.chatListBackGround}>\n          <div className={classes.sendBackUp}>\n            <div className={classes.sendBackUpContainer}>\n              <Button\n                startIcon={\n                  <>\n                    <SwapVertIcon />\n                    <CloudQueueIcon />{\" \"}\n                  </>\n                }\n                variant=\"contained\"\n                size=\"small\"\n                className={classes.storeLocal}\n                onClick={(e) => {\n                  handleconfirmOpen();\n                  setView(\"BackUpOnly\");\n                }}\n              >\n                Backup the data and store in local system\n              </Button>\n\n              <Button\n                variant=\"contained\"\n                startIcon={\n                  <>\n                    <SwapVertIcon />\n                    <CloudOffIcon />\n                  </>\n                }\n                className={classes.removeCloud}\n                size=\"small\"\n                onClick={(e) => {\n                  handleconfirmOpen();\n                  setView(\"BackUpDelete\");\n                }}\n              >\n                Backup the data and remove in REFO Cloud\n              </Button>\n            </div>\n          </div>\n        </DialogContent>\n      </Dialog>\n\n      <Dialog\n        onClose={handleconfirmClose}\n        aria-labelledby=\"dialog-title\"\n        open={confirmOpen}\n        width=\"md\"\n        PaperProps={{\n          style: {\n            width: \"100%\",\n          },\n        }}\n      >\n        <DialogTitle className={classes.digTitle}>\n          <div className={classes.center}>\n            <Typography\n              variant=\"subtitle2\"\n              className={classes.digColor + \" \" + classes.digCenter}\n            >\n              Confirmation\n            </Typography>\n            <div className={classes.drawerClose}>\n              <CloseIcon\n                className={classes.digClose}\n                size=\"14px\"\n                onClick={handleconfirmClose}\n              />\n            </div>\n          </div>\n        </DialogTitle>\n\n        <DialogContent>\n          <Typography variant=\"subtitle2\" className={classes.center}>\n            {view === \"BackUpOnly\"\n              ? \"Are you sure want to backup the data and store in local system?\"\n              : view === \"BackUpDelete\"\n              ? \"Are you sure want to backup the data and remove in REFO cloud?\"\n              : \"The data has been loaded. Please click on the download button.\"}\n          </Typography>\n\n          <div className={classes.sendWhatsapp}>\n            <>\n              {view === \"BackUpOnly\" ? (\n                <>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"small\"\n                    onClick={(e) => {\n                      handleBackupOnly(\"Download\");\n                    }}\n                  >\n                    {\" \"}\n                    Yes{\" \"}\n                  </Button>\n                  <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    size=\"small\"\n                    onClick={handleconfirmClose}\n                  >\n                    {\" \"}\n                    No{\" \"}\n                  </Button>\n                </>\n              ) : view === \"BackUpDelete\" ? (\n                <>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"small\"\n                    onClick={(e) => {\n                      handleBackupOnly(\"Delete\");\n                    }}\n                  >\n                    {\" \"}\n                    Yes{\" \"}\n                  </Button>\n\n                  <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    size=\"small\"\n                    onClick={handleconfirmClose}\n                  >\n                    {\" \"}\n                    No{\" \"}\n                  </Button>\n                </>\n              ) : (\n                \"\"\n              )}\n\n              {backupView.view === \"Download\" ? (\n                <>\n                  <Grid className={classes.flexCenter}>\n                    <a\n                      className={classes.a + \" \" + classes.buttonBtn}\n                      href={`${process.env.REACT_APP_URL}` + backupView.link}\n                      onClick={(e) => {\n                        handleNotificationCall(\n                          \"success\",\n                          \"Data is downloaded Successfully\",\n                        );\n                      }}\n                      download\n                    >\n                      <CloudDownloadIcon /> Download\n                    </a>\n                  </Grid>\n\n                  <Button\n                    variant=\"contained\"\n                    size=\"small\"\n                    color=\"secondary\"\n                    onClick={handleconfirmClose}\n                  >\n                    {\" \"}\n                    Close{\" \"}\n                  </Button>\n                </>\n              ) : (\n                \"\"\n              )}\n\n              {backupView.view === \"Delete\" ? (\n                <>\n                  <Grid className={classes.flexCenter}>\n                    <a\n                      className={classes.a + \" \" + classes.buttonBtn}\n                      href={`${process.env.REACT_APP_URL}` + backupView.link}\n                      download\n                      onClick={(e) => {\n                        handleDeleteOpen();\n                      }}\n                    >\n                      {\" \"}\n                      <CloudDownloadIcon /> Download\n                    </a>\n                  </Grid>\n                  <Button\n                    variant=\"contained\"\n                    size=\"small\"\n                    color=\"secondary\"\n                    onClick={handleconfirmClose}\n                  >\n                    {\" \"}\n                    Close{\" \"}\n                  </Button>\n                </>\n              ) : (\n                \"\"\n              )}\n            </>\n          </div>\n        </DialogContent>\n      </Dialog>\n\n      <Dialog\n        onClose={handleDeleteClose}\n        aria-labelledby=\"dialog-title\"\n        open={deleteOpen}\n        width=\"md\"\n        PaperProps={{\n          style: {\n            width: \"100%\",\n          },\n        }}\n      >\n        <DialogTitle className={classes.digTitle}>\n          <div className={classes.center}>\n            <Typography\n              variant=\"subtitle2\"\n              className={classes.digColor + \" \" + classes.digCenter}\n            >\n              Confirmation\n            </Typography>\n            <div className={classes.drawerClose}>\n              <CloseIcon\n                className={classes.digClose}\n                size=\"14px\"\n                onClick={handleDeleteClose}\n              />\n            </div>\n          </div>\n        </DialogTitle>\n        <DialogContent>\n          <Typography variant=\"subtitle2\" className={classes.center}>\n            Are you sure want to delete the data permanently from REFO cloud.\n            Please note that once deleted, the data cannot be restored?\n          </Typography>\n\n          <Typography\n            variant=\"body1\"\n            className={classes.center + \" \" + classes.colorRed}\n          >\n            {\" \"}\n            In order to permanently delete the data, please type 'DELETE' in\n            capital letter. Then click on \"CONFIRM\" to proceed.\n          </Typography>\n\n          <Grid className={classes.center + \" \" + classes.ptb025}>\n            <TextField\n              required\n              name=\"delete\"\n              placeholder=\"DELETE\"\n              InputLabelProps={{ shrink: true }}\n              defaultValue={deleteValue}\n              onChange={(e) => {\n                setDeleteValue(e.target.value);\n              }}\n              inputRef={deleteRef}\n            />\n          </Grid>\n          <Grid className={classes.sendWhatsapp}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              size=\"small\"\n              onClick={(e) => {\n                handleBackupDelete();\n              }}\n            >\n              Confirm\n            </Button>\n\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              color=\"secondary\"\n              onClick={handleDeleteClose}\n            >\n              Close\n            </Button>\n          </Grid>\n        </DialogContent>\n      </Dialog>\n\n      <Dialog\n        onClose={handleUploadClose}\n        aria-labelledby=\"dialog-title\"\n        open={uploadOpen}\n        width=\"md\"\n        PaperProps={{\n          style: {\n            width: \"100%\",\n          },\n        }}\n      >\n        <DialogTitle className={classes.digTitle}>\n          <div className={classes.center}>\n            <Typography\n              variant=\"subtitle2\"\n              className={classes.digColor + \" \" + classes.digCenter}\n            >\n              Confirmation\n            </Typography>\n            <div className={classes.drawerClose}>\n              <CloseIcon\n                className={classes.digClose}\n                size=\"14px\"\n                onClick={handleUploadClose}\n              />\n            </div>\n          </div>\n        </DialogTitle>\n        <DialogContent>\n          <Typography variant=\"subtitle2\" className={classes.center}>\n            {\" \"}\n            Restore the data that was downloaded earlier{\" \"}\n          </Typography>\n\n          <div className={classes.root + \" \" + classes.center}>\n            <input\n              accept=\".zip,.rar,.7zip\"\n              className={classes.input}\n              id=\"icon-button-zip\"\n              type=\"file\"\n              style={{ display: \"none\" }}\n              onChange={(e) => {\n                setFile(e.target.files[0]);\n              }}\n            />\n            <label htmlFor=\"icon-button-zip\">\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.button}\n                startIcon={<CloudUploadIcon />}\n                aria-label=\"upload Backup\"\n                component=\"span\"\n              >\n                Upload Backup\n              </Button>\n            </label>\n          </div>\n          <div className={classes.center + \" \" + classes.button}>\n            <Typography variant=\"inherit\" className={classes.lineBreak}>\n              {\" \"}\n              {file?.name}{\" \"}\n            </Typography>\n\n            {file?.name ? (\n              <Tooltip title=\"Delete\" placement=\"bottom\">\n                <DeleteIcon\n                  color=\"secondary\"\n                  className={classes.closeBtn}\n                  onClick={(e) => {\n                    setFile([]);\n                  }}\n                />\n              </Tooltip>\n            ) : (\n              \"\"\n            )}\n          </div>\n\n          <Grid className={classes.sendWhatsapp}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              size=\"small\"\n              onClick={(e) => {\n                handleUploadConfirm();\n              }}\n            >\n              Submit\n            </Button>\n\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              color=\"secondary\"\n              onClick={handleUploadClose}\n            >\n              Close\n            </Button>\n          </Grid>\n        </DialogContent>\n      </Dialog>\n\n      <Dialog\n        onClose={handleUploadConfirmClose}\n        aria-labelledby=\"dialog-title\"\n        open={uploadConfirmOpen}\n        width=\"md\"\n        PaperProps={{\n          style: {\n            width: \"100%\",\n          },\n        }}\n      >\n        <DialogTitle className={classes.digTitle}>\n          <div className={classes.center}>\n            <Typography\n              variant=\"subtitle2\"\n              className={classes.digColor + \" \" + classes.digCenter}\n            >\n              Confirmation\n            </Typography>\n            <div className={classes.drawerClose}>\n              <CloseIcon\n                className={classes.digClose}\n                size=\"14px\"\n                onClick={handleUploadConfirmClose}\n              />\n            </div>\n          </div>\n        </DialogTitle>\n        <DialogContent>\n          <Typography variant=\"subtitle2\" className={classes.center}>\n            {\" \"}\n            Are you sure?{\" \"}\n          </Typography>\n\n          <Grid className={classes.sendWhatsapp}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              size=\"small\"\n              onClick={(e) => {\n                handleUpload();\n              }}\n            >\n              Yes\n            </Button>\n\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              color=\"secondary\"\n              onClick={handleUploadConfirmClose}\n            >\n              No\n            </Button>\n          </Grid>\n        </DialogContent>\n      </Dialog>\n\n      <Dialog\n        onClose={handleExistingClose}\n        aria-labelledby=\"dialog-title\"\n        open={existingOpen}\n        width=\"md\"\n        maxWidth=\"md\"\n        PaperProps={{ style: { width: \"100%\" } }}\n      >\n        <DialogTitle className={classes.digTitle}>\n          <div className={classes.center}>\n            <Typography\n              variant=\"subtitle2\"\n              className={classes.digColor + \" \" + classes.digCenter}\n            >\n              Upload existing candidates\n            </Typography>\n            <div className={classes.drawerClose}>\n              <CloseIcon\n                className={classes.digClose}\n                size=\"14px\"\n                onClick={handleExistingClose}\n              />\n            </div>\n          </div>\n        </DialogTitle>\n        <DialogContent>\n          <Grid className={classes.center}>\n            <a href={sample_candidates} className={classes.aLink} download>\n              {\" \"}\n              Sample excel format to upload your data (Only then Vendor /\n              Freelancer can check duplicate){\" \"}\n            </a>\n          </Grid>\n\n          <Grid className={classes.filterGap + \" \" + classes.center}>\n            <input\n              accept=\".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\n              className={classes.input}\n              id=\"icon-button-csv\"\n              type=\"file\"\n              style={{ display: \"none\" }}\n              onChange={(e) => {\n                setFile(e.target.files[0]);\n              }}\n            />\n            <label htmlFor=\"icon-button-csv\">\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.button}\n                startIcon={<CloudUploadIcon />}\n                aria-label=\"upload Backup\"\n                component=\"span\"\n              >\n                Upload Excel\n              </Button>\n            </label>\n          </Grid>\n          <Grid className={classes.center + \" \" + classes.button}>\n            <Typography variant=\"inherit\" className={classes.lineBreak}>\n              {\" \"}\n              {file?.name}{\" \"}\n            </Typography>\n          </Grid>\n\n          <Grid className={classes.sendWhatsapp}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              size=\"small\"\n              onClick={(e) => {\n                handleExistingConfirm();\n              }}\n            >\n              Submit\n            </Button>\n\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              color=\"secondary\"\n              onClick={handleExistingClose}\n            >\n              Close\n            </Button>\n          </Grid>\n        </DialogContent>\n      </Dialog>\n\n      <Dialog\n        onClose={handleExistingConfirmClose}\n        aria-labelledby=\"dialog-title\"\n        open={existingConfirmOpen}\n        width=\"md\"\n        PaperProps={{\n          style: {\n            width: \"100%\",\n          },\n        }}\n      >\n        <DialogTitle className={classes.digTitle}>\n          <div className={classes.center}>\n            <Typography\n              variant=\"subtitle2\"\n              className={classes.digColor + \" \" + classes.digCenter}\n            >\n              Confirmation\n            </Typography>\n            <div className={classes.drawerClose}>\n              <CloseIcon\n                className={classes.digClose}\n                size=\"14px\"\n                onClick={handleExistingConfirmClose}\n              />\n            </div>\n          </div>\n        </DialogTitle>\n        <DialogContent>\n          <Typography variant=\"subtitle2\" className={classes.center}>\n            {\" \"}\n            Are you sure?{\" \"}\n          </Typography>\n\n          <Grid className={classes.sendWhatsapp}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              size=\"small\"\n              onClick={(e) => {\n                handleExistingUpload();\n              }}\n            >\n              Yes\n            </Button>\n\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              color=\"secondary\"\n              onClick={handleExistingConfirmClose}\n            >\n              No\n            </Button>\n          </Grid>\n        </DialogContent>\n      </Dialog>\n\n      <Dialog\n        aria-labelledby=\"dialog-title\"\n        width=\"md\"\n        open={invitationOpen}\n        onClose={handleInvitationClose}\n        PaperProps={{\n          style: {\n            width: \"100%\",\n          },\n        }}\n      >\n        <DialogTitle className={classes.digTitle}>\n          <div className={classes.center}>\n            <Typography\n              variant=\"subtitle2\"\n              className={classes.digColor + \" \" + classes.digCenter}\n            >\n              Invite MSME\n            </Typography>\n\n            <div className={classes.drawerClose}>\n              <CloseIcon\n                className={classes.digClose}\n                onClick={handleInvitationClose}\n                size=\"14px\"\n              />\n            </div>\n          </div>\n        </DialogTitle>\n\n        <DialogContent className={classes.chatListBackGround}>\n          <form onSubmit={inviteSubmit(inviteMSME)}>\n            <Grid item xs={12}>\n              <InputLabel shrink htmlFor=\"email\">\n                Enter Email\n              </InputLabel>\n              <FormControl className={classes.margin}>\n                <TextField\n                  classes={{ root: classes.customTextField }}\n                  InputProps={{ disableUnderline: true }}\n                  size=\"small\"\n                  placeholder=\"Enter Email ID\"\n                  id=\"email\"\n                  {...invite(\"email\")}\n                  name=\"email\"\n                  error={inviteErrors.email ? true : false}\n                />\n\n                <Typography variant=\"inherit\" color=\"error\">\n                  {inviteErrors.email?.message}\n                </Typography>\n              </FormControl>\n            </Grid>\n            <div className={classes.sendWhatsapp}>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                size=\"small\"\n                type=\"submit\"\n                disabled={inviteIsSubmitting}\n              >\n                Invite\n              </Button>\n\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                size=\"small\"\n                startIcon={<FileCopyIcon />}\n                onClick={(e) => {\n                  handleCopy();\n                }}\n              >\n                Copy URL\n              </Button>\n\n              <Button\n                variant=\"contained\"\n                size=\"small\"\n                onClick={handleInvitationClose}\n              >\n                Close\n              </Button>\n            </div>\n          </form>\n        </DialogContent>\n      </Dialog>\n\n      <Dialog\n        aria-labelledby=\"dialog-title\"\n        width=\"md\"\n        open={isShareCV}\n        onClose={handleShareCVClose}\n        PaperProps={{\n          style: {\n            width: \"100%\",\n          },\n        }}\n      >\n        <DialogTitle className={classes.digTitle}>\n          <div className={classes.center}>\n            <Typography\n              variant=\"subtitle2\"\n              className={classes.digColor + \" \" + classes.digCenter}\n            >\n              Share & CV Shortlist\n            </Typography>\n\n            <div className={classes.drawerClose}>\n              <CloseIcon\n                className={classes.digClose}\n                onClick={handleShareCVClose}\n                size=\"14px\"\n              />\n            </div>\n          </div>\n        </DialogTitle>\n\n        <DialogContent className={classes.chatListBackGround}>\n          <form onSubmit={shareCVSubmit(shareCVShortList)}>\n            <div className={classes.shareCVContainer}>\n              <Grid item xs={12} spacing={2}>\n                <FormControl className={classes.margin}>\n                  <InputLabel shrink htmlFor=\"requirementId\">\n                    {\" \"}\n                    Requirement Name{\" \"}\n                  </InputLabel>\n                  <Autocomplete\n                    // className={classes.AutocompleteFullWidth}\n                    options={requirementName}\n                    name=\"requirementId\"\n                    disableClearable\n                    error={shareCVErrors.requirementId ? true : false}\n                    {...shareCV(\"requirementId\")}\n                    getOptionLabel={(option) =>\n                      option.requirementName + \" (\" + option.uniqueId + \")\"\n                    }\n                    onChange={(event, value) => {\n                      setRequirementId(value);\n                      getLink(value.id);\n                    }}\n                    renderInput={(params) => (\n                      <TextField\n                        {...params}\n                        name=\"requirementId\"\n                        variant=\"filled\"\n                      />\n                    )}\n                  />\n                  <Typography variant=\"inherit\" color=\"error\">\n                    {shareCVErrors.requirementId?.message}\n                  </Typography>\n                </FormControl>\n              </Grid>\n\n              <Grid item xs={12}>\n                <InputLabel shrink htmlFor=\"email\">\n                  Enter Email\n                </InputLabel>\n                <FormControl className={classes.margin}>\n                  <TextField\n                    classes={{ root: classes.customTextField }}\n                    InputProps={{ disableUnderline: true }}\n                    size=\"small\"\n                    placeholder=\"Enter Email ID\"\n                    id=\"email\"\n                    {...shareCV(\"email\")}\n                    name=\"email\"\n                    error={shareCVErrors.email ? true : false}\n                  />\n\n                  <Typography variant=\"inherit\" color=\"error\">\n                    {shareCVErrors.email?.message}\n                  </Typography>\n                </FormControl>\n              </Grid>\n              <Grid item xs={12}>\n                <InputLabel shrink htmlFor=\"mobile\">\n                  Mobile\n                </InputLabel>\n                <FormControl className={classes.margin}>\n                  <TextField\n                    InputProps={{ disableUnderline: true }}\n                    classes={{ root: classes.customTextField }}\n                    size=\"small\"\n                    placeholder=\"Enter Mobile\"\n                    id=\"mobile\"\n                    name=\"mobile\"\n                    {...shareCV(\"mobile\")}\n                    error={shareCVErrors.mobile ? true : false}\n                  />\n\n                  <Typography variant=\"inherit\" color=\"error\">\n                    {shareCVErrors.mobile?.message}\n                  </Typography>\n                </FormControl>\n              </Grid>\n            </div>\n            <div className={classes.sendWhatsapp}>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                size=\"small\"\n                type=\"submit\"\n                disabled={shareCVIsSubmitting}\n              >\n                Share\n              </Button>\n\n              {cvLink !== \"\" ? (\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  size=\"small\"\n                  startIcon={<FileCopyIcon />}\n                  onClick={(e) => {\n                    handleCvLinkCopy(cvLink);\n                  }}\n                >\n                  Copy URL\n                </Button>\n              ) : (\n                \"\"\n              )}\n\n              <Button\n                variant=\"contained\"\n                size=\"small\"\n                onClick={handleShareCVClose}\n              >\n                Close\n              </Button>\n            </div>\n          </form>\n        </DialogContent>\n      </Dialog>\n\n      <Backdrop className={classes.backdrop} open={loader}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n    </>\n  );\n}\n","D:\\RecruiterCommunity\\refo-Front\\src\\components\\Admin\\SearchStatus.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\share\\Sidebar\\styles.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\share\\Sidebar\\Sidebar.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\components\\Candidates\\Search.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\share\\Sidebar\\components\\SidebarLink\\SidebarLink.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\share\\Sidebar\\components\\Dot.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\share\\Sidebar\\components\\SidebarLink\\styles.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\resumeSearch\\ResumeSearch.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\resumeSearch\\Resume.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\resumeSearch\\mock.js",[],["1300","1301"],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\matchedResume\\MatchedResumes.js",["1302","1303","1304"],"import React, { useEffect, useRef, useState, useReducer } from \"react\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Tooltip,\r\n  Fab\r\n} from \"@material-ui/core\";\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport axios from \"axios\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport Notification from \"../../components/Notification\";\r\nimport Lottie from 'lottie-react';\r\nimport animation from '../../images/animation-upload.json';\r\nimport useStyles from \"../../themes/style.js\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport jdSearchImage from '../../images/jd-search.png'\r\nimport ResumeLinearProgress from \"./ResumeLinearProgress.js\";\r\n\r\nconst positions = [toast.POSITION.TOP_RIGHT];\r\nexport default function MatchedResumes() {\r\n  var theme = useTheme();\r\n  const mobileQuery = useMediaQuery(\"(max-width:600px)\");\r\n  const classes = useStyles();\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  const [loader, setLoader] = useState(false);\r\n  const [candidateResume, setCandidateResume] = useState([]);\r\n  const [downloadResume, setDownloadResume] = useState(\"\");\r\n  const [showResume, setShowResume] = useState(false);\r\n\r\n\r\n  var [errorToastId, setErrorToastId] = useState(null);\r\n\r\n  function sendNotification(componentProps, options) {\r\n    return toast(\r\n      <Notification\r\n        {...componentProps}\r\n        className={classes.notificationComponent}\r\n      />,\r\n      options,\r\n    );\r\n  }\r\n\r\n  function handleNotificationCall(notificationType, message) {\r\n    var componentProps;\r\n\r\n    if (errorToastId && notificationType === \"error\") return;\r\n\r\n    switch (notificationType) {\r\n      case \"info\":\r\n        componentProps = {\r\n          type: \"feedback\",\r\n          message: message,\r\n          variant: \"contained\",\r\n          color: \"primary\",\r\n        };\r\n        break;\r\n      case \"error\":\r\n        componentProps = {\r\n          type: \"message\",\r\n          message: message,\r\n          variant: \"contained\",\r\n          color: \"secondary\",\r\n        };\r\n        break;\r\n      default:\r\n        componentProps = {\r\n          type: \"shipped\",\r\n          message: message,\r\n          variant: \"contained\",\r\n          color: \"success\",\r\n        };\r\n    }\r\n\r\n    var toastId = sendNotification(componentProps, {\r\n      type: notificationType,\r\n      position: positions[2],\r\n      progressClassName: classes.progress,\r\n      onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\r\n      className: classes.notification,\r\n    });\r\n\r\n    if (notificationType === \"error\") setErrorToastId(toastId);\r\n  }\r\n\r\n  const fileInputRef = useRef(null);\r\n  const iframeRef = useRef(null);\r\n  const [rotation, setRotation] = useState(0);\r\n\r\n  const refreshIframe = () =>{\r\n    setRotation(rotation + 360);\r\n    iframeRef.current.src = \"https://docs.google.com/a/umd.edu/viewer?url=\"+process.env.REACT_APP_URL+downloadResume+\"&embedded=true\";\r\n  }\r\n\r\n  const handleButtonClick = () => {\r\n    if (fileInputRef.current) {\r\n      fileInputRef.current.click();\r\n    }\r\n  };\r\n\r\n  const handleFileChange = (event) => {\r\n    if (event.target && event.target.files[0]?.size <= 5000000) {\r\n      setLoader(true);\r\n      const files = event.target.files[0];\r\n      var FormData = require(\"form-data\");\r\n      var form_data = new FormData();\r\n      form_data.append(\"job_description\", files);\r\n\r\n      axios({\r\n        method: \"post\",\r\n        url: `${process.env.REACT_APP_SERVER}AI/jdMatcher`,\r\n        data: form_data,\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n          Authorization: token,\r\n        },\r\n      })\r\n        .then((response) => {\r\n          if (response.data.status === true) {\r\n            setCandidateResume(response.data.data);\r\n            setDownloadResume(response.data.fileUrl);\r\n            setShowResume(true);\r\n            handleNotificationCall(\"success\", response.data.message);\r\n          } else {\r\n            handleNotificationCall(\"error\", response.data.message);\r\n          }\r\n\r\n          setLoader(false);\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n    } else {\r\n      handleNotificationCall(\"error\", \"Maximum File Size Limit 5mb\");\r\n    }\r\n  };\r\n\r\n  const hanldeIframeLoad = ()=>{\r\n    return(\r\n      <h5>loading... please wait</h5>\r\n    )\r\n  }\r\n\r\n  const table_options = {\r\n    textLabels: {\r\n      body: {\r\n        noMatch: \"Oops! Matching record could not be found\",\r\n      },\r\n    },\r\n    pagination: false,\r\n    sort: false,\r\n    selectableRows: \"none\",\r\n    filter: false,\r\n    print: false,\r\n    download: false,\r\n    responsive: mobileQuery === true ? \"vertical\" : \"standard\",\r\n    onFilterChange: (changedColumn, filterList) => {},\r\n    filterType: \"dropdown\",\r\n    search: false,\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <Grid container direction=\"row\" spacing={2} className={classes.heading}>\r\n        <Grid item xs={7}>\r\n          <PageTitle title=\"Match Job Description\" />\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {!showResume  ? (\r\n        <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\">\r\n          <Grid item xs={12} lg={3} xl={3}></Grid>\r\n          <Grid item xs={12} lg={6} xl={6}\r\n            className={classes.resumeUploadParent}\r\n          >\r\n          {!loader && (\r\n            <div className={classes.resumeUploadContainer}>\r\n              <img src={jdSearchImage} alt=\"jd-matched-resumes\" width='100%'  className={classes.uploadBtnImage} />\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleButtonClick}\r\n              >\r\n                Upload Job Description\r\n              </Button>\r\n            </div>\r\n          )}\r\n            <input\r\n              type=\"file\"\r\n              ref={fileInputRef}\r\n              style={{ display: \"none\" }}\r\n              onChange={(event) => {\r\n                handleFileChange(event);\r\n              }}\r\n              accept=\"application/pdf, application/msword, application/vnd.openxmlformats-officedocument.wordprocessingml.document\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} lg={3} xl={3}></Grid>\r\n        </Grid>\r\n      ) : (\r\n        <>\r\n          <Grid container spacing={2}>\r\n          <Grid item xs={12} lg={3} xl={3}></Grid>\r\n          <Grid item xs={12} lg={6} xl={6}>\r\n           <iframe ref={iframeRef} onLoad={hanldeIframeLoad} className=\"iframe\" src={\"https://docs.google.com/a/umd.edu/viewer?url=\" + process.env.REACT_APP_URL+downloadResume+ \"&embedded=true\"  }  title=\"File\"  width=\"100%\" style={{height:'70vh', position:'relative'}}> </iframe>\r\n           <Tooltip\r\n            title=\"Refresh\"\r\n            placement=\"bottom\"\r\n            aria-label=\"view\"\r\n          >\r\n            <Fab\r\n              size=\"small\"\r\n              color=\"primary\"\r\n              aria-label=\"add\"\r\n              className={classes.margin}\r\n              style={{position:'absolute',zIndex:1,}}\r\n              onClick={refreshIframe}\r\n            >\r\n              <RefreshIcon  style={{ transform: `rotate(${rotation}deg)`,transition: 'transform 2s' }} />\r\n            </Fab>\r\n          </Tooltip>\r\n          </Grid>\r\n          <Grid item xs={12} lg={3} xl={3}></Grid>\r\n          </Grid>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <MUIDataTable\r\n                title=\"\"\r\n                options={table_options}\r\n                columns={[\r\n                  {\r\n                    name: \"S.No\",\r\n                  },\r\n                  {\r\n                    name: \"file Name\",\r\n                  },\r\n                  {\r\n                    name: \"percentage\",\r\n                  },\r\n                ]}\r\n                data={candidateResume?.map((item, index) => {\r\n                  return [\r\n                    index + 1,\r\n                    item.originalName,\r\n                    <>\r\n                      <ResumeLinearProgress percentage={item?.percentage} />\r\n                    </>,\r\n                  ];\r\n                })}\r\n              />\r\n\r\n            </Grid>\r\n          </Grid>\r\n        </>\r\n      )}\r\n\r\n      {loader && (\r\n        <div className={classes.backdrop}>\r\n            <Lottie animationData={animation} loop={true} style={{height:'50vh'}} />\r\n            <div style={{color:'#064be2',display:'flex',justifyContent:'center' }}>Uploading File please Wait..</div>\r\n        </div>\r\n      )\r\n      }\r\n    </>\r\n  );\r\n}\r\n",["1305","1306"],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\matchedResume\\mock.js",[],["1307","1308"],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\matchedResume\\ResumeLinearProgress.js",[],["1309","1310"],"D:\\RecruiterCommunity\\refo-Front\\src\\pages\\resumeSearch\\mock_data.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\components\\Candidates\\MatchJDDialog.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\components\\Candidates\\TabView.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\context\\CandidateDataContext.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\components\\Candidates\\ParsedResume.js",[],"D:\\RecruiterCommunity\\refo-Front\\src\\components\\Candidates\\Resume.js",[],{"ruleId":"1311","replacedBy":"1312"},{"ruleId":"1313","replacedBy":"1314"},{"ruleId":"1315","severity":1,"message":"1316","line":37,"column":8,"nodeType":"1317","messageId":"1318","endLine":37,"endColumn":15},{"ruleId":"1319","severity":1,"message":"1320","line":798,"column":5,"nodeType":"1321","endLine":798,"endColumn":56},{"ruleId":"1319","severity":1,"message":"1320","line":799,"column":5,"nodeType":"1321","endLine":799,"endColumn":34},{"ruleId":"1315","severity":1,"message":"1322","line":39,"column":8,"nodeType":"1317","messageId":"1318","endLine":39,"endColumn":13},{"ruleId":"1315","severity":1,"message":"1323","line":70,"column":8,"nodeType":"1317","messageId":"1318","endLine":70,"endColumn":18},{"ruleId":"1315","severity":1,"message":"1324","line":71,"column":8,"nodeType":"1317","messageId":"1318","endLine":71,"endColumn":17},{"ruleId":"1311","replacedBy":"1325"},{"ruleId":"1313","replacedBy":"1326"},{"ruleId":"1315","severity":1,"message":"1327","line":1,"column":17,"nodeType":"1317","messageId":"1318","endLine":1,"endColumn":26},{"ruleId":"1315","severity":1,"message":"1328","line":1,"column":46,"nodeType":"1317","messageId":"1318","endLine":1,"endColumn":56},{"ruleId":"1315","severity":1,"message":"1329","line":25,"column":7,"nodeType":"1317","messageId":"1318","endLine":25,"endColumn":12},{"ruleId":"1311","replacedBy":"1330"},{"ruleId":"1313","replacedBy":"1331"},{"ruleId":"1311","replacedBy":"1332"},{"ruleId":"1313","replacedBy":"1333"},{"ruleId":"1311","replacedBy":"1334"},{"ruleId":"1313","replacedBy":"1335"},"no-native-reassign",["1336"],"no-negated-in-lhs",["1337"],"no-unused-vars","'Invoice' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","'Badge' is defined but never used.","'walletBlue' is defined but never used.","'walletRed' is defined but never used.",["1336"],["1337"],"'useEffect' is defined but never used.","'useReducer' is defined but never used.","'theme' is assigned a value but never used.",["1336"],["1337"],["1336"],["1337"],["1336"],["1337"],"no-global-assign","no-unsafe-negation"]